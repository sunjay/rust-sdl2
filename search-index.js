var N = null;var searchIndex = {};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["c_vec"]={"doc":"Library to interface with chunks of memory allocated in C.","items":[[3,"CVecIter","c_vec","Iterator over `CVec`.",N,N],[3,"CVec","","The type representing a foreign chunk of memory.",N,N],[3,"CSliceIter","","Iterator over `CSlice`.",N,N],[3,"CSlice","","The type representing an 'unsafe' foreign chunk of memory",N,N],[11,"new","","Create a `CVec` from a raw pointer to a buffer with a given length.",0,N],[11,"new_with_dtor","","Create a `CVec` from a foreign buffer, with a given length, and a function to run upon destruction.",0,N],[11,"get","","Retrieves an element at a given index, returning `None` if the requested index is greater than the length of the vector.",0,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the requested index is greater than the length of the vector.",0,[[["self"],["usize"]],["option"]]],[11,"into_inner","","Unwrap the pointer without running the destructor",0,N],[11,"len","","Returns the number of items in this vector.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether this vector is empty.",0,[[["self"]],["bool"]]],[11,"as_cslice","","Converts to CSlice.",0,[[["self"]],["cslice"]]],[11,"iter","","Returns an iterator over CVec.",0,[[["self"]],["cveciter"]]],[11,"new","","Create a `CSlice` from a raw pointer to a buffer with a given length.",1,N],[11,"get","","Retrieves an element at a given index, returning `None` if the requested index is greater than the length of the vector.",1,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the requested index is greater than the length of the vector.",1,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the number of items in this vector.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether this vector is empty.",1,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over CVec.",1,[[["self"]],["csliceiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_mut","","View the stored data as a slice.",0,N],[11,"as_mut","","View the stored data as a slice.",1,N],[11,"as_ref","","View the stored data as a slice.",0,N],[11,"as_ref","","View the stored data as a slice.",1,N],[11,"into","","",1,[[["cslice"]],["vec"]]],[11,"into","","",0,[[["cvec"]],["vec"]]],[11,"drop","","",0,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"index","","",1,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["t"]]]],"paths":[[3,"CVec"],[3,"CSlice"],[3,"CVecIter"],[3,"CSliceIter"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",20,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",21,N],[12,"sin6_family","","",21,N],[12,"sin6_port","","",21,N],[12,"sin6_flowinfo","","",21,N],[12,"sin6_addr","","",21,N],[12,"sin6_scope_id","","",21,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",22,N],[12,"sun_family","","",22,N],[12,"sun_path","","",22,N],[3,"passwd","","",N,N],[12,"pw_name","","",23,N],[12,"pw_passwd","","",23,N],[12,"pw_uid","","",23,N],[12,"pw_gid","","",23,N],[12,"pw_change","","",23,N],[12,"pw_class","","",23,N],[12,"pw_gecos","","",23,N],[12,"pw_dir","","",23,N],[12,"pw_shell","","",23,N],[12,"pw_expire","","",23,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",24,N],[12,"ifa_name","","",24,N],[12,"ifa_flags","","",24,N],[12,"ifa_addr","","",24,N],[12,"ifa_netmask","","",24,N],[12,"ifa_dstaddr","","",24,N],[12,"ifa_data","","",24,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",25,N],[12,"tm_min","","",25,N],[12,"tm_hour","","",25,N],[12,"tm_mday","","",25,N],[12,"tm_mon","","",25,N],[12,"tm_year","","",25,N],[12,"tm_wday","","",25,N],[12,"tm_yday","","",25,N],[12,"tm_isdst","","",25,N],[12,"tm_gmtoff","","",25,N],[12,"tm_zone","","",25,N],[3,"utsname","","",N,N],[12,"sysname","","",26,N],[12,"nodename","","",26,N],[12,"release","","",26,N],[12,"version","","",26,N],[12,"machine","","",26,N],[3,"msghdr","","",N,N],[12,"msg_name","","",27,N],[12,"msg_namelen","","",27,N],[12,"msg_iov","","",27,N],[12,"msg_iovlen","","",27,N],[12,"msg_control","","",27,N],[12,"msg_controllen","","",27,N],[12,"msg_flags","","",27,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",28,N],[12,"cmsg_level","","",28,N],[12,"cmsg_type","","",28,N],[3,"fsid_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",29,N],[12,"if_name","","",29,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",30,N],[12,"aio_offset","","",30,N],[12,"aio_buf","","",30,N],[12,"aio_nbytes","","",30,N],[12,"aio_reqprio","","",30,N],[12,"aio_sigevent","","",30,N],[12,"aio_lio_opcode","","",30,N],[3,"utmpx","","",N,N],[12,"ut_user","","",31,N],[12,"ut_id","","",31,N],[12,"ut_line","","",31,N],[12,"ut_pid","","",31,N],[12,"ut_type","","",31,N],[12,"ut_tv","","",31,N],[12,"ut_host","","",31,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",32,N],[12,"gl_offs","","",32,N],[12,"gl_pathv","","",32,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",33,N],[12,"ss_family","","",33,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",34,N],[12,"ai_family","","",34,N],[12,"ai_socktype","","",34,N],[12,"ai_protocol","","",34,N],[12,"ai_addrlen","","",34,N],[12,"ai_canonname","","",34,N],[12,"ai_addr","","",34,N],[12,"ai_next","","",34,N],[3,"mach_timebase_info","","",N,N],[12,"numer","","",35,N],[12,"denom","","",35,N],[3,"stat","","",N,N],[12,"st_dev","","",36,N],[12,"st_mode","","",36,N],[12,"st_nlink","","",36,N],[12,"st_ino","","",36,N],[12,"st_uid","","",36,N],[12,"st_gid","","",36,N],[12,"st_rdev","","",36,N],[12,"st_atime","","",36,N],[12,"st_atime_nsec","","",36,N],[12,"st_mtime","","",36,N],[12,"st_mtime_nsec","","",36,N],[12,"st_ctime","","",36,N],[12,"st_ctime_nsec","","",36,N],[12,"st_birthtime","","",36,N],[12,"st_birthtime_nsec","","",36,N],[12,"st_size","","",36,N],[12,"st_blocks","","",36,N],[12,"st_blksize","","",36,N],[12,"st_flags","","",36,N],[12,"st_gen","","",36,N],[12,"st_lspare","","",36,N],[12,"st_qspare","","",36,N],[3,"dirent","","",N,N],[12,"d_ino","","",37,N],[12,"d_seekoff","","",37,N],[12,"d_reclen","","",37,N],[12,"d_namlen","","",37,N],[12,"d_type","","",37,N],[12,"d_name","","",37,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",38,N],[12,"si_errno","","",38,N],[12,"si_code","","",38,N],[12,"si_pid","","",38,N],[12,"si_uid","","",38,N],[12,"si_status","","",38,N],[12,"si_addr","","",38,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",39,N],[12,"sa_mask","","",39,N],[12,"sa_flags","","",39,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",40,N],[12,"ss_size","","",40,N],[12,"ss_flags","","",40,N],[3,"fstore_t","","",N,N],[12,"fst_flags","","",41,N],[12,"fst_posmode","","",41,N],[12,"fst_offset","","",41,N],[12,"fst_length","","",41,N],[12,"fst_bytesalloc","","",41,N],[3,"radvisory","","",N,N],[12,"ra_offset","","",42,N],[12,"ra_count","","",42,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",43,N],[12,"f_frsize","","",43,N],[12,"f_blocks","","",43,N],[12,"f_bfree","","",43,N],[12,"f_bavail","","",43,N],[12,"f_files","","",43,N],[12,"f_ffree","","",43,N],[12,"f_favail","","",43,N],[12,"f_fsid","","",43,N],[12,"f_flag","","",43,N],[12,"f_namemax","","",43,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",44,N],[12,"dli_fbase","","",44,N],[12,"dli_sname","","",44,N],[12,"dli_saddr","","",44,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",45,N],[12,"sin_family","","",45,N],[12,"sin_port","","",45,N],[12,"sin_addr","","",45,N],[12,"sin_zero","","",45,N],[3,"statfs","","",N,N],[12,"f_bsize","","",46,N],[12,"f_iosize","","",46,N],[12,"f_blocks","","",46,N],[12,"f_bfree","","",46,N],[12,"f_bavail","","",46,N],[12,"f_files","","",46,N],[12,"f_ffree","","",46,N],[12,"f_fsid","","",46,N],[12,"f_owner","","",46,N],[12,"f_type","","",46,N],[12,"f_flags","","",46,N],[12,"f_fssubtype","","",46,N],[12,"f_fstypename","","",46,N],[12,"f_mntonname","","",46,N],[12,"f_mntfromname","","",46,N],[12,"f_reserved","","",46,N],[3,"kevent","","",N,N],[12,"ident","","",47,N],[12,"filter","","",47,N],[12,"flags","","",47,N],[12,"fflags","","",47,N],[12,"data","","",47,N],[12,"udata","","",47,N],[3,"kevent64_s","","",N,N],[12,"ident","","",48,N],[12,"filter","","",48,N],[12,"flags","","",48,N],[12,"fflags","","",48,N],[12,"data","","",48,N],[12,"udata","","",48,N],[12,"ext","","",48,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",49,N],[12,"dqb_bsoftlimit","","",49,N],[12,"dqb_curbytes","","",49,N],[12,"dqb_ihardlimit","","",49,N],[12,"dqb_isoftlimit","","",49,N],[12,"dqb_curinodes","","",49,N],[12,"dqb_btime","","",49,N],[12,"dqb_itime","","",49,N],[12,"dqb_id","","",49,N],[12,"dqb_spare","","",49,N],[3,"if_msghdr","","",N,N],[12,"ifm_msglen","","",50,N],[12,"ifm_version","","",50,N],[12,"ifm_type","","",50,N],[12,"ifm_addrs","","",50,N],[12,"ifm_flags","","",50,N],[12,"ifm_index","","",50,N],[12,"ifm_data","","",50,N],[3,"termios","","",N,N],[12,"c_iflag","","",51,N],[12,"c_oflag","","",51,N],[12,"c_cflag","","",51,N],[12,"c_lflag","","",51,N],[12,"c_cc","","",51,N],[12,"c_ispeed","","",51,N],[12,"c_ospeed","","",51,N],[3,"flock","","",N,N],[12,"l_start","","",52,N],[12,"l_len","","",52,N],[12,"l_pid","","",52,N],[12,"l_type","","",52,N],[12,"l_whence","","",52,N],[3,"sf_hdtr","","",N,N],[12,"headers","","",53,N],[12,"hdr_cnt","","",53,N],[12,"trailers","","",53,N],[12,"trl_cnt","","",53,N],[3,"lconv","","",N,N],[12,"decimal_point","","",54,N],[12,"thousands_sep","","",54,N],[12,"grouping","","",54,N],[12,"int_curr_symbol","","",54,N],[12,"currency_symbol","","",54,N],[12,"mon_decimal_point","","",54,N],[12,"mon_thousands_sep","","",54,N],[12,"mon_grouping","","",54,N],[12,"positive_sign","","",54,N],[12,"negative_sign","","",54,N],[12,"int_frac_digits","","",54,N],[12,"frac_digits","","",54,N],[12,"p_cs_precedes","","",54,N],[12,"p_sep_by_space","","",54,N],[12,"n_cs_precedes","","",54,N],[12,"n_sep_by_space","","",54,N],[12,"p_sign_posn","","",54,N],[12,"n_sign_posn","","",54,N],[12,"int_p_cs_precedes","","",54,N],[12,"int_n_cs_precedes","","",54,N],[12,"int_p_sep_by_space","","",54,N],[12,"int_n_sep_by_space","","",54,N],[12,"int_p_sign_posn","","",54,N],[12,"int_n_sign_posn","","",54,N],[3,"sigevent","","",N,N],[12,"sigev_notify","","",55,N],[12,"sigev_signo","","",55,N],[12,"sigev_value","","",55,N],[12,"sigev_notify_attributes","","",55,N],[3,"proc_taskinfo","","",N,N],[12,"pti_virtual_size","","",56,N],[12,"pti_resident_size","","",56,N],[12,"pti_total_user","","",56,N],[12,"pti_total_system","","",56,N],[12,"pti_threads_user","","",56,N],[12,"pti_threads_system","","",56,N],[12,"pti_policy","","",56,N],[12,"pti_faults","","",56,N],[12,"pti_pageins","","",56,N],[12,"pti_cow_faults","","",56,N],[12,"pti_messages_sent","","",56,N],[12,"pti_messages_received","","",56,N],[12,"pti_syscalls_mach","","",56,N],[12,"pti_syscalls_unix","","",56,N],[12,"pti_csw","","",56,N],[12,"pti_threadnum","","",56,N],[12,"pti_numrunning","","",56,N],[12,"pti_priority","","",56,N],[3,"proc_bsdinfo","","",N,N],[12,"pbi_flags","","",57,N],[12,"pbi_status","","",57,N],[12,"pbi_xstatus","","",57,N],[12,"pbi_pid","","",57,N],[12,"pbi_ppid","","",57,N],[12,"pbi_uid","","",57,N],[12,"pbi_gid","","",57,N],[12,"pbi_ruid","","",57,N],[12,"pbi_rgid","","",57,N],[12,"pbi_svuid","","",57,N],[12,"pbi_svgid","","",57,N],[12,"rfu_1","","",57,N],[12,"pbi_comm","","",57,N],[12,"pbi_name","","",57,N],[12,"pbi_nfiles","","",57,N],[12,"pbi_pgid","","",57,N],[12,"pbi_pjobc","","",57,N],[12,"e_tdev","","",57,N],[12,"e_tpgid","","",57,N],[12,"pbi_nice","","",57,N],[12,"pbi_start_tvsec","","",57,N],[12,"pbi_start_tvusec","","",57,N],[3,"proc_taskallinfo","","",N,N],[12,"pbsd","","",58,N],[12,"ptinfo","","",58,N],[3,"proc_threadinfo","","",N,N],[12,"pth_user_time","","",59,N],[12,"pth_system_time","","",59,N],[12,"pth_cpu_usage","","",59,N],[12,"pth_policy","","",59,N],[12,"pth_run_state","","",59,N],[12,"pth_flags","","",59,N],[12,"pth_sleep_time","","",59,N],[12,"pth_curpri","","",59,N],[12,"pth_priority","","",59,N],[12,"pth_maxpriority","","",59,N],[12,"pth_name","","",59,N],[3,"xsw_usage","","",N,N],[12,"xsu_total","","",60,N],[12,"xsu_avail","","",60,N],[12,"xsu_used","","",60,N],[12,"xsu_pagesize","","",60,N],[12,"xsu_encrypted","","",60,N],[3,"xucred","","",N,N],[12,"cr_version","","",61,N],[12,"cr_uid","","",61,N],[12,"cr_ngroups","","",61,N],[12,"cr_groups","","",61,N],[3,"mach_header","","",N,N],[12,"magic","","",62,N],[12,"cputype","","",62,N],[12,"cpusubtype","","",62,N],[12,"filetype","","",62,N],[12,"ncmds","","",62,N],[12,"sizeofcmds","","",62,N],[12,"flags","","",62,N],[3,"mach_header_64","","",N,N],[12,"magic","","",63,N],[12,"cputype","","",63,N],[12,"cpusubtype","","",63,N],[12,"filetype","","",63,N],[12,"ncmds","","",63,N],[12,"sizeofcmds","","",63,N],[12,"flags","","",63,N],[12,"reserved","","",63,N],[3,"segment_command","","",N,N],[12,"cmd","","",64,N],[12,"cmdsize","","",64,N],[12,"segname","","",64,N],[12,"vmaddr","","",64,N],[12,"vmsize","","",64,N],[12,"fileoff","","",64,N],[12,"filesize","","",64,N],[12,"maxprot","","",64,N],[12,"initprot","","",64,N],[12,"nsects","","",64,N],[12,"flags","","",64,N],[3,"segment_command_64","","",N,N],[12,"cmd","","",65,N],[12,"cmdsize","","",65,N],[12,"segname","","",65,N],[12,"vmaddr","","",65,N],[12,"vmsize","","",65,N],[12,"fileoff","","",65,N],[12,"filesize","","",65,N],[12,"maxprot","","",65,N],[12,"initprot","","",65,N],[12,"nsects","","",65,N],[12,"flags","","",65,N],[3,"load_command","","",N,N],[12,"cmd","","",66,N],[12,"cmdsize","","",66,N],[3,"sockaddr_dl","","",N,N],[12,"sdl_len","","",67,N],[12,"sdl_family","","",67,N],[12,"sdl_index","","",67,N],[12,"sdl_type","","",67,N],[12,"sdl_nlen","","",67,N],[12,"sdl_alen","","",67,N],[12,"sdl_slen","","",67,N],[12,"sdl_data","","",67,N],[3,"sockaddr_inarp","","",N,N],[12,"sin_len","","",68,N],[12,"sin_family","","",68,N],[12,"sin_port","","",68,N],[12,"sin_addr","","",68,N],[12,"sin_srcaddr","","",68,N],[12,"sin_tos","","",68,N],[12,"sin_other","","",68,N],[3,"sockaddr_ctl","","",N,N],[12,"sc_len","","",69,N],[12,"sc_family","","",69,N],[12,"ss_sysaddr","","",69,N],[12,"sc_id","","",69,N],[12,"sc_unit","","",69,N],[12,"sc_reserved","","",69,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",70,N],[12,"ipi_spec_dst","","",70,N],[12,"ipi_addr","","",70,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",71,N],[12,"ipi6_ifindex","","",71,N],[3,"ipc_perm","","",N,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[12,"cuid","","",72,N],[12,"cgid","","",72,N],[12,"mode","","",72,N],[12,"_seq","","",72,N],[12,"_key","","",72,N],[3,"sembuf","","",N,N],[12,"sem_num","","",73,N],[12,"sem_op","","",73,N],[12,"sem_flg","","",73,N],[3,"semid_ds","","",N,N],[12,"sem_perm","","",74,N],[12,"sem_base","","",74,N],[12,"sem_nsems","","",74,N],[12,"sem_otime","","",74,N],[12,"sem_pad1","","",74,N],[12,"sem_ctime","","",74,N],[12,"sem_pad2","","",74,N],[12,"sem_pad3","","",74,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",75,N],[12,"shm_segsz","","",75,N],[12,"shm_lpid","","",75,N],[12,"shm_cpid","","",75,N],[12,"shm_nattch","","",75,N],[12,"shm_atime","","",75,N],[12,"shm_dtime","","",75,N],[12,"shm_ctime","","",75,N],[12,"shm_internal","","",75,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",76,N],[12,"ar_pro","","",76,N],[12,"ar_hln","","",76,N],[12,"ar_pln","","",76,N],[12,"ar_op","","",76,N],[3,"pthread_attr_t","","",N,N],[3,"timeval32","","",N,N],[12,"tv_sec","","",77,N],[12,"tv_usec","","",77,N],[3,"if_data","","",N,N],[12,"ifi_type","","",78,N],[12,"ifi_typelen","","",78,N],[12,"ifi_physical","","",78,N],[12,"ifi_addrlen","","",78,N],[12,"ifi_hdrlen","","",78,N],[12,"ifi_recvquota","","",78,N],[12,"ifi_xmitquota","","",78,N],[12,"ifi_unused1","","",78,N],[12,"ifi_mtu","","",78,N],[12,"ifi_metric","","",78,N],[12,"ifi_baudrate","","",78,N],[12,"ifi_ipackets","","",78,N],[12,"ifi_ierrors","","",78,N],[12,"ifi_opackets","","",78,N],[12,"ifi_oerrors","","",78,N],[12,"ifi_collisions","","",78,N],[12,"ifi_ibytes","","",78,N],[12,"ifi_obytes","","",78,N],[12,"ifi_imcasts","","",78,N],[12,"ifi_omcasts","","",78,N],[12,"ifi_iqdrops","","",78,N],[12,"ifi_noproto","","",78,N],[12,"ifi_recvtiming","","",78,N],[12,"ifi_xmittiming","","",78,N],[12,"ifi_lastchange","","",78,N],[12,"ifi_unused2","","",78,N],[12,"ifi_hwassist","","",78,N],[12,"ifi_reserved1","","",78,N],[12,"ifi_reserved2","","",78,N],[3,"bpf_hdr","","",N,N],[12,"bh_tstamp","","",79,N],[12,"bh_caplen","","",79,N],[12,"bh_datalen","","",79,N],[12,"bh_hdrlen","","",79,N],[19,"semun","","",N,N],[12,"val","","",80,N],[12,"buf","","",80,N],[12,"array","","",80,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"setgroups","","",N,N],[5,"ioctl","","",N,N],[5,"kqueue","","",N,N],[5,"unmount","","",N,N],[5,"syscall","","",N,N],[5,"getpwent","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"getprogname","","",N,N],[5,"setprogname","","",N,N],[5,"getloadavg","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"getpeereid","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sync","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"acct","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"chflags","","",N,N],[5,"fchflags","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"lio_listio","","",N,N],[5,"dirfd","","",N,N],[5,"lutimes","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"utmpxname","","",N,N],[5,"getnameinfo","","",N,N],[5,"mincore","","",N,N],[5,"sysctlnametomib","","",N,N],[5,"mprotect","","",N,N],[5,"semget","","",N,N],[5,"semctl","","",N,N],[5,"semop","","",N,N],[5,"shm_open","","",N,N],[5,"ftok","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"shmget","","",N,N],[5,"sysctl","","",N,N],[5,"sysctlbyname","","",N,N],[5,"mach_absolute_time","","",N,N],[5,"mach_timebase_info","","",N,N],[5,"pthread_setname_np","","",N,N],[5,"pthread_get_stackaddr_np","","",N,N],[5,"pthread_get_stacksize_np","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"__error","","",N,N],[5,"backtrace","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"kevent","","",N,N],[5,"kevent64","","",N,N],[5,"mount","","",N,N],[5,"ptrace","","",N,N],[5,"quotactl","","",N,N],[5,"sethostname","","",N,N],[5,"sendfile","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"localeconv_l","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"querylocale","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"getxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"renamex_np","","",N,N],[5,"renameatx_np","","",N,N],[5,"fremovexattr","","",N,N],[5,"getgrouplist","","",N,N],[5,"initgroups","","",N,N],[5,"waitid","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"settimeofday","","",N,N],[5,"_dyld_image_count","","",N,N],[5,"_dyld_get_image_header","","",N,N],[5,"_dyld_get_image_vmaddr_slide","","",N,N],[5,"_dyld_get_image_name","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"exchangedata","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"wchar_t","","",N,N],[6,"off_t","","",N,N],[6,"useconds_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"socklen_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_t","","",N,N],[6,"nfds_t","","",N,N],[6,"c_char","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"ino_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"rlim_t","","",N,N],[6,"mach_timebase_info_data_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"sigset_t","","",N,N],[6,"clockid_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"nl_item","","",N,N],[6,"id_t","","",N,N],[6,"sem_t","","",N,N],[6,"idtype_t","","",N,N],[6,"integer_t","","",N,N],[6,"cpu_type_t","","",N,N],[6,"cpu_subtype_t","","",N,N],[6,"vm_prot_t","","",N,N],[6,"posix_spawnattr_t","","",N,N],[6,"posix_spawn_file_actions_t","","",N,N],[6,"key_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"boolean_t","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PATH_MAX","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGINFO","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"NCCS","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"O_SHLOCK","","",N,N],[17,"O_EXLOCK","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VDSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VMIN","","",N,N],[17,"VTIME","","",N,N],[17,"VSTATUS","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"OXTABS","","",N,N],[17,"ONOEOT","","",N,N],[17,"CIGNORE","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"ALTWERASE","","",N,N],[17,"IEXTEN","","",N,N],[17,"EXTPROC","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"NOKERNINFO","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"MDMBUF","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_SELF","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"_UTX_USERSIZE","","",N,N],[17,"_UTX_LINESIZE","","",N,N],[17,"_UTX_IDSIZE","","",N,N],[17,"_UTX_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"SIGNATURE","","",N,N],[17,"SHUTDOWN_TIME","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"CODESET","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"D_MD_ORDER","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGEMT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"PT_TRACE_ME","","",N,N],[17,"PT_READ_I","","",N,N],[17,"PT_READ_D","","",N,N],[17,"PT_READ_U","","",N,N],[17,"PT_WRITE_I","","",N,N],[17,"PT_WRITE_D","","",N,N],[17,"PT_WRITE_U","","",N,N],[17,"PT_CONTINUE","","",N,N],[17,"PT_KILL","","",N,N],[17,"PT_STEP","","",N,N],[17,"PT_ATTACH","","",N,N],[17,"PT_DETACH","","",N,N],[17,"PT_SIGEXC","","",N,N],[17,"PT_THUPDATE","","",N,N],[17,"PT_ATTACHEXC","","",N,N],[17,"PT_FORCEQUOTA","","",N,N],[17,"PT_DENY_ATTACH","","",N,N],[17,"PT_FIRSTMACH","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"VM_FLAGS_FIXED","","",N,N],[17,"VM_FLAGS_ANYWHERE","","",N,N],[17,"VM_FLAGS_PURGABLE","","",N,N],[17,"VM_FLAGS_RANDOM_ADDR","","",N,N],[17,"VM_FLAGS_NO_CACHE","","",N,N],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",N,N],[17,"VM_FLAGS_RESILIENT_MEDIA","","",N,N],[17,"VM_FLAGS_OVERWRITE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_MASK","","",N,N],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",N,N],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",N,N],[17,"VM_FLAGS_ALIAS_MASK","","",N,N],[17,"VM_FLAGS_USER_ALLOCATE","","",N,N],[17,"VM_FLAGS_USER_MAP","","",N,N],[17,"VM_FLAGS_USER_REMAP","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",N,N],[17,"SUPERPAGE_NONE","","",N,N],[17,"SUPERPAGE_SIZE_ANY","","",N,N],[17,"VM_FLAGS_SUPERPAGE_NONE","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",N,N],[17,"SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",N,N],[17,"VM_MEMORY_MALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_SMALL","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE","","",N,N],[17,"VM_MEMORY_MALLOC_HUGE","","",N,N],[17,"VM_MEMORY_SBRK","","",N,N],[17,"VM_MEMORY_REALLOC","","",N,N],[17,"VM_MEMORY_MALLOC_TINY","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",N,N],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",N,N],[17,"VM_MEMORY_ANALYSIS_TOOL","","",N,N],[17,"VM_MEMORY_MALLOC_NANO","","",N,N],[17,"VM_MEMORY_MACH_MSG","","",N,N],[17,"VM_MEMORY_IOKIT","","",N,N],[17,"VM_MEMORY_STACK","","",N,N],[17,"VM_MEMORY_GUARD","","",N,N],[17,"VM_MEMORY_SHARED_PMAP","","",N,N],[17,"VM_MEMORY_DYLIB","","",N,N],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",N,N],[17,"VM_MEMORY_UNSHARED_PMAP","","",N,N],[17,"VM_MEMORY_APPKIT","","",N,N],[17,"VM_MEMORY_FOUNDATION","","",N,N],[17,"VM_MEMORY_COREGRAPHICS","","",N,N],[17,"VM_MEMORY_CORESERVICES","","",N,N],[17,"VM_MEMORY_CARBON","","",N,N],[17,"VM_MEMORY_JAVA","","",N,N],[17,"VM_MEMORY_COREDATA","","",N,N],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",N,N],[17,"VM_MEMORY_ATS","","",N,N],[17,"VM_MEMORY_LAYERKIT","","",N,N],[17,"VM_MEMORY_CGIMAGE","","",N,N],[17,"VM_MEMORY_TCMALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",N,N],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",N,N],[17,"VM_MEMORY_DYLD","","",N,N],[17,"VM_MEMORY_DYLD_MALLOC","","",N,N],[17,"VM_MEMORY_SQLITE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",N,N],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",N,N],[17,"VM_MEMORY_GLSL","","",N,N],[17,"VM_MEMORY_OPENCL","","",N,N],[17,"VM_MEMORY_COREIMAGE","","",N,N],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",N,N],[17,"VM_MEMORY_IMAGEIO","","",N,N],[17,"VM_MEMORY_COREPROFILE","","",N,N],[17,"VM_MEMORY_ASSETSD","","",N,N],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",N,N],[17,"VM_MEMORY_LIBDISPATCH","","",N,N],[17,"VM_MEMORY_ACCELERATE","","",N,N],[17,"VM_MEMORY_COREUI","","",N,N],[17,"VM_MEMORY_COREUIFILE","","",N,N],[17,"VM_MEMORY_GENEALOGY","","",N,N],[17,"VM_MEMORY_RAWCAMERA","","",N,N],[17,"VM_MEMORY_CORPSEINFO","","",N,N],[17,"VM_MEMORY_ASL","","",N,N],[17,"VM_MEMORY_SWIFT_RUNTIME","","",N,N],[17,"VM_MEMORY_SWIFT_METADATA","","",N,N],[17,"VM_MEMORY_DHMM","","",N,N],[17,"VM_MEMORY_SCENEKIT","","",N,N],[17,"VM_MEMORY_SKYWALK","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",N,N],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_KILLPAGES","","",N,N],[17,"MS_DEACTIVATE","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EAGAIN","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"EALREADY","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"ELOOP","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"EPROCLIM","","",N,N],[17,"EUSERS","","",N,N],[17,"EDQUOT","","",N,N],[17,"ESTALE","","",N,N],[17,"EREMOTE","","",N,N],[17,"EBADRPC","","",N,N],[17,"ERPCMISMATCH","","",N,N],[17,"EPROGUNAVAIL","","",N,N],[17,"EPROGMISMATCH","","",N,N],[17,"EPROCUNAVAIL","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"EFTYPE","","",N,N],[17,"EAUTH","","",N,N],[17,"ENEEDAUTH","","",N,N],[17,"EPWROFF","","",N,N],[17,"EDEVERR","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"EBADEXEC","","",N,N],[17,"EBADARCH","","",N,N],[17,"ESHLIBVERS","","",N,N],[17,"EBADMACHO","","",N,N],[17,"ECANCELED","","",N,N],[17,"EIDRM","","",N,N],[17,"ENOMSG","","",N,N],[17,"EILSEQ","","",N,N],[17,"ENOATTR","","",N,N],[17,"EBADMSG","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"ENODATA","","",N,N],[17,"ENOLINK","","",N,N],[17,"ENOSR","","",N,N],[17,"ENOSTR","","",N,N],[17,"EPROTO","","",N,N],[17,"ETIME","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"ENOPOLICY","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"EQFULL","","",N,N],[17,"ELAST","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_PREALLOCATE","","",N,N],[17,"F_RDADVISE","","",N,N],[17,"F_RDAHEAD","","",N,N],[17,"F_NOCACHE","","",N,N],[17,"F_GETPATH","","",N,N],[17,"F_FULLFSYNC","","",N,N],[17,"F_FREEZE_FS","","",N,N],[17,"F_THAW_FS","","",N,N],[17,"F_GLOBAL_NOCACHE","","",N,N],[17,"F_NODIRECT","","",N,N],[17,"F_ALLOCATECONTIG","","",N,N],[17,"F_ALLOCATEALL","","",N,N],[17,"F_PEOFPOSMODE","","",N,N],[17,"F_VOLPOSMODE","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_EACCESS","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"TIOCMODG","","",N,N],[17,"TIOCMODS","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCFLUSH","","",N,N],[17,"TIOCGETD","","",N,N],[17,"TIOCSETD","","",N,N],[17,"TIOCIXON","","",N,N],[17,"TIOCIXOFF","","",N,N],[17,"TIOCSBRK","","",N,N],[17,"TIOCCBRK","","",N,N],[17,"TIOCSDTR","","",N,N],[17,"TIOCCDTR","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCNOTTY","","",N,N],[17,"TIOCPKT","","",N,N],[17,"TIOCPKT_DATA","","",N,N],[17,"TIOCPKT_FLUSHREAD","","",N,N],[17,"TIOCPKT_FLUSHWRITE","","",N,N],[17,"TIOCPKT_STOP","","",N,N],[17,"TIOCPKT_START","","",N,N],[17,"TIOCPKT_NOSTOP","","",N,N],[17,"TIOCPKT_DOSTOP","","",N,N],[17,"TIOCPKT_IOCTL","","",N,N],[17,"TIOCSTOP","","",N,N],[17,"TIOCSTART","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCREMOTE","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCUCNTL","","",N,N],[17,"TIOCSTAT","","",N,N],[17,"TIOCSCONS","","",N,N],[17,"TIOCCONS","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCEXT","","",N,N],[17,"TIOCSIG","","",N,N],[17,"TIOCDRAIN","","",N,N],[17,"TIOCMSDTRWAIT","","",N,N],[17,"TIOCMGDTRWAIT","","",N,N],[17,"TIOCSDRAINWAIT","","",N,N],[17,"TIOCGDRAINWAIT","","",N,N],[17,"TIOCDSIMICROCODE","","",N,N],[17,"TIOCPTYGRANT","","",N,N],[17,"TIOCPTYGNAME","","",N,N],[17,"TIOCPTYUNLK","","",N,N],[17,"FIONCLEX","","",N,N],[17,"FIONREAD","","",N,N],[17,"FIOASYNC","","",N,N],[17,"FIOSETOWN","","",N,N],[17,"FIOGETOWN","","",N,N],[17,"FIODTYPE","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"B7200","","",N,N],[17,"B14400","","",N,N],[17,"B28800","","",N,N],[17,"B57600","","",N,N],[17,"B76800","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"SIGTRAP","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIM_NLIMITS","","",N,N],[17,"_RLIMIT_POSIX_FLAG","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_ZERO_WIRED_PAGES","","",N,N],[17,"MADV_FREE_REUSABLE","","",N,N],[17,"MADV_FREE_REUSE","","",N,N],[17,"MADV_CAN_REUSE","","",N,N],[17,"MINCORE_INCORE","","",N,N],[17,"MINCORE_REFERENCED","","",N,N],[17,"MINCORE_MODIFIED","","",N,N],[17,"MINCORE_REFERENCED_OTHER","","",N,N],[17,"MINCORE_MODIFIED_OTHER","","",N,N],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_GGP","","gateway2 (deprecated)",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_ST","","Stream protocol II.",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PIGP","","private interior gateway",N,N],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII","","network voice protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_ARGUS","","Argus",N,N],[17,"IPPROTO_EMCON","","EMCON",N,N],[17,"IPPROTO_XNET","","Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS","","Chaos",N,N],[17,"IPPROTO_MUX","","Multiplexing",N,N],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP","","Host Monitoring",N,N],[17,"IPPROTO_PRM","","Packet Radio Measurement",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TRUNK1","","Trunk-1",N,N],[17,"IPPROTO_TRUNK2","","Trunk-2",N,N],[17,"IPPROTO_LEAF1","","Leaf-1",N,N],[17,"IPPROTO_LEAF2","","Leaf-2",N,N],[17,"IPPROTO_RDP","","Reliable Data",N,N],[17,"IPPROTO_IRTP","","Reliable Transaction",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT","","Bulk Data Transfer",N,N],[17,"IPPROTO_NSP","","Network Services",N,N],[17,"IPPROTO_INP","","Merit Internodal",N,N],[17,"IPPROTO_SEP","","Sequential Exchange",N,N],[17,"IPPROTO_3PC","","Third Party Connect",N,N],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP","","XTP",N,N],[17,"IPPROTO_DDP","","Datagram Delivery",N,N],[17,"IPPROTO_CMTP","","Control Message Transport",N,N],[17,"IPPROTO_TPXX","","TP++ Transport",N,N],[17,"IPPROTO_IL","","IL transport protocol",N,N],[17,"IPPROTO_SDRP","","Source Demand Routing",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP","","InterDomain Routing",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_MHRP","","Mobile Host Routing",N,N],[17,"IPPROTO_BHA","","BHA",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE","","IP with encryption",N,N],[17,"IPPROTO_NHRP","","Next Hop Resolution",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_AHIP","","any host internal protocol",N,N],[17,"IPPROTO_CFTP","","CFTP",N,N],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",N,N],[17,"IPPROTO_RVD","","Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC","","Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS","","Any distributed FS",N,N],[17,"IPPROTO_SATMON","","Satnet Monitoring",N,N],[17,"IPPROTO_VISA","","VISA Protocol",N,N],[17,"IPPROTO_IPCV","","Packet Core Utility",N,N],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN","","Wang Span Network",N,N],[17,"IPPROTO_PVP","","Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON","","ISO cnlp",N,N],[17,"IPPROTO_VMTP","","VMTP",N,N],[17,"IPPROTO_SVMTP","","Secure VMTP",N,N],[17,"IPPROTO_VINES","","Banyon VINES",N,N],[17,"IPPROTO_TTP","","TTP",N,N],[17,"IPPROTO_IGP","","NSFNET-IGP",N,N],[17,"IPPROTO_DGP","","dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF","","TCF",N,N],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP","","OSPFIGP",N,N],[17,"IPPROTO_SRPC","","Strite RPC protocol",N,N],[17,"IPPROTO_LARP","","Locus Address Resoloution",N,N],[17,"IPPROTO_MTP","","Multicast Transport",N,N],[17,"IPPROTO_AX25","","AX.25 Frames",N,N],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",N,N],[17,"IPPROTO_MICP","","Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_APES","","any private encr. scheme",N,N],[17,"IPPROTO_GMTP","","GMTP",N,N],[17,"IPPROTO_PIM","","Protocol Independent Mcast",N,N],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",N,N],[17,"IPPROTO_PGM","","PGM",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this pkt is done\".",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_IMPLINK","","",N,N],[17,"AF_PUP","","",N,N],[17,"AF_CHAOS","","",N,N],[17,"AF_NS","","",N,N],[17,"AF_ISO","","",N,N],[17,"AF_OSI","","",N,N],[17,"AF_ECMA","","",N,N],[17,"AF_DATAKIT","","",N,N],[17,"AF_CCITT","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_DLI","","",N,N],[17,"AF_LAT","","",N,N],[17,"AF_HYLINK","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_LINK","","",N,N],[17,"pseudo_AF_XTP","","",N,N],[17,"AF_COIP","","",N,N],[17,"AF_CNT","","",N,N],[17,"pseudo_AF_RTIP","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_SIP","","",N,N],[17,"pseudo_AF_PIP","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_E164","","",N,N],[17,"pseudo_AF_KEY","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_NATM","","",N,N],[17,"AF_SYSTEM","","",N,N],[17,"AF_NETBIOS","","",N,N],[17,"AF_PPP","","",N,N],[17,"pseudo_AF_HDRCMPLT","","",N,N],[17,"AF_SYS_CONTROL","","",N,N],[17,"SYSPROTO_EVENT","","",N,N],[17,"SYSPROTO_CONTROL","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_IMPLINK","","",N,N],[17,"PF_PUP","","",N,N],[17,"PF_CHAOS","","",N,N],[17,"PF_NS","","",N,N],[17,"PF_ISO","","",N,N],[17,"PF_OSI","","",N,N],[17,"PF_ECMA","","",N,N],[17,"PF_DATAKIT","","",N,N],[17,"PF_CCITT","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_DLI","","",N,N],[17,"PF_LAT","","",N,N],[17,"PF_HYLINK","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_LINK","","",N,N],[17,"PF_XTP","","",N,N],[17,"PF_COIP","","",N,N],[17,"PF_CNT","","",N,N],[17,"PF_SIP","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_RTIP","","",N,N],[17,"PF_PIP","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_NATM","","",N,N],[17,"PF_SYSTEM","","",N,N],[17,"PF_NETBIOS","","",N,N],[17,"PF_PPP","","",N,N],[17,"NET_RT_DUMP","","",N,N],[17,"NET_RT_FLAGS","","",N,N],[17,"NET_RT_IFLIST","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"SOCK_MAXADDRLEN","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IPV6_JOIN_GROUP","","",N,N],[17,"IPV6_LEAVE_GROUP","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"TCP_NOPUSH","","",N,N],[17,"TCP_NOOPT","","",N,N],[17,"TCP_KEEPALIVE","","",N,N],[17,"SOL_LOCAL","","",N,N],[17,"LOCAL_PEERCRED","","",N,N],[17,"LOCAL_PEERPID","","",N,N],[17,"LOCAL_PEEREPID","","",N,N],[17,"LOCAL_PEERUUID","","",N,N],[17,"LOCAL_PEEREUUID","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_USELOOPBACK","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_TIMESTAMP_MONOTONIC","","",N,N],[17,"SO_DONTTRUNC","","",N,N],[17,"SO_WANTMORE","","",N,N],[17,"SO_WANTOOBFLAG","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_LABEL","","",N,N],[17,"SO_PEERLABEL","","",N,N],[17,"SO_NREAD","","",N,N],[17,"SO_NKE","","",N,N],[17,"SO_NOSIGPIPE","","",N,N],[17,"SO_NOADDRERR","","",N,N],[17,"SO_NWRITE","","",N,N],[17,"SO_REUSESHAREUID","","",N,N],[17,"SO_NOTIFYCONFLICT","","",N,N],[17,"SO_RANDOMPORT","","",N,N],[17,"SO_NP_EXTENSIONS","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOF","","",N,N],[17,"MSG_FLUSH","","",N,N],[17,"MSG_HOLD","","",N,N],[17,"MSG_SEND","","",N,N],[17,"MSG_HAVEMORE","","",N,N],[17,"MSG_RCVMORE","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SCM_CREDS","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_OACTIVE","","",N,N],[17,"IFF_SIMPLEX","","",N,N],[17,"IFF_LINK0","","",N,N],[17,"IFF_LINK1","","",N,N],[17,"IFF_LINK2","","",N,N],[17,"IFF_ALTPHYS","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"MAP_COPY","","",N,N],[17,"MAP_RENAME","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_NOEXTEND","","",N,N],[17,"MAP_HASSEMAPHORE","","",N,N],[17,"MAP_NOCACHE","","",N,N],[17,"MAP_JIT","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"_PTHREAD_MUTEX_SIG_init","","",N,N],[17,"_PTHREAD_COND_SIG_init","","",N,N],[17,"_PTHREAD_RWLOCK_SIG_init","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"EVFILT_READ","","",N,N],[17,"EVFILT_WRITE","","",N,N],[17,"EVFILT_AIO","","",N,N],[17,"EVFILT_VNODE","","",N,N],[17,"EVFILT_PROC","","",N,N],[17,"EVFILT_SIGNAL","","",N,N],[17,"EVFILT_TIMER","","",N,N],[17,"EVFILT_MACHPORT","","",N,N],[17,"EVFILT_FS","","",N,N],[17,"EVFILT_USER","","",N,N],[17,"EVFILT_VM","","",N,N],[17,"EV_ADD","","",N,N],[17,"EV_DELETE","","",N,N],[17,"EV_ENABLE","","",N,N],[17,"EV_DISABLE","","",N,N],[17,"EV_ONESHOT","","",N,N],[17,"EV_CLEAR","","",N,N],[17,"EV_RECEIPT","","",N,N],[17,"EV_DISPATCH","","",N,N],[17,"EV_FLAG0","","",N,N],[17,"EV_POLL","","",N,N],[17,"EV_FLAG1","","",N,N],[17,"EV_OOBAND","","",N,N],[17,"EV_ERROR","","",N,N],[17,"EV_EOF","","",N,N],[17,"EV_SYSFLAGS","","",N,N],[17,"NOTE_TRIGGER","","",N,N],[17,"NOTE_FFNOP","","",N,N],[17,"NOTE_FFAND","","",N,N],[17,"NOTE_FFOR","","",N,N],[17,"NOTE_FFCOPY","","",N,N],[17,"NOTE_FFCTRLMASK","","",N,N],[17,"NOTE_FFLAGSMASK","","",N,N],[17,"NOTE_LOWAT","","",N,N],[17,"NOTE_DELETE","","",N,N],[17,"NOTE_WRITE","","",N,N],[17,"NOTE_EXTEND","","",N,N],[17,"NOTE_ATTRIB","","",N,N],[17,"NOTE_LINK","","",N,N],[17,"NOTE_RENAME","","",N,N],[17,"NOTE_REVOKE","","",N,N],[17,"NOTE_NONE","","",N,N],[17,"NOTE_EXIT","","",N,N],[17,"NOTE_FORK","","",N,N],[17,"NOTE_EXEC","","",N,N],[17,"NOTE_REAP","","",N,N],[17,"NOTE_SIGNAL","","",N,N],[17,"NOTE_EXITSTATUS","","",N,N],[17,"NOTE_EXIT_DETAIL","","",N,N],[17,"NOTE_PDATAMASK","","",N,N],[17,"NOTE_PCTRLMASK","","",N,N],[17,"NOTE_EXIT_REPARENTED","","",N,N],[17,"NOTE_EXIT_DETAIL_MASK","","",N,N],[17,"NOTE_EXIT_DECRYPTFAIL","","",N,N],[17,"NOTE_EXIT_MEMORY","","",N,N],[17,"NOTE_EXIT_CSERROR","","",N,N],[17,"NOTE_VM_PRESSURE","","",N,N],[17,"NOTE_VM_PRESSURE_TERMINATE","","",N,N],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",N,N],[17,"NOTE_VM_ERROR","","",N,N],[17,"NOTE_SECONDS","","",N,N],[17,"NOTE_USECONDS","","",N,N],[17,"NOTE_NSECONDS","","",N,N],[17,"NOTE_ABSOLUTE","","",N,N],[17,"NOTE_LEEWAY","","",N,N],[17,"NOTE_CRITICAL","","",N,N],[17,"NOTE_BACKGROUND","","",N,N],[17,"NOTE_TRACK","","",N,N],[17,"NOTE_TRACKERR","","",N,N],[17,"NOTE_CHILD","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"NLDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"OFDEL","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"CR0","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF0","","",N,N],[17,"FF1","","",N,N],[17,"BS0","","",N,N],[17,"BS1","","",N,N],[17,"TAB3","","",N,N],[17,"VT0","","",N,N],[17,"VT1","","",N,N],[17,"IUTF8","","",N,N],[17,"CRTSCTS","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"RENAME_SWAP","","",N,N],[17,"RENAME_EXCL","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_FIRST","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"_WSTOPPED","","",N,N],[17,"LOG_NETINFO","","",N,N],[17,"LOG_REMOTEAUTH","","",N,N],[17,"LOG_INSTALL","","",N,N],[17,"LOG_RAS","","",N,N],[17,"LOG_LAUNCHD","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"CTLTYPE","","",N,N],[17,"CTLTYPE_NODE","","",N,N],[17,"CTLTYPE_INT","","",N,N],[17,"CTLTYPE_STRING","","",N,N],[17,"CTLTYPE_QUAD","","",N,N],[17,"CTLTYPE_OPAQUE","","",N,N],[17,"CTLTYPE_STRUCT","","",N,N],[17,"CTLFLAG_RD","","",N,N],[17,"CTLFLAG_WR","","",N,N],[17,"CTLFLAG_RW","","",N,N],[17,"CTLFLAG_NOLOCK","","",N,N],[17,"CTLFLAG_ANYBODY","","",N,N],[17,"CTLFLAG_SECURE","","",N,N],[17,"CTLFLAG_MASKED","","",N,N],[17,"CTLFLAG_NOAUTO","","",N,N],[17,"CTLFLAG_KERN","","",N,N],[17,"CTLFLAG_LOCKED","","",N,N],[17,"CTLFLAG_OID2","","",N,N],[17,"CTL_UNSPEC","","",N,N],[17,"CTL_KERN","","",N,N],[17,"CTL_VM","","",N,N],[17,"CTL_VFS","","",N,N],[17,"CTL_NET","","",N,N],[17,"CTL_DEBUG","","",N,N],[17,"CTL_HW","","",N,N],[17,"CTL_MACHDEP","","",N,N],[17,"CTL_USER","","",N,N],[17,"CTL_MAXID","","",N,N],[17,"KERN_OSTYPE","","",N,N],[17,"KERN_OSRELEASE","","",N,N],[17,"KERN_OSREV","","",N,N],[17,"KERN_VERSION","","",N,N],[17,"KERN_MAXVNODES","","",N,N],[17,"KERN_MAXPROC","","",N,N],[17,"KERN_MAXFILES","","",N,N],[17,"KERN_ARGMAX","","",N,N],[17,"KERN_SECURELVL","","",N,N],[17,"KERN_HOSTNAME","","",N,N],[17,"KERN_HOSTID","","",N,N],[17,"KERN_CLOCKRATE","","",N,N],[17,"KERN_VNODE","","",N,N],[17,"KERN_PROC","","",N,N],[17,"KERN_FILE","","",N,N],[17,"KERN_PROF","","",N,N],[17,"KERN_POSIX1","","",N,N],[17,"KERN_NGROUPS","","",N,N],[17,"KERN_JOB_CONTROL","","",N,N],[17,"KERN_SAVED_IDS","","",N,N],[17,"KERN_BOOTTIME","","",N,N],[17,"KERN_NISDOMAINNAME","","",N,N],[17,"KERN_DOMAINNAME","","",N,N],[17,"KERN_MAXPARTITIONS","","",N,N],[17,"KERN_KDEBUG","","",N,N],[17,"KERN_UPDATEINTERVAL","","",N,N],[17,"KERN_OSRELDATE","","",N,N],[17,"KERN_NTP_PLL","","",N,N],[17,"KERN_BOOTFILE","","",N,N],[17,"KERN_MAXFILESPERPROC","","",N,N],[17,"KERN_MAXPROCPERUID","","",N,N],[17,"KERN_DUMPDEV","","",N,N],[17,"KERN_IPC","","",N,N],[17,"KERN_DUMMY","","",N,N],[17,"KERN_PS_STRINGS","","",N,N],[17,"KERN_USRSTACK32","","",N,N],[17,"KERN_LOGSIGEXIT","","",N,N],[17,"KERN_SYMFILE","","",N,N],[17,"KERN_PROCARGS","","",N,N],[17,"KERN_NETBOOT","","",N,N],[17,"KERN_SYSV","","",N,N],[17,"KERN_AFFINITY","","",N,N],[17,"KERN_TRANSLATE","","",N,N],[17,"KERN_CLASSIC","","",N,N],[17,"KERN_EXEC","","",N,N],[17,"KERN_CLASSICHANDLER","","",N,N],[17,"KERN_AIOMAX","","",N,N],[17,"KERN_AIOPROCMAX","","",N,N],[17,"KERN_AIOTHREADS","","",N,N],[17,"KERN_COREFILE","","",N,N],[17,"KERN_COREDUMP","","",N,N],[17,"KERN_SUGID_COREDUMP","","",N,N],[17,"KERN_PROCDELAYTERM","","",N,N],[17,"KERN_SHREG_PRIVATIZABLE","","",N,N],[17,"KERN_LOW_PRI_WINDOW","","",N,N],[17,"KERN_LOW_PRI_DELAY","","",N,N],[17,"KERN_POSIX","","",N,N],[17,"KERN_USRSTACK64","","",N,N],[17,"KERN_NX_PROTECTION","","",N,N],[17,"KERN_TFP","","",N,N],[17,"KERN_PROCNAME","","",N,N],[17,"KERN_THALTSTACK","","",N,N],[17,"KERN_SPECULATIVE_READS","","",N,N],[17,"KERN_OSVERSION","","",N,N],[17,"KERN_SAFEBOOT","","",N,N],[17,"KERN_RAGEVNODE","","",N,N],[17,"KERN_TTY","","",N,N],[17,"KERN_CHECKOPENEVT","","",N,N],[17,"KERN_THREADNAME","","",N,N],[17,"KERN_MAXID","","",N,N],[17,"KERN_RAGE_PROC","","",N,N],[17,"KERN_RAGE_THREAD","","",N,N],[17,"KERN_UNRAGE_PROC","","",N,N],[17,"KERN_UNRAGE_THREAD","","",N,N],[17,"KERN_OPENEVT_PROC","","",N,N],[17,"KERN_UNOPENEVT_PROC","","",N,N],[17,"KERN_TFP_POLICY","","",N,N],[17,"KERN_TFP_POLICY_DENY","","",N,N],[17,"KERN_TFP_POLICY_DEFAULT","","",N,N],[17,"KERN_KDEFLAGS","","",N,N],[17,"KERN_KDDFLAGS","","",N,N],[17,"KERN_KDENABLE","","",N,N],[17,"KERN_KDSETBUF","","",N,N],[17,"KERN_KDGETBUF","","",N,N],[17,"KERN_KDSETUP","","",N,N],[17,"KERN_KDREMOVE","","",N,N],[17,"KERN_KDSETREG","","",N,N],[17,"KERN_KDGETREG","","",N,N],[17,"KERN_KDREADTR","","",N,N],[17,"KERN_KDPIDTR","","",N,N],[17,"KERN_KDTHRMAP","","",N,N],[17,"KERN_KDPIDEX","","",N,N],[17,"KERN_KDSETRTCDEC","","",N,N],[17,"KERN_KDGETENTROPY","","",N,N],[17,"KERN_KDWRITETR","","",N,N],[17,"KERN_KDWRITEMAP","","",N,N],[17,"KERN_KDENABLE_BG_TRACE","","",N,N],[17,"KERN_KDDISABLE_BG_TRACE","","",N,N],[17,"KERN_KDREADCURTHRMAP","","",N,N],[17,"KERN_KDSET_TYPEFILTER","","",N,N],[17,"KERN_KDBUFWAIT","","",N,N],[17,"KERN_KDCPUMAP","","",N,N],[17,"KERN_PROC_ALL","","",N,N],[17,"KERN_PROC_PID","","",N,N],[17,"KERN_PROC_PGRP","","",N,N],[17,"KERN_PROC_SESSION","","",N,N],[17,"KERN_PROC_TTY","","",N,N],[17,"KERN_PROC_UID","","",N,N],[17,"KERN_PROC_RUID","","",N,N],[17,"KERN_PROC_LCID","","",N,N],[17,"KIPC_MAXSOCKBUF","","",N,N],[17,"KIPC_SOCKBUF_WASTE","","",N,N],[17,"KIPC_SOMAXCONN","","",N,N],[17,"KIPC_MAX_LINKHDR","","",N,N],[17,"KIPC_MAX_PROTOHDR","","",N,N],[17,"KIPC_MAX_HDR","","",N,N],[17,"KIPC_MAX_DATALEN","","",N,N],[17,"KIPC_MBSTAT","","",N,N],[17,"KIPC_NMBCLUSTERS","","",N,N],[17,"KIPC_SOQLIMITCOMPAT","","",N,N],[17,"VM_METER","","",N,N],[17,"VM_LOADAVG","","",N,N],[17,"VM_MACHFACTOR","","",N,N],[17,"VM_SWAPUSAGE","","",N,N],[17,"VM_MAXID","","",N,N],[17,"HW_MACHINE","","",N,N],[17,"HW_MODEL","","",N,N],[17,"HW_NCPU","","",N,N],[17,"HW_BYTEORDER","","",N,N],[17,"HW_PHYSMEM","","",N,N],[17,"HW_USERMEM","","",N,N],[17,"HW_PAGESIZE","","",N,N],[17,"HW_DISKNAMES","","",N,N],[17,"HW_DISKSTATS","","",N,N],[17,"HW_EPOCH","","",N,N],[17,"HW_FLOATINGPT","","",N,N],[17,"HW_MACHINE_ARCH","","",N,N],[17,"HW_VECTORUNIT","","",N,N],[17,"HW_BUS_FREQ","","",N,N],[17,"HW_CPU_FREQ","","",N,N],[17,"HW_CACHELINE","","",N,N],[17,"HW_L1ICACHESIZE","","",N,N],[17,"HW_L1DCACHESIZE","","",N,N],[17,"HW_L2SETTINGS","","",N,N],[17,"HW_L2CACHESIZE","","",N,N],[17,"HW_L3SETTINGS","","",N,N],[17,"HW_L3CACHESIZE","","",N,N],[17,"HW_TB_FREQ","","",N,N],[17,"HW_MEMSIZE","","",N,N],[17,"HW_AVAILCPU","","",N,N],[17,"HW_MAXID","","",N,N],[17,"USER_CS_PATH","","",N,N],[17,"USER_BC_BASE_MAX","","",N,N],[17,"USER_BC_DIM_MAX","","",N,N],[17,"USER_BC_SCALE_MAX","","",N,N],[17,"USER_BC_STRING_MAX","","",N,N],[17,"USER_COLL_WEIGHTS_MAX","","",N,N],[17,"USER_EXPR_NEST_MAX","","",N,N],[17,"USER_LINE_MAX","","",N,N],[17,"USER_RE_DUP_MAX","","",N,N],[17,"USER_POSIX2_VERSION","","",N,N],[17,"USER_POSIX2_C_BIND","","",N,N],[17,"USER_POSIX2_C_DEV","","",N,N],[17,"USER_POSIX2_CHAR_TERM","","",N,N],[17,"USER_POSIX2_FORT_DEV","","",N,N],[17,"USER_POSIX2_FORT_RUN","","",N,N],[17,"USER_POSIX2_LOCALEDEF","","",N,N],[17,"USER_POSIX2_SW_DEV","","",N,N],[17,"USER_POSIX2_UPE","","",N,N],[17,"USER_STREAM_MAX","","",N,N],[17,"USER_TZNAME_MAX","","",N,N],[17,"USER_MAXID","","",N,N],[17,"CTL_DEBUG_NAME","","",N,N],[17,"CTL_DEBUG_VALUE","","",N,N],[17,"CTL_DEBUG_MAXID","","",N,N],[17,"PRIO_DARWIN_THREAD","","",N,N],[17,"PRIO_DARWIN_PROCESS","","",N,N],[17,"PRIO_DARWIN_BG","","",N,N],[17,"PRIO_DARWIN_NONUI","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"AIO_LISTIO_MAX","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"WEXITED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"XATTR_NOFOLLOW","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"XATTR_NOSECURITY","","",N,N],[17,"XATTR_NODEFAULT","","",N,N],[17,"XATTR_SHOWCOMPRESSION","","",N,N],[17,"NET_RT_IFLIST2","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_DONE","","",N,N],[17,"RTF_DELCLONE","","",N,N],[17,"RTF_CLONING","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_LLINFO","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_BLACKHOLE","","",N,N],[17,"RTF_NOIFREF","","",N,N],[17,"RTF_PROTO2","","",N,N],[17,"RTF_PROTO1","","",N,N],[17,"RTF_PRCLONING","","",N,N],[17,"RTF_WASCLONED","","",N,N],[17,"RTF_PROTO3","","",N,N],[17,"RTF_PINNED","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_IFSCOPE","","",N,N],[17,"RTF_CONDEMNED","","",N,N],[17,"RTF_IFREF","","",N,N],[17,"RTF_PROXY","","",N,N],[17,"RTF_ROUTER","","",N,N],[17,"RTM_VERSION","","",N,N],[17,"RTM_ADD","","",N,N],[17,"RTM_DELETE","","",N,N],[17,"RTM_CHANGE","","",N,N],[17,"RTM_GET","","",N,N],[17,"RTM_LOSING","","",N,N],[17,"RTM_REDIRECT","","",N,N],[17,"RTM_MISS","","",N,N],[17,"RTM_LOCK","","",N,N],[17,"RTM_OLDADD","","",N,N],[17,"RTM_OLDDEL","","",N,N],[17,"RTM_RESOLVE","","",N,N],[17,"RTM_NEWADDR","","",N,N],[17,"RTM_DELADDR","","",N,N],[17,"RTM_IFINFO","","",N,N],[17,"RTM_NEWMADDR","","",N,N],[17,"RTM_DELMADDR","","",N,N],[17,"RTM_IFINFO2","","",N,N],[17,"RTM_NEWMADDR2","","",N,N],[17,"RTM_GET2","","",N,N],[17,"RTV_MTU","","",N,N],[17,"RTV_HOPCOUNT","","",N,N],[17,"RTV_EXPIRE","","",N,N],[17,"RTV_RPIPE","","",N,N],[17,"RTV_SPIPE","","",N,N],[17,"RTV_SSTHRESH","","",N,N],[17,"RTV_RTT","","",N,N],[17,"RTV_RTTVAR","","",N,N],[17,"RTA_DST","","",N,N],[17,"RTA_GATEWAY","","",N,N],[17,"RTA_NETMASK","","",N,N],[17,"RTA_GENMASK","","",N,N],[17,"RTA_IFP","","",N,N],[17,"RTA_IFA","","",N,N],[17,"RTA_AUTHOR","","",N,N],[17,"RTA_BRD","","",N,N],[17,"RTAX_DST","","",N,N],[17,"RTAX_GATEWAY","","",N,N],[17,"RTAX_NETMASK","","",N,N],[17,"RTAX_GENMASK","","",N,N],[17,"RTAX_IFP","","",N,N],[17,"RTAX_IFA","","",N,N],[17,"RTAX_AUTHOR","","",N,N],[17,"RTAX_BRD","","",N,N],[17,"RTAX_MAX","","",N,N],[17,"KERN_PROCARGS2","","",N,N],[17,"PROC_PIDTASKALLINFO","","",N,N],[17,"PROC_PIDTASKINFO","","",N,N],[17,"PROC_PIDTHREADINFO","","",N,N],[17,"MAXCOMLEN","","",N,N],[17,"MAXTHREADNAMESIZE","","",N,N],[17,"XUCRED_VERSION","","",N,N],[17,"LC_SEGMENT","","",N,N],[17,"LC_SEGMENT_64","","",N,N],[17,"MH_MAGIC","","",N,N],[17,"MH_MAGIC_64","","",N,N],[17,"UTUN_OPT_FLAGS","","",N,N],[17,"UTUN_OPT_IFNAME","","",N,N],[17,"DLT_NULL","","",N,N],[17,"DLT_EN10MB","","",N,N],[17,"DLT_EN3MB","","",N,N],[17,"DLT_AX25","","",N,N],[17,"DLT_PRONET","","",N,N],[17,"DLT_CHAOS","","",N,N],[17,"DLT_IEEE802","","",N,N],[17,"DLT_ARCNET","","",N,N],[17,"DLT_SLIP","","",N,N],[17,"DLT_PPP","","",N,N],[17,"DLT_FDDI","","",N,N],[17,"DLT_ATM_RFC1483","","",N,N],[17,"DLT_RAW","","",N,N],[17,"DLT_LOOP","","",N,N],[17,"BPF_ALIGNMENT","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETEXEC","","",N,N],[17,"POSIX_SPAWN_START_SUSPENDED","","",N,N],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_R","","",N,N],[17,"IPC_W","","",N,N],[17,"IPC_M","","",N,N],[17,"SEM_UNDO","","",N,N],[17,"GETNCNT","","",N,N],[17,"GETPID","","",N,N],[17,"GETVAL","","",N,N],[17,"GETALL","","",N,N],[17,"GETZCNT","","",N,N],[17,"SETVAL","","",N,N],[17,"SETALL","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHMLBA","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"UF_SETTABLE","","",N,N],[17,"UF_NODUMP","","",N,N],[17,"UF_IMMUTABLE","","",N,N],[17,"UF_APPEND","","",N,N],[17,"UF_OPAQUE","","",N,N],[17,"UF_COMPRESSED","","",N,N],[17,"UF_TRACKED","","",N,N],[17,"SF_SETTABLE","","",N,N],[17,"SF_ARCHIVED","","",N,N],[17,"SF_IMMUTABLE","","",N,N],[17,"SF_APPEND","","",N,N],[17,"UF_HIDDEN","","",N,N],[17,"__PTHREAD_MUTEX_SIZE__","","",N,N],[17,"__PTHREAD_COND_SIZE__","","",N,N],[17,"__PTHREAD_CONDATTR_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCK_SIZE__","","",N,N],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",N,N],[17,"TIOCTIMESTAMP","","",N,N],[17,"TIOCDCDTIMESTAMP","","",N,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["sockaddr_un"]]],[11,"clone","","",23,[[["self"]],["passwd"]]],[11,"clone","","",24,[[["self"]],["ifaddrs"]]],[11,"clone","","",82,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",27,[[["self"]],["msghdr"]]],[11,"clone","","",28,[[["self"]],["cmsghdr"]]],[11,"clone","","",83,[[["self"]],["fsid_t"]]],[11,"clone","","",29,[[["self"]],["if_nameindex"]]],[11,"clone","","",30,[[["self"]],["aiocb"]]],[11,"clone","","",31,[[["self"]],["utmpx"]]],[11,"clone","","",32,[[["self"]],["glob_t"]]],[11,"clone","","",33,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",34,[[["self"]],["addrinfo"]]],[11,"clone","","",35,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",36,[[["self"]],["stat"]]],[11,"clone","","",37,[[["self"]],["dirent"]]],[11,"clone","","",84,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",85,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",86,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",87,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",88,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",89,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",38,[[["self"]],["siginfo_t"]]],[11,"clone","","",39,[[["self"]],["sigaction"]]],[11,"clone","","",40,[[["self"]],["stack_t"]]],[11,"clone","","",41,[[["self"]],["fstore_t"]]],[11,"clone","","",42,[[["self"]],["radvisory"]]],[11,"clone","","",43,[[["self"]],["statvfs"]]],[11,"clone","","",44,[[["self"]],["dl_info"]]],[11,"clone","","",45,[[["self"]],["sockaddr_in"]]],[11,"clone","","",46,[[["self"]],["statfs"]]],[11,"clone","","",47,[[["self"]],["kevent"]]],[11,"clone","","",48,[[["self"]],["kevent64_s"]]],[11,"clone","","",49,[[["self"]],["dqblk"]]],[11,"clone","","",50,[[["self"]],["if_msghdr"]]],[11,"clone","","",51,[[["self"]],["termios"]]],[11,"clone","","",52,[[["self"]],["flock"]]],[11,"clone","","",53,[[["self"]],["sf_hdtr"]]],[11,"clone","","",54,[[["self"]],["lconv"]]],[11,"clone","","",55,[[["self"]],["sigevent"]]],[11,"clone","","",56,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",57,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",58,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",59,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",60,[[["self"]],["xsw_usage"]]],[11,"clone","","",61,[[["self"]],["xucred"]]],[11,"clone","","",62,[[["self"]],["mach_header"]]],[11,"clone","","",63,[[["self"]],["mach_header_64"]]],[11,"clone","","",64,[[["self"]],["segment_command"]]],[11,"clone","","",65,[[["self"]],["segment_command_64"]]],[11,"clone","","",66,[[["self"]],["load_command"]]],[11,"clone","","",67,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",68,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",69,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",70,[[["self"]],["in_pktinfo"]]],[11,"clone","","",71,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",72,[[["self"]],["ipc_perm"]]],[11,"clone","","",73,[[["self"]],["sembuf"]]],[11,"clone","","",74,[[["self"]],["semid_ds"]]],[11,"clone","","",80,[[["self"]],["semun"]]],[11,"clone","","",75,[[["self"]],["shmid_ds"]]],[11,"clone","","",76,[[["self"]],["arphdr"]]],[11,"clone","","",90,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",77,[[["self"]],["timeval32"]]],[11,"clone","","",78,[[["self"]],["if_data"]]],[11,"clone","","",79,[[["self"]],["bpf_hdr"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"aiocb"],[3,"utmpx"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"sigevent"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"proc_threadinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"semid_ds"],[3,"shmid_ds"],[3,"arphdr"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_attr_t"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,[[["self"]],["bool"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",12,N],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"pow","","",N,N],[8,"Pow","num::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"integer","","",N,N],[8,"Integer","num::integer","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",0,N],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[3,"IterBinomial","","An iterator over binomial coefficients.",N,N],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",N,[[["t"],["u32"]],["t"]]],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",18,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",18,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",18,[[["self"]],["self"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",N,[[["t"]],["t"]]],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",N,[[["t"]],["t"]]],[0,"iter","num","",N,N],[3,"Range","num::iter","An iterator over the range [start, stop)",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[0,"traits","num","",N,N],[0,"bounds","num::traits","",N,N],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[0,"cast","num::traits","",N,N],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",13,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",13,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",15,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[0,"float","num::traits","",N,N],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with `no_std`.",N,N],[10,"infinity","","Returns positive infinity.",19,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",19,[[],["self"]]],[10,"nan","","Returns NaN.",19,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",19,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",19,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",19,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",19,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",19,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",19,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",19,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",19,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",19,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",19,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",19,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",19,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",19,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",19,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",19,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",19,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",19,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",19,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",19,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",19,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",19,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",19,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",19,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",19,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",19,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",19,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",12,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",12,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",20,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",20,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",20,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",20,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",20,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",20,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",20,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",20,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",20,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",20,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",20,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",20,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",20,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",20,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",20,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",20,[[],["self"]]],[0,"identities","num::traits","",N,N],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",3,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"int","num::traits","",N,N],[8,"PrimInt","num::traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,[[["self"],["u32"]],["self"]]],[0,"ops","num::traits","",N,N],[0,"checked","num::traits::ops","",N,N],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",10,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",21,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",22,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",23,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",24,[[["self"],["u32"]],["option"]]],[0,"inv","num::traits::ops","",N,N],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",N,N],[16,"Output","","The result after applying the operator.",25,N],[10,"inv","","Returns the multiplicative inverse of `self`.",25,N],[0,"mul_add","num::traits::ops","",N,N],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",26,N],[10,"mul_add","","Performs the fused multiply-add operation.",26,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",27,N],[0,"saturating","num::traits::ops","",N,N],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",6,[[["self"],["self"]],["self"]]],[0,"wrapping","num::traits::ops","",N,N],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",28,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",29,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",30,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",31,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",32,[[["self"],["u32"]],["self"]]],[0,"pow","num::traits","",N,N],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",17,N],[10,"pow","","Returns `self` to the power `rhs`.",17,N],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[0,"real","num::traits","",N,N],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",33,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",33,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",33,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",33,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",33,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",33,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",33,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",33,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",33,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",33,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",33,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",33,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",33,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",33,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",33,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",33,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",33,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",33,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",33,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",33,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",33,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",33,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",33,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",33,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",33,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",33,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",33,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",33,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",33,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",33,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",33,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",33,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",33,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",33,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",33,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",33,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",33,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",33,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",33,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",33,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",33,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",33,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",33,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",33,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",33,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",33,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",33,[[["self"]],["self"]]],[0,"sign","num::traits","",N,N],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,[[["self"]],["bool"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",34,N],[13,"Invalid","","",34,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",35,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[11,"from","num::integer","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","num::iter","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","num::traits","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"next","num::integer","",36,[[["self"]],["option"]]],[11,"next","num::iter","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,N],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"next","","",39,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next_back","","",37,[[["self"]],["option"]]],[11,"next_back","","",38,[[["self"]],["option"]]],[11,"clone","","",39,[[["self"]],["rangestep"]]],[11,"clone","","",40,[[["self"]],["rangestepinclusive"]]],[11,"clone","","",38,[[["self"]],["rangeinclusive"]]],[11,"clone","","",37,[[["self"]],["range"]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",36,[[["t"]],["iterbinomial"]]]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Roots"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",2,[[["t"]],["iterbinomial"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with `no_std`.",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",7,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",8,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",8,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",8,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",8,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",8,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",8,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",8,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",8,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",8,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",8,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",8,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",8,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",8,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",8,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",8,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",8,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",8,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",8,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",11,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",13,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",14,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",15,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",16,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",17,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",19,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",20,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",N,N],[16,"Output","","The result after applying the operator.",21,N],[10,"inv","","Returns the multiplicative inverse of `self`.",21,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add","","Performs the fused multiply-add operation.",22,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",24,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",24,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",25,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",26,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",27,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",28,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",29,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",30,N],[10,"pow","","Returns `self` to the power `rhs`.",30,N],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",31,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",31,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",31,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",31,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",31,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",31,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",31,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",31,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",31,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",31,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",31,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",31,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",31,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",31,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",31,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[["self"]],["self"]]],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",33,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g. `let mut rng = thread_rng();`.",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random number generator.",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9.",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly in the half-open interval `(0, 1]`, i.e. including 1 but not 0.",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly in the open interval `(0, 1)`, i.e. not including either endpoint.",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a discretely selected item.",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in three dimensions.",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two dimensions.",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and `beta`.",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal distribution `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to `Normal::new(0.0, 1.0)` but faster.",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the exponential distribution, with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or sampling with `-rng.gen::<f64>().ln()`, but faster.",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto distribution",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull distribution",N,N],[3,"DistIter","","An iterator that generates random values of `T` with distribution `D`, using `R` as the source of randomness.",N,N],[3,"Standard","","A generic random value distribution, implemented for many primitive types. Usually generates values with a numerically uniform distribution, and with a range appropriate to the type.",N,N],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given range.",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer types.",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for floating-point types.",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct implementation of [`UniformSampler`] for the sampling type.",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive upper bound `[low, high)`.",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with inclusive lower bound and exclusive upper bound `[low, high)`.",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only for SampleUniform and references to SampleUniform in order to resolve ambiguity issues.",N,N],[10,"borrow","","Immutably borrows from an owned value. See [`Borrow::borrow`]",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly from the half open range `[low, high)` (excluding `high`). Panics if `low >= high`.",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly from the closed range `[low, high]` (inclusive). Panics if `low > high`.",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of success `p`.",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of success of `numerator`-in-`denominator`. I.e. `new_ratio(2, 3)` will return a `Bernoulli` with a 2-in-3 chance, or about 67%, of returning `true`.",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the values in `weights`. The weights can use any type `X` for which an implementation of [`Uniform<X>`] exists.",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)` distribution.",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and `shape`.",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters `n` (number of trials) and `p` (probability of success).",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters `median` the peak location and `scale` the scale factor. Panics if `scale <= 0`.",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter `alpha`.",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter `alpha` and `size`.",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum `max` and mode `mode`.",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale` and `shape`.",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random instance of `T`.",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source of randomness.",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`, using `rng` as the source of randomness.",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",N,N],[3,"EntropyRng","","An interface returning random data from external source(s), provided specifically for securely seeding algorithmic generators (PRNGs).",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization and good performance are required. The PRNG algorithm in `SmallRng` is chosen to be efficient on the current platform, without consideration for cryptography or security. The size of its state is much smaller than for [`StdRng`].",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient on the current platform, to be statistically strong and unpredictable (meaning a cryptographically secure PRNG).",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a reference to the PRNG in thread-local memory.",N,N],[3,"OsRng","","A random number generator that retrieves randomness straight from the operating system.",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`] fails.",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type supporting `std::io::Read`, for example files.",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements [`BlockRngCore`], that adds the ability to reseed it.",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG, combined with a RNG to use as reseeder.",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a timer, or a platform-specific function with higher accuracy if necessary and available.",35,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",35,N],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",35,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",35,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterRng` entropy collector.",35,[[["self"],["bool"]],["i64"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence starting with `initial` and incremented by `increment` each time.",36,[[["u64"],["u64"]],["self"]]],[11,"new","rand::rngs","Create a new `OsRng`.",37,[[],["result",["osrng","error"]]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by `SliceRandom::choose_multiple.",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from `0..length`, and return them in random order (fully shuffled).",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",38,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",38,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not be trivial.",38,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",38,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of `usize` values",38,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and sampling methods.",N,N],[16,"Item","","The element type.",39,N],[10,"choose","","Returns a reference to one random element of the slice, or `None` if the slice is empty.",39,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the slice, or `None` if the slice is empty.",39,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from the slice at random without repeating any, and returns them in random order.",39,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each outcome may be specified. The specified function `weight` maps items `x` to a relative likelihood `weight(x)`. The probability of each item being selected is therefore `weight(x) / s`, where `s` is the sum of all `weight(x)`.",39,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each outcome may be specified. The specified function `weight` maps items `x` to a relative likelihood `weight(x)`. The probability of each item being selected is therefore `weight(x) / s`, where `s` is the sum of all `weight(x)`.",39,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",39,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",39,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling methods.",N,N],[11,"choose","","Choose one element at random from the iterator. If you have a slice, it's significantly faster to call the [`choose`] or [`choose_mut`] functions using the slice instead.",40,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into a supplied buffer.",40,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into a vector.",40,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on [`RngCore`] providing high-level generic methods for sampling values and other convenience methods.",N,N],[11,"gen","","Return a random value supporting the [`Standard`] distribution.",41,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e. inclusive of `low` and exclusive of `high`.",41,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",41,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given distribution.",41,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",41,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",41,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",41,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of `numerator/denominator` of being true. I.e. `gen_ratio(2, 3)` has chance of 2 in 3, or about 67%, of returning true. If `numerator == denominator`, then the returned value is guaranteed to be `true`. If `numerator == 0`, then the returned value is guaranteed to be `false`.",41,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",41,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",41,N],[11,"shuffle","","Shuffle a mutable slice in place.",41,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",42,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).",42,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing construction from fresh entropy. This trait is automatically implemented for any PRNG implementing [`SeedableRng`] and is not intended to be implemented by users.",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh entropy.",43,[[],["self"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","rand::distributions::uniform","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","rand::distributions","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","rand::distributions::uniform","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","rand::rngs","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","rand::rngs::mock","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","rand::seq","",57,[[["t"]],["t"]]],[11,"into_iter","","",57,[[["self"]],["i"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","rand::seq::index","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"clone","rand","",2,[[["self"]],["errorkind"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"read","","",0,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"new","rand::distributions::uniform","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,N],[11,"sample_single","","",51,N],[11,"new","","",52,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",52,[[["b1"],["b2"]],["self"]]],[11,"sample","","",52,N],[11,"sample_single","","",52,N],[11,"new","","",52,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",52,[[["b1"],["b2"]],["self"]]],[11,"sample","","",52,N],[11,"sample_single","","",52,N],[11,"new","","",53,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",53,[[["b1"],["b2"]],["self"]]],[11,"sample","","",53,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",47,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",50,[[["self"],["r"]],["f32"]]],[11,"sample","","",45,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",50,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",50,[[["self"],["r"]],["u8"]]],[11,"sample","","",50,[[["self"],["r"]],["u16"]]],[11,"sample","","",50,[[["self"],["r"]],["u32"]]],[11,"sample","","",50,[[["self"],["r"]],["u64"]]],[11,"sample","","",50,[[["self"],["r"]],["u128"]]],[11,"sample","","",50,[[["self"],["r"]],["usize"]]],[11,"sample","","",50,[[["self"],["r"]],["i8"]]],[11,"sample","","",50,[[["self"],["r"]],["i16"]]],[11,"sample","","",50,[[["self"],["r"]],["i32"]]],[11,"sample","","",50,[[["self"],["r"]],["i64"]]],[11,"sample","","",50,[[["self"],["r"]],["i128"]]],[11,"sample","","",50,[[["self"],["r"]],["isize"]]],[11,"sample","","",50,[[["self"],["r"]],["char"]]],[11,"sample","","",44,[[["self"],["r"]],["char"]]],[11,"sample","","",50,[[["self"],["r"]],["bool"]]],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,N],[11,"sample","","",50,[[["self"],["r"]],["option"]]],[11,"sample","","",50,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::rngs","",31,[[["self"],["timererror"]],["bool"]]],[11,"eq","rand::seq::index","",38,[[["self"],["indexvec"]],["bool"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"from","rand::seq::index","",38,[[["vec",["u32"]]],["self"]]],[11,"from","","",38,[[["vec",["usize"]]],["self"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",51,[[["self"]],["uniformint"]]],[11,"clone","","",52,[[["self"]],["uniformfloat"]]],[11,"clone","","",53,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",47,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",48,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",45,[[["self"]],["openclosed01"]]],[11,"clone","","",46,[[["self"]],["open01"]]],[11,"clone","","",50,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs","",35,[[["self"]],["jitterrng"]]],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"clone","rand::rngs::mock","",36,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","","",37,[[["self"]],["osrng"]]],[11,"clone","rand::seq::index","",38,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"next","rand::distributions","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result"]]],[11,"description","rand::distributions","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"description","rand::rngs","",31,[[["self"]],["str"]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs::mock","",36,[[["self"]],["u32"]]],[11,"next_u64","","",36,[[["self"]],["u64"]]],[11,"fill_bytes","","",36,N],[11,"try_fill_bytes","","",36,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"next_u32","","",37,[[["self"]],["u32"]]],[11,"next_u64","","",37,[[["self"]],["u64"]]],[11,"fill_bytes","","",37,N],[11,"try_fill_bytes","","",37,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"OsRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that uses the ChaCha algorithm.",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit words.",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit words.",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[3,"Error","rand_core","Error type of random number generators",N,N],[12,"kind","","The error kind",0,N],[12,"msg","","The error message",0,N],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",1,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",1,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",1,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",1,N],[11,"should_retry","","True if this kind of error may resolve itself on retry.",1,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",1,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",1,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",0,[[["errorkind"],["str"]],["self"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",0,[[["errorkind"],["str"],["e"]],["self"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",0,[[["self"]],["option",["box"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",2,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,N],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",N,N],[16,"Item","","Results element type, e.g. `u32`.",4,N],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",4,N],[10,"generate","","Generate a new block of results.",4,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",2,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",2,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","rand_core::block","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,N],[11,"try_fill_bytes","","",2,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["s"]],["result",["error"]]]],[11,"eq","rand_core","",1,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",2,[[["self"]],["blockrng"]]],[11,"clone","","",3,[[["self"]],["blockrng64"]]],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_core::block","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result"]]],[11,"read","","",5,N],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["stderror"]]]]],"paths":[[3,"Error"],[4,"ErrorKind"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that uses the HC-128 algorithm.",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The seed has to be 256 bits in length, matching the 128 bit `key` followed by 128 bit `iv` when HC-128 where to be used as a stream cipher.",1,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit variant of the ISAAC algorithm.",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",2,[[["u64"]],["self"]]],[11,"try_from","rand_isaac::isaac","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","rand_isaac::isaac64","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`IsaacRng`] documentation.",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`Isaac64Rng`] documentation.",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]]],"paths":[[3,"XorShiftRng"]]};
searchIndex["sdl2"]={"doc":"Getting started","items":[[3,"Sdl","sdl2","The SDL context type. Initialize with `sdl2::init()`.",N,N],[3,"AudioSubsystem","","",N,N],[3,"GameControllerSubsystem","","",N,N],[3,"HapticSubsystem","","",N,N],[3,"JoystickSubsystem","","",N,N],[3,"VideoSubsystem","","",N,N],[3,"TimerSubsystem","","",N,N],[3,"EventSubsystem","","",N,N],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping functions.",N,N],[4,"Error","","",N,N],[13,"NoMemError","","",0,N],[13,"ReadError","","",0,N],[13,"WriteError","","",0,N],[13,"SeekError","","",0,N],[13,"UnsupportedError","","",0,N],[4,"IntegerOrSdlError","","A given integer was so big that its representation as a C integer would be negative.",N,N],[13,"IntegerOverflows","","",1,N],[13,"SdlError","","",1,N],[5,"get_platform","","Get platform name",N,[[],["str"]]],[5,"init","","Initializes the SDL library. This must be called before using any other SDL function.",N,[[],["result",["sdl","string"]]]],[5,"get_error","","",N,[[],["string"]]],[5,"set_error","","",N,[[["str"]],["result",["nulerror"]]]],[5,"set_error_from_code","","",N,[[["error"]]]],[5,"clear_error","","",N,[[]]],[0,"clipboard","","",N,N],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with `VideoSubsystem::clipboard()`.",N,N],[11,"clipboard","sdl2","",2,[[["self"]],["clipboardutil"]]],[11,"set_clipboard_text","sdl2::clipboard","",3,[[["self"],["str"]],["result",["string"]]]],[11,"clipboard_text","","",3,[[["self"]],["result",["string","string"]]]],[11,"has_clipboard_text","","",3,[[["self"]],["bool"]]],[0,"cpuinfo","sdl2","",N,N],[5,"cpu_count","sdl2::cpuinfo","",N,[[],["i32"]]],[5,"cpu_cache_line_size","","",N,[[],["i32"]]],[5,"has_rdtsc","","",N,[[],["bool"]]],[5,"has_alti_vec","","",N,[[],["bool"]]],[5,"has_mmx","","",N,[[],["bool"]]],[5,"has_3d_now","","",N,[[],["bool"]]],[5,"has_sse","","",N,[[],["bool"]]],[5,"has_sse2","","",N,[[],["bool"]]],[5,"has_sse3","","",N,[[],["bool"]]],[5,"has_sse41","","",N,[[],["bool"]]],[5,"has_sse42","","",N,[[],["bool"]]],[5,"has_avx","","",N,[[],["bool"]]],[5,"system_ram","","",N,[[],["i32"]]],[17,"CACHELINESIZE","","",N,N],[0,"macros","sdl2","",N,N],[0,"event","","Event Handling",N,N],[3,"EventPollIterator","sdl2::event","An iterator that calls `EventPump::poll_event()`.",N,N],[3,"EventWaitIterator","","An iterator that calls `EventPump::wait_event()`.",N,N],[3,"EventWaitTimeoutIterator","","An iterator that calls `EventPump::wait_event_timeout()`.",N,N],[4,"EventType","","Types of events that can be delivered.",N,N],[13,"First","","",4,N],[13,"Quit","","",4,N],[13,"AppTerminating","","",4,N],[13,"AppLowMemory","","",4,N],[13,"AppWillEnterBackground","","",4,N],[13,"AppDidEnterBackground","","",4,N],[13,"AppWillEnterForeground","","",4,N],[13,"AppDidEnterForeground","","",4,N],[13,"Window","","",4,N],[13,"KeyDown","","",4,N],[13,"KeyUp","","",4,N],[13,"TextEditing","","",4,N],[13,"TextInput","","",4,N],[13,"MouseMotion","","",4,N],[13,"MouseButtonDown","","",4,N],[13,"MouseButtonUp","","",4,N],[13,"MouseWheel","","",4,N],[13,"JoyAxisMotion","","",4,N],[13,"JoyBallMotion","","",4,N],[13,"JoyHatMotion","","",4,N],[13,"JoyButtonDown","","",4,N],[13,"JoyButtonUp","","",4,N],[13,"JoyDeviceAdded","","",4,N],[13,"JoyDeviceRemoved","","",4,N],[13,"ControllerAxisMotion","","",4,N],[13,"ControllerButtonDown","","",4,N],[13,"ControllerButtonUp","","",4,N],[13,"ControllerDeviceAdded","","",4,N],[13,"ControllerDeviceRemoved","","",4,N],[13,"ControllerDeviceRemapped","","",4,N],[13,"FingerDown","","",4,N],[13,"FingerUp","","",4,N],[13,"FingerMotion","","",4,N],[13,"DollarGesture","","",4,N],[13,"DollarRecord","","",4,N],[13,"MultiGesture","","",4,N],[13,"ClipboardUpdate","","",4,N],[13,"DropFile","","",4,N],[13,"User","","",4,N],[13,"Last","","",4,N],[4,"WindowEvent","","An enum of window events.",N,N],[13,"None","","",5,N],[13,"Shown","","",5,N],[13,"Hidden","","",5,N],[13,"Exposed","","",5,N],[13,"Moved","","",5,N],[13,"Resized","","",5,N],[13,"SizeChanged","","",5,N],[13,"Minimized","","",5,N],[13,"Maximized","","",5,N],[13,"Restored","","",5,N],[13,"Enter","","",5,N],[13,"Leave","","",5,N],[13,"FocusGained","","",5,N],[13,"FocusLost","","",5,N],[13,"Close","","",5,N],[13,"TakeFocus","","",5,N],[13,"HitTest","","",5,N],[4,"Event","","Different event types.",N,N],[13,"Quit","","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppTerminating","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppLowMemory","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppWillEnterBackground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppDidEnterBackground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppWillEnterForeground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"AppDidEnterForeground","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"Window","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"win_event","","",6,N],[13,"KeyDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"keycode","","",6,N],[12,"scancode","","",6,N],[12,"keymod","","",6,N],[12,"repeat","","",6,N],[13,"KeyUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"keycode","","",6,N],[12,"scancode","","",6,N],[12,"keymod","","",6,N],[12,"repeat","","",6,N],[13,"TextEditing","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"text","","",6,N],[12,"start","","",6,N],[12,"length","","",6,N],[13,"TextInput","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"text","","",6,N],[13,"MouseMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mousestate","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"xrel","","",6,N],[12,"yrel","","",6,N],[13,"MouseButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mouse_btn","","",6,N],[12,"clicks","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MouseButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"mouse_btn","","",6,N],[12,"clicks","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MouseWheel","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"which","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"direction","","",6,N],[13,"JoyAxisMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"axis_idx","","",6,N],[12,"value","","",6,N],[13,"JoyBallMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"ball_idx","","",6,N],[12,"xrel","","",6,N],[12,"yrel","","",6,N],[13,"JoyHatMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"hat_idx","","",6,N],[12,"state","","",6,N],[13,"JoyButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"button_idx","","",6,N],[13,"JoyButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[12,"button_idx","","",6,N],[13,"JoyDeviceAdded","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The newly added joystick's `joystick_index`",6,N],[13,"JoyDeviceRemoved","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The joystick's `id`",6,N],[13,"ControllerAxisMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"axis","","",6,N],[12,"value","","",6,N],[13,"ControllerButtonDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"button","","",6,N],[13,"ControllerButtonUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[12,"button","","",6,N],[13,"ControllerDeviceAdded","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The newly added controller's `joystick_index`",6,N],[13,"ControllerDeviceRemoved","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[13,"ControllerDeviceRemapped","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"which","","The controller's joystick `id`",6,N],[13,"FingerDown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"FingerUp","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"FingerMotion","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"finger_id","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"dx","","",6,N],[12,"dy","","",6,N],[12,"pressure","","",6,N],[13,"DollarGesture","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"gesture_id","","",6,N],[12,"num_fingers","","",6,N],[12,"error","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"DollarRecord","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"gesture_id","","",6,N],[12,"num_fingers","","",6,N],[12,"error","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[13,"MultiGesture","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"touch_id","","",6,N],[12,"d_theta","","",6,N],[12,"d_dist","","",6,N],[12,"x","","",6,N],[12,"y","","",6,N],[12,"num_fingers","","",6,N],[13,"ClipboardUpdate","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[13,"DropFile","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"filename","","",6,N],[13,"User","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"window_id","","",6,N],[12,"type_","","",6,N],[12,"code","","",6,N],[12,"data1","","",6,N],[12,"data2","","",6,N],[13,"Unknown","sdl2::event","",6,N],[12,"timestamp","sdl2::event::Event","",6,N],[12,"type_","","",6,N],[11,"flush_event","sdl2","Removes all events in the event queue that match the specified event type.",7,[[["self"],["eventtype"]]]],[11,"flush_events","","Removes all events in the event queue that match the specified type range.",7,[[["self"],["u32"],["u32"]]]],[11,"peek_events","","Reads the events at the front of the event queue, until the maximum amount of events is read.",7,[[["self"],["u32"]],["b"]]],[11,"push_event","","Pushes an event to the event queue.",7,[[["self"],["event"]],["result",["string"]]]],[11,"register_event","","Register a custom SDL event.",7,[[["self"]],["result",["u32","string"]]]],[11,"register_events","","Registers custom SDL events.",7,[[["self"],["u32"]],["result",["vec","string"]]]],[11,"register_custom_event","","Register a custom event",7,[[["self"]],["result",["string"]]]],[11,"push_custom_event","","Push a custom event",7,[[["self"],["t"]],["result",["string"]]]],[11,"unwrap_keymod","sdl2::event","",6,[[["option",["mod"]]],["mod"]]],[11,"is_user_event","","",6,[[["self"]],["bool"]]],[11,"as_user_event_type","","",6,[[["self"]],["option"]]],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",8,[[["self"],["eventtype"]],["bool"]]],[11,"enable_event","","Enable an event type. Returns if the event type was enabled before the call.",8,[[["self"],["eventtype"]],["bool"]]],[11,"disable_event","","Disable an event type. Returns if the event type was enabled before the call.",8,[[["self"],["eventtype"]],["bool"]]],[11,"poll_event","","Polls for currently pending events.",8,[[["self"]],["option",["event"]]]],[11,"poll_iter","","Returns a polling iterator that calls `poll_event()`. The iterator will terminate once there are no more pending events.",8,[[["self"]],["eventpolliterator"]]],[11,"pump_events","","Pumps the event loop, gathering events from the input devices.",8,[[["self"]]]],[11,"wait_event","","Waits indefinitely for the next available event.",8,[[["self"]],["event"]]],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for the next available event.",8,[[["self"],["u32"]],["option",["event"]]]],[11,"wait_iter","","Returns a waiting iterator that calls `wait_event()`.",8,[[["self"]],["eventwaititerator"]]],[11,"wait_timeout_iter","","Returns a waiting iterator that calls `wait_event_timeout()`.",8,[[["self"],["u32"]],["eventwaittimeoutiterator"]]],[11,"keyboard_state","","",8,[[["self"]],["keyboardstate"]]],[11,"mouse_state","","",8,[[["self"]],["mousestate"]]],[11,"relative_mouse_state","","",8,[[["self"]],["relativemousestate"]]],[0,"filesystem","","",N,N],[4,"PrefPathError","sdl2::filesystem","",N,N],[13,"InvalidOrganizationName","","",9,N],[13,"InvalidApplicationName","","",9,N],[13,"SdlError","","",9,N],[5,"base_path","","",N,[[],["result",["string","string"]]]],[5,"pref_path","","Return the preferred directory for the application to write files on this system, based on the given organization and application name.",N,[[["str"],["str"]],["result",["string","prefpatherror"]]]],[0,"gesture","sdl2","",N,N],[0,"touch","","",N,N],[5,"num_touch_devices","sdl2::touch","",N,[[],["i32"]]],[5,"touch_device","","",N,[[["i32"]],["touchdevice"]]],[5,"num_touch_fingers","","",N,[[["touchdevice"]],["i32"]]],[5,"touch_finger","","",N,[[["touchdevice"],["i32"]],["option",["finger"]]]],[6,"Finger","","",N,N],[6,"TouchDevice","","",N,N],[0,"joystick","sdl2","",N,N],[3,"Joystick","sdl2::joystick","Wrapper around the `SDL_Joystick` object",N,N],[3,"Guid","","Wrapper around a `SDL_JoystickGUID`, a globally unique identifier for a joystick.",N,N],[4,"PowerLevel","","",N,N],[13,"Unknown","","",10,N],[13,"Empty","","",10,N],[13,"Low","","",10,N],[13,"Medium","","",10,N],[13,"Full","","",10,N],[13,"Wired","","",10,N],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all combinations make sense: 5 for instance would mean up and down at the same time... To simplify things I turn it into an enum which is how the SDL2 docs present it anyway (using macros).",N,N],[13,"Centered","","",11,N],[13,"Up","","",11,N],[13,"Right","","",11,N],[13,"Down","","",11,N],[13,"Left","","",11,N],[13,"RightUp","","",11,N],[13,"RightDown","","",11,N],[13,"LeftUp","","",11,N],[13,"LeftDown","","",11,N],[11,"num_joysticks","sdl2","Retrieve the total number of attached joysticks and controllers identified by SDL.",12,[[["self"]],["result",["u32","string"]]]],[11,"open","","Attempt to open the joystick at index `joystick_index` and return it.",12,[[["self"],["u32"]],["result",["joystick","integerorsdlerror"]]]],[11,"name_for_index","","Return the name of the joystick at index `joystick_index`.",12,[[["self"],["u32"]],["result",["string","integerorsdlerror"]]]],[11,"device_guid","","Get the GUID for the joystick at index `joystick_index`",12,[[["self"],["u32"]],["result",["guid","integerorsdlerror"]]]],[11,"set_event_state","","If state is `true` joystick events are processed, otherwise they're ignored.",12,[[["self"],["bool"]]]],[11,"event_state","","Return `true` if joystick events are processed.",12,[[["self"]],["bool"]]],[11,"update","","Force joystick update when not using the event loop",12,[[["self"]]]],[11,"from_ll","sdl2::joystick","",10,[[["sdl_joystickpowerlevel"]],["powerlevel"]]],[11,"to_ll","","",10,[[["self"]],["sdl_joystickpowerlevel"]]],[11,"subsystem","","",13,[[["self"]],["joysticksubsystem"]]],[11,"name","","Return the name of the joystick or an empty string if no name is found.",13,[[["self"]],["string"]]],[11,"attached","","Return true if the joystick has been opened and currently connected.",13,[[["self"]],["bool"]]],[11,"instance_id","","",13,[[["self"]],["i32"]]],[11,"guid","","Retrieve the joystick's GUID",13,[[["self"]],["guid"]]],[11,"power_level","","Retrieve the battery level of this joystick",13,[[["self"]],["result",["powerlevel","integerorsdlerror"]]]],[11,"num_axes","","Retrieve the number of axes for this joystick",13,[[["self"]],["u32"]]],[11,"axis","","Gets the position of the given `axis`.",13,[[["self"],["u32"]],["result",["i16","integerorsdlerror"]]]],[11,"num_buttons","","Retrieve the number of buttons for this joystick",13,[[["self"]],["u32"]]],[11,"button","","Return `Ok(true)` if `button` is pressed.",13,[[["self"],["u32"]],["result",["bool","integerorsdlerror"]]]],[11,"num_balls","","Retrieve the number of balls for this joystick",13,[[["self"]],["u32"]]],[11,"ball","","Return a pair `(dx, dy)` containing the difference in axis position since the last poll",13,[[["self"],["u32"]],["result",["integerorsdlerror"]]]],[11,"num_hats","","Retrieve the number of balls for this joystick",13,[[["self"]],["u32"]]],[11,"hat","","Return the position of `hat` for this joystick",13,[[["self"],["u32"]],["result",["hatstate","integerorsdlerror"]]]],[11,"set_rumble","","Set the rumble motors to their specified intensities, if supported. Automatically resets back to zero after `duration_ms` milliseconds have passed.",13,[[["self"],["u16"],["u16"],["u32"]],["result",["integerorsdlerror"]]]],[11,"from_string","","Create a GUID from a string representation.",14,[[["str"]],["result",["guid","nulerror"]]]],[11,"is_zero","","Return `true` if GUID is full 0s",14,[[["self"]],["bool"]]],[11,"string","","Return a String representation of GUID",14,[[["self"]],["string"]]],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",14,[[["self"]],["sdl_joystickguid"]]],[11,"from_raw","","",11,[[["u8"]],["hatstate"]]],[11,"to_raw","","",11,[[["self"]],["u8"]]],[0,"controller","sdl2","",N,N],[3,"GameController","sdl2::controller","Wrapper around the `SDL_GameController` object",N,N],[4,"AddMappingError","","",N,N],[13,"InvalidMapping","","",15,N],[13,"InvalidFilePath","","",15,N],[13,"ReadError","","",15,N],[13,"SdlError","","",15,N],[4,"Axis","","",N,N],[13,"LeftX","","",16,N],[13,"LeftY","","",16,N],[13,"RightX","","",16,N],[13,"RightY","","",16,N],[13,"TriggerLeft","","",16,N],[13,"TriggerRight","","",16,N],[4,"Button","","",N,N],[13,"A","","",17,N],[13,"B","","",17,N],[13,"X","","",17,N],[13,"Y","","",17,N],[13,"Back","","",17,N],[13,"Guide","","",17,N],[13,"Start","","",17,N],[13,"LeftStick","","",17,N],[13,"RightStick","","",17,N],[13,"LeftShoulder","","",17,N],[13,"RightShoulder","","",17,N],[13,"DPadUp","","",17,N],[13,"DPadDown","","",17,N],[13,"DPadLeft","","",17,N],[13,"DPadRight","","",17,N],[4,"MappingStatus","","Possible return values for `add_mapping`",N,N],[13,"Added","","",18,N],[13,"Updated","","",18,N],[11,"num_joysticks","sdl2","Retrieve the total number of attached joysticks and controllers identified by SDL.",19,[[["self"]],["result",["u32","string"]]]],[11,"is_game_controller","","Return true if the joystick at index `joystick_index` is a game controller.",19,[[["self"],["u32"]],["bool"]]],[11,"open","","Attempt to open the controller ad index `joystick_index` and return it. Controller IDs are the same as joystick IDs and the maximum number can be retrieved using the `SDL_NumJoysticks` function.",19,[[["self"],["u32"]],["result",["gamecontroller","integerorsdlerror"]]]],[11,"name_for_index","","Return the name of the controller at index `joystick_index`.",19,[[["self"],["u32"]],["result",["string","integerorsdlerror"]]]],[11,"set_event_state","","If state is `true` controller events are processed, otherwise they're ignored.",19,[[["self"],["bool"]]]],[11,"event_state","","Return `true` if controller events are processed.",19,[[["self"]],["bool"]]],[11,"add_mapping","","Add a new controller input mapping from a mapping string.",19,[[["self"],["str"]],["result",["mappingstatus","addmappingerror"]]]],[11,"load_mappings","","Load controller input mappings from a file.",19,[[["self"],["p"]],["result",["i32","addmappingerror"]]]],[11,"load_mappings_from_read","","Load controller input mappings from a `Read` object.",19,[[["self"],["r"]],["result",["i32","addmappingerror"]]]],[11,"load_mappings_from_rw","","Load controller input mappings from an SDL [`RWops`] object.",19,[[["self"],["rwops"]],["result",["i32","addmappingerror"]]]],[11,"mapping_for_guid","","",19,[[["self"],["guid"]],["result",["string","string"]]]],[11,"update","","Force controller update when not using the event loop",19,[[["self"]]]],[11,"from_string","sdl2::controller","Return the Axis from a string description in the same format used by the game controller mapping strings.",16,[[["str"]],["option",["axis"]]]],[11,"string","","Return a string for a given axis in the same format using by the game controller mapping strings",16,[[["self"]],["string"]]],[11,"from_ll","","",16,[[["sdl_gamecontrolleraxis"]],["option",["axis"]]]],[11,"to_ll","","",16,[[["self"]],["sdl_gamecontrolleraxis"]]],[11,"from_string","","Return the Button from a string description in the same format used by the game controller mapping strings.",17,[[["str"]],["option",["button"]]]],[11,"string","","Return a string for a given button in the same format using by the game controller mapping strings",17,[[["self"]],["string"]]],[11,"from_ll","","",17,[[["sdl_gamecontrollerbutton"]],["option",["button"]]]],[11,"to_ll","","",17,[[["self"]],["sdl_gamecontrollerbutton"]]],[11,"subsystem","","",20,[[["self"]],["gamecontrollersubsystem"]]],[11,"name","","Return the name of the controller or an empty string if no name is found.",20,[[["self"]],["string"]]],[11,"mapping","","Return a String describing the controller's button and axis mappings",20,[[["self"]],["string"]]],[11,"attached","","Return true if the controller has been opened and currently connected.",20,[[["self"]],["bool"]]],[11,"instance_id","","Return the joystick instance id of this controller",20,[[["self"]],["i32"]]],[11,"axis","","Get the position of the given `axis`",20,[[["self"],["axis"]],["i16"]]],[11,"button","","Returns `true` if `button` is pressed.",20,[[["self"],["button"]],["bool"]]],[11,"set_rumble","","Set the rumble motors to their specified intensities, if supported. Automatically resets back to zero after `duration_ms` milliseconds have passed.",20,[[["self"],["u16"],["u16"],["u32"]],["result",["integerorsdlerror"]]]],[0,"haptic","sdl2","Haptic Functions",N,N],[3,"Haptic","sdl2::haptic","Wrapper around the `SDL_Haptic` object",N,N],[11,"open_from_joystick_id","sdl2","Attempt to open the joystick at index `joystick_index` and return its haptic device.",21,[[["self"],["u32"]],["result",["haptic","integerorsdlerror"]]]],[11,"subsystem","sdl2::haptic","",22,[[["self"]],["hapticsubsystem"]]],[11,"rumble_play","","Run a simple rumble effect on the haptic device.",22,[[["self"],["f32"],["u32"]]]],[11,"rumble_stop","","Stop the simple rumble on the haptic device.",22,[[["self"]]]],[0,"keyboard","sdl2","",N,N],[3,"Mod","sdl2::keyboard","",N,N],[3,"KeyboardState","","",N,N],[3,"ScancodeIterator","","",N,N],[3,"PressedScancodeIterator","","",N,N],[3,"KeyboardUtil","","Keyboard utility functions. Access with `Sdl::keyboard()`.",N,N],[3,"TextInputUtil","","Text input utility functions. Access with `VideoSubsystem::text_input()`.",N,N],[4,"Keycode","","",N,N],[13,"Backspace","","",23,N],[13,"Tab","","",23,N],[13,"Return","","",23,N],[13,"Escape","","",23,N],[13,"Space","","",23,N],[13,"Exclaim","","",23,N],[13,"Quotedbl","","",23,N],[13,"Hash","","",23,N],[13,"Dollar","","",23,N],[13,"Percent","","",23,N],[13,"Ampersand","","",23,N],[13,"Quote","","",23,N],[13,"LeftParen","","",23,N],[13,"RightParen","","",23,N],[13,"Asterisk","","",23,N],[13,"Plus","","",23,N],[13,"Comma","","",23,N],[13,"Minus","","",23,N],[13,"Period","","",23,N],[13,"Slash","","",23,N],[13,"Num0","","",23,N],[13,"Num1","","",23,N],[13,"Num2","","",23,N],[13,"Num3","","",23,N],[13,"Num4","","",23,N],[13,"Num5","","",23,N],[13,"Num6","","",23,N],[13,"Num7","","",23,N],[13,"Num8","","",23,N],[13,"Num9","","",23,N],[13,"Colon","","",23,N],[13,"Semicolon","","",23,N],[13,"Less","","",23,N],[13,"Equals","","",23,N],[13,"Greater","","",23,N],[13,"Question","","",23,N],[13,"At","","",23,N],[13,"LeftBracket","","",23,N],[13,"Backslash","","",23,N],[13,"RightBracket","","",23,N],[13,"Caret","","",23,N],[13,"Underscore","","",23,N],[13,"Backquote","","",23,N],[13,"A","","",23,N],[13,"B","","",23,N],[13,"C","","",23,N],[13,"D","","",23,N],[13,"E","","",23,N],[13,"F","","",23,N],[13,"G","","",23,N],[13,"H","","",23,N],[13,"I","","",23,N],[13,"J","","",23,N],[13,"K","","",23,N],[13,"L","","",23,N],[13,"M","","",23,N],[13,"N","","",23,N],[13,"O","","",23,N],[13,"P","","",23,N],[13,"Q","","",23,N],[13,"R","","",23,N],[13,"S","","",23,N],[13,"T","","",23,N],[13,"U","","",23,N],[13,"V","","",23,N],[13,"W","","",23,N],[13,"X","","",23,N],[13,"Y","","",23,N],[13,"Z","","",23,N],[13,"Delete","","",23,N],[13,"CapsLock","","",23,N],[13,"F1","","",23,N],[13,"F2","","",23,N],[13,"F3","","",23,N],[13,"F4","","",23,N],[13,"F5","","",23,N],[13,"F6","","",23,N],[13,"F7","","",23,N],[13,"F8","","",23,N],[13,"F9","","",23,N],[13,"F10","","",23,N],[13,"F11","","",23,N],[13,"F12","","",23,N],[13,"PrintScreen","","",23,N],[13,"ScrollLock","","",23,N],[13,"Pause","","",23,N],[13,"Insert","","",23,N],[13,"Home","","",23,N],[13,"PageUp","","",23,N],[13,"End","","",23,N],[13,"PageDown","","",23,N],[13,"Right","","",23,N],[13,"Left","","",23,N],[13,"Down","","",23,N],[13,"Up","","",23,N],[13,"NumLockClear","","",23,N],[13,"KpDivide","","",23,N],[13,"KpMultiply","","",23,N],[13,"KpMinus","","",23,N],[13,"KpPlus","","",23,N],[13,"KpEnter","","",23,N],[13,"Kp1","","",23,N],[13,"Kp2","","",23,N],[13,"Kp3","","",23,N],[13,"Kp4","","",23,N],[13,"Kp5","","",23,N],[13,"Kp6","","",23,N],[13,"Kp7","","",23,N],[13,"Kp8","","",23,N],[13,"Kp9","","",23,N],[13,"Kp0","","",23,N],[13,"KpPeriod","","",23,N],[13,"Application","","",23,N],[13,"Power","","",23,N],[13,"KpEquals","","",23,N],[13,"F13","","",23,N],[13,"F14","","",23,N],[13,"F15","","",23,N],[13,"F16","","",23,N],[13,"F17","","",23,N],[13,"F18","","",23,N],[13,"F19","","",23,N],[13,"F20","","",23,N],[13,"F21","","",23,N],[13,"F22","","",23,N],[13,"F23","","",23,N],[13,"F24","","",23,N],[13,"Execute","","",23,N],[13,"Help","","",23,N],[13,"Menu","","",23,N],[13,"Select","","",23,N],[13,"Stop","","",23,N],[13,"Again","","",23,N],[13,"Undo","","",23,N],[13,"Cut","","",23,N],[13,"Copy","","",23,N],[13,"Paste","","",23,N],[13,"Find","","",23,N],[13,"Mute","","",23,N],[13,"VolumeUp","","",23,N],[13,"VolumeDown","","",23,N],[13,"KpComma","","",23,N],[13,"KpEqualsAS400","","",23,N],[13,"AltErase","","",23,N],[13,"Sysreq","","",23,N],[13,"Cancel","","",23,N],[13,"Clear","","",23,N],[13,"Prior","","",23,N],[13,"Return2","","",23,N],[13,"Separator","","",23,N],[13,"Out","","",23,N],[13,"Oper","","",23,N],[13,"ClearAgain","","",23,N],[13,"CrSel","","",23,N],[13,"ExSel","","",23,N],[13,"Kp00","","",23,N],[13,"Kp000","","",23,N],[13,"ThousandsSeparator","","",23,N],[13,"DecimalSeparator","","",23,N],[13,"CurrencyUnit","","",23,N],[13,"CurrencySubUnit","","",23,N],[13,"KpLeftParen","","",23,N],[13,"KpRightParen","","",23,N],[13,"KpLeftBrace","","",23,N],[13,"KpRightBrace","","",23,N],[13,"KpTab","","",23,N],[13,"KpBackspace","","",23,N],[13,"KpA","","",23,N],[13,"KpB","","",23,N],[13,"KpC","","",23,N],[13,"KpD","","",23,N],[13,"KpE","","",23,N],[13,"KpF","","",23,N],[13,"KpXor","","",23,N],[13,"KpPower","","",23,N],[13,"KpPercent","","",23,N],[13,"KpLess","","",23,N],[13,"KpGreater","","",23,N],[13,"KpAmpersand","","",23,N],[13,"KpDblAmpersand","","",23,N],[13,"KpVerticalBar","","",23,N],[13,"KpDblVerticalBar","","",23,N],[13,"KpColon","","",23,N],[13,"KpHash","","",23,N],[13,"KpSpace","","",23,N],[13,"KpAt","","",23,N],[13,"KpExclam","","",23,N],[13,"KpMemStore","","",23,N],[13,"KpMemRecall","","",23,N],[13,"KpMemClear","","",23,N],[13,"KpMemAdd","","",23,N],[13,"KpMemSubtract","","",23,N],[13,"KpMemMultiply","","",23,N],[13,"KpMemDivide","","",23,N],[13,"KpPlusMinus","","",23,N],[13,"KpClear","","",23,N],[13,"KpClearEntry","","",23,N],[13,"KpBinary","","",23,N],[13,"KpOctal","","",23,N],[13,"KpDecimal","","",23,N],[13,"KpHexadecimal","","",23,N],[13,"LCtrl","","",23,N],[13,"LShift","","",23,N],[13,"LAlt","","",23,N],[13,"LGui","","",23,N],[13,"RCtrl","","",23,N],[13,"RShift","","",23,N],[13,"RAlt","","",23,N],[13,"RGui","","",23,N],[13,"Mode","","",23,N],[13,"AudioNext","","",23,N],[13,"AudioPrev","","",23,N],[13,"AudioStop","","",23,N],[13,"AudioPlay","","",23,N],[13,"AudioMute","","",23,N],[13,"MediaSelect","","",23,N],[13,"Www","","",23,N],[13,"Mail","","",23,N],[13,"Calculator","","",23,N],[13,"Computer","","",23,N],[13,"AcSearch","","",23,N],[13,"AcHome","","",23,N],[13,"AcBack","","",23,N],[13,"AcForward","","",23,N],[13,"AcStop","","",23,N],[13,"AcRefresh","","",23,N],[13,"AcBookmarks","","",23,N],[13,"BrightnessDown","","",23,N],[13,"BrightnessUp","","",23,N],[13,"DisplaySwitch","","",23,N],[13,"KbdIllumToggle","","",23,N],[13,"KbdIllumDown","","",23,N],[13,"KbdIllumUp","","",23,N],[13,"Eject","","",23,N],[13,"Sleep","","",23,N],[4,"Scancode","","",N,N],[13,"A","","",24,N],[13,"B","","",24,N],[13,"C","","",24,N],[13,"D","","",24,N],[13,"E","","",24,N],[13,"F","","",24,N],[13,"G","","",24,N],[13,"H","","",24,N],[13,"I","","",24,N],[13,"J","","",24,N],[13,"K","","",24,N],[13,"L","","",24,N],[13,"M","","",24,N],[13,"N","","",24,N],[13,"O","","",24,N],[13,"P","","",24,N],[13,"Q","","",24,N],[13,"R","","",24,N],[13,"S","","",24,N],[13,"T","","",24,N],[13,"U","","",24,N],[13,"V","","",24,N],[13,"W","","",24,N],[13,"X","","",24,N],[13,"Y","","",24,N],[13,"Z","","",24,N],[13,"Num1","","",24,N],[13,"Num2","","",24,N],[13,"Num3","","",24,N],[13,"Num4","","",24,N],[13,"Num5","","",24,N],[13,"Num6","","",24,N],[13,"Num7","","",24,N],[13,"Num8","","",24,N],[13,"Num9","","",24,N],[13,"Num0","","",24,N],[13,"Return","","",24,N],[13,"Escape","","",24,N],[13,"Backspace","","",24,N],[13,"Tab","","",24,N],[13,"Space","","",24,N],[13,"Minus","","",24,N],[13,"Equals","","",24,N],[13,"LeftBracket","","",24,N],[13,"RightBracket","","",24,N],[13,"Backslash","","",24,N],[13,"NonUsHash","","",24,N],[13,"Semicolon","","",24,N],[13,"Apostrophe","","",24,N],[13,"Grave","","",24,N],[13,"Comma","","",24,N],[13,"Period","","",24,N],[13,"Slash","","",24,N],[13,"CapsLock","","",24,N],[13,"F1","","",24,N],[13,"F2","","",24,N],[13,"F3","","",24,N],[13,"F4","","",24,N],[13,"F5","","",24,N],[13,"F6","","",24,N],[13,"F7","","",24,N],[13,"F8","","",24,N],[13,"F9","","",24,N],[13,"F10","","",24,N],[13,"F11","","",24,N],[13,"F12","","",24,N],[13,"PrintScreen","","",24,N],[13,"ScrollLock","","",24,N],[13,"Pause","","",24,N],[13,"Insert","","",24,N],[13,"Home","","",24,N],[13,"PageUp","","",24,N],[13,"Delete","","",24,N],[13,"End","","",24,N],[13,"PageDown","","",24,N],[13,"Right","","",24,N],[13,"Left","","",24,N],[13,"Down","","",24,N],[13,"Up","","",24,N],[13,"NumLockClear","","",24,N],[13,"KpDivide","","",24,N],[13,"KpMultiply","","",24,N],[13,"KpMinus","","",24,N],[13,"KpPlus","","",24,N],[13,"KpEnter","","",24,N],[13,"Kp1","","",24,N],[13,"Kp2","","",24,N],[13,"Kp3","","",24,N],[13,"Kp4","","",24,N],[13,"Kp5","","",24,N],[13,"Kp6","","",24,N],[13,"Kp7","","",24,N],[13,"Kp8","","",24,N],[13,"Kp9","","",24,N],[13,"Kp0","","",24,N],[13,"KpPeriod","","",24,N],[13,"NonUsBackslash","","",24,N],[13,"Application","","",24,N],[13,"Power","","",24,N],[13,"KpEquals","","",24,N],[13,"F13","","",24,N],[13,"F14","","",24,N],[13,"F15","","",24,N],[13,"F16","","",24,N],[13,"F17","","",24,N],[13,"F18","","",24,N],[13,"F19","","",24,N],[13,"F20","","",24,N],[13,"F21","","",24,N],[13,"F22","","",24,N],[13,"F23","","",24,N],[13,"F24","","",24,N],[13,"Execute","","",24,N],[13,"Help","","",24,N],[13,"Menu","","",24,N],[13,"Select","","",24,N],[13,"Stop","","",24,N],[13,"Again","","",24,N],[13,"Undo","","",24,N],[13,"Cut","","",24,N],[13,"Copy","","",24,N],[13,"Paste","","",24,N],[13,"Find","","",24,N],[13,"Mute","","",24,N],[13,"VolumeUp","","",24,N],[13,"VolumeDown","","",24,N],[13,"KpComma","","",24,N],[13,"KpEqualsAS400","","",24,N],[13,"International1","","",24,N],[13,"International2","","",24,N],[13,"International3","","",24,N],[13,"International4","","",24,N],[13,"International5","","",24,N],[13,"International6","","",24,N],[13,"International7","","",24,N],[13,"International8","","",24,N],[13,"International9","","",24,N],[13,"Lang1","","",24,N],[13,"Lang2","","",24,N],[13,"Lang3","","",24,N],[13,"Lang4","","",24,N],[13,"Lang5","","",24,N],[13,"Lang6","","",24,N],[13,"Lang7","","",24,N],[13,"Lang8","","",24,N],[13,"Lang9","","",24,N],[13,"AltErase","","",24,N],[13,"SysReq","","",24,N],[13,"Cancel","","",24,N],[13,"Clear","","",24,N],[13,"Prior","","",24,N],[13,"Return2","","",24,N],[13,"Separator","","",24,N],[13,"Out","","",24,N],[13,"Oper","","",24,N],[13,"ClearAgain","","",24,N],[13,"CrSel","","",24,N],[13,"ExSel","","",24,N],[13,"Kp00","","",24,N],[13,"Kp000","","",24,N],[13,"ThousandsSeparator","","",24,N],[13,"DecimalSeparator","","",24,N],[13,"CurrencyUnit","","",24,N],[13,"CurrencySubUnit","","",24,N],[13,"KpLeftParen","","",24,N],[13,"KpRightParen","","",24,N],[13,"KpLeftBrace","","",24,N],[13,"KpRightBrace","","",24,N],[13,"KpTab","","",24,N],[13,"KpBackspace","","",24,N],[13,"KpA","","",24,N],[13,"KpB","","",24,N],[13,"KpC","","",24,N],[13,"KpD","","",24,N],[13,"KpE","","",24,N],[13,"KpF","","",24,N],[13,"KpXor","","",24,N],[13,"KpPower","","",24,N],[13,"KpPercent","","",24,N],[13,"KpLess","","",24,N],[13,"KpGreater","","",24,N],[13,"KpAmpersand","","",24,N],[13,"KpDblAmpersand","","",24,N],[13,"KpVerticalBar","","",24,N],[13,"KpDblVerticalBar","","",24,N],[13,"KpColon","","",24,N],[13,"KpHash","","",24,N],[13,"KpSpace","","",24,N],[13,"KpAt","","",24,N],[13,"KpExclam","","",24,N],[13,"KpMemStore","","",24,N],[13,"KpMemRecall","","",24,N],[13,"KpMemClear","","",24,N],[13,"KpMemAdd","","",24,N],[13,"KpMemSubtract","","",24,N],[13,"KpMemMultiply","","",24,N],[13,"KpMemDivide","","",24,N],[13,"KpPlusMinus","","",24,N],[13,"KpClear","","",24,N],[13,"KpClearEntry","","",24,N],[13,"KpBinary","","",24,N],[13,"KpOctal","","",24,N],[13,"KpDecimal","","",24,N],[13,"KpHexadecimal","","",24,N],[13,"LCtrl","","",24,N],[13,"LShift","","",24,N],[13,"LAlt","","",24,N],[13,"LGui","","",24,N],[13,"RCtrl","","",24,N],[13,"RShift","","",24,N],[13,"RAlt","","",24,N],[13,"RGui","","",24,N],[13,"Mode","","",24,N],[13,"AudioNext","","",24,N],[13,"AudioPrev","","",24,N],[13,"AudioStop","","",24,N],[13,"AudioPlay","","",24,N],[13,"AudioMute","","",24,N],[13,"MediaSelect","","",24,N],[13,"Www","","",24,N],[13,"Mail","","",24,N],[13,"Calculator","","",24,N],[13,"Computer","","",24,N],[13,"AcSearch","","",24,N],[13,"AcHome","","",24,N],[13,"AcBack","","",24,N],[13,"AcForward","","",24,N],[13,"AcStop","","",24,N],[13,"AcRefresh","","",24,N],[13,"AcBookmarks","","",24,N],[13,"BrightnessDown","","",24,N],[13,"BrightnessUp","","",24,N],[13,"DisplaySwitch","","",24,N],[13,"KbdIllumToggle","","",24,N],[13,"KbdIllumDown","","",24,N],[13,"KbdIllumUp","","",24,N],[13,"Eject","","",24,N],[13,"Sleep","","",24,N],[13,"App1","","",24,N],[13,"App2","","",24,N],[13,"Num","","",24,N],[11,"from_i32","","",23,[[["i32"]],["option",["keycode"]]]],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if there is no corresponding virtual key.",23,[[["scancode"]],["option",["keycode"]]]],[11,"from_name","","",23,[[["str"]],["option",["keycode"]]]],[11,"name","","",23,[[["self"]],["string"]]],[11,"from_i32","","",24,[[["i32"]],["option",["scancode"]]]],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if there is no corresponding scancode.",24,[[["keycode"]],["option",["scancode"]]]],[11,"from_name","","",24,[[["str"]],["option",["scancode"]]]],[11,"name","","",24,[[["self"]],["str"]]],[18,"NOMOD","","",25,N],[18,"LSHIFTMOD","","",25,N],[18,"RSHIFTMOD","","",25,N],[18,"LCTRLMOD","","",25,N],[18,"RCTRLMOD","","",25,N],[18,"LALTMOD","","",25,N],[18,"RALTMOD","","",25,N],[18,"LGUIMOD","","",25,N],[18,"RGUIMOD","","",25,N],[18,"NUMMOD","","",25,N],[18,"CAPSMOD","","",25,N],[18,"MODEMOD","","",25,N],[18,"RESERVEDMOD","","",25,N],[11,"empty","","Returns an empty set of flags.",25,[[],["mod"]]],[11,"all","","Returns the set containing all flags.",25,[[],["mod"]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",25,[[["u16"]],["option",["mod"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",25,[[["u16"]],["mod"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",25,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,[[["self"],["mod"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,[[["self"],["mod"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["self"],["mod"]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["self"],["mod"]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["self"],["mod"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",25,[[["self"],["mod"],["bool"]]]],[11,"new","","",26,[[["eventpump"]],["keyboardstate"]]],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",26,[[["self"],["scancode"]],["bool"]]],[11,"scancodes","","Returns an iterator all scancodes with a boolean indicating if the scancode is pressed.",26,[[["self"]],["scancodeiterator"]]],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",26,[[["self"]],["pressedscancodeiterator"]]],[11,"keyboard","sdl2","",27,[[["self"]],["keyboardutil"]]],[11,"text_input","","",2,[[["self"]],["textinpututil"]]],[11,"focused_window_id","sdl2::keyboard","Gets the id of the window which currently has keyboard focus.",28,[[["self"]],["option",["u32"]]]],[11,"mod_state","","",28,[[["self"]],["mod"]]],[11,"set_mod_state","","",28,[[["self"],["mod"]]]],[11,"start","","",29,[[["self"]]]],[11,"is_active","","",29,[[["self"]],["bool"]]],[11,"stop","","",29,[[["self"]]]],[11,"set_rect","","",29,[[["self"],["rect"]]]],[11,"has_screen_keyboard_support","","",29,[[["self"]],["bool"]]],[11,"is_screen_keyboard_shown","","",29,[[["self"],["window"]],["bool"]]],[0,"mouse","sdl2","",N,N],[3,"RelativeMouseState","sdl2::mouse","",N,N],[3,"Cursor","","",N,N],[3,"MouseState","","",N,N],[3,"MouseButtonIterator","","",N,N],[3,"PressedMouseButtonIterator","","",N,N],[3,"MouseUtil","","Mouse utility functions. Access with `Sdl::mouse()`.",N,N],[4,"SystemCursor","","",N,N],[13,"Arrow","","",30,N],[13,"IBeam","","",30,N],[13,"Wait","","",30,N],[13,"Crosshair","","",30,N],[13,"WaitArrow","","",30,N],[13,"SizeNWSE","","",30,N],[13,"SizeNESW","","",30,N],[13,"SizeWE","","",30,N],[13,"SizeNS","","",30,N],[13,"SizeAll","","",30,N],[13,"No","","",30,N],[13,"Hand","","",30,N],[4,"MouseWheelDirection","","",N,N],[13,"Normal","","",31,N],[13,"Flipped","","",31,N],[13,"Unknown","","",31,N],[4,"MouseButton","","",N,N],[13,"Unknown","","",32,N],[13,"Left","","",32,N],[13,"Middle","","",32,N],[13,"Right","","",32,N],[13,"X1","","",32,N],[13,"X2","","",32,N],[11,"new","","",33,[[["eventpump"]],["relativemousestate"]]],[11,"from_sdl_state","","",33,[[["u32"]],["relativemousestate"]]],[11,"to_sdl_state","","",33,[[["self"]],["u32"]]],[11,"left","","Returns true if the left mouse button is pressed.",33,[[["self"]],["bool"]]],[11,"middle","","Tests if the middle mouse button was pressed.",33,[[["self"]],["bool"]]],[11,"right","","Tests if the right mouse button was pressed.",33,[[["self"]],["bool"]]],[11,"x1","","Tests if the X1 mouse button was pressed.",33,[[["self"]],["bool"]]],[11,"x2","","Tests if the X2 mouse button was pressed.",33,[[["self"]],["bool"]]],[11,"x","","Returns the x coordinate of the state",33,[[["self"]],["i32"]]],[11,"y","","Returns the y coordinate of the state",33,[[["self"]],["i32"]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",33,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",33,[[["self"]],["mousebuttoniterator"]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",33,[[["self"]],["pressedmousebuttoniterator"]]],[11,"new","","",34,N],[11,"from_surface","","",34,[[["s"],["i32"],["i32"]],["result",["cursor","string"]]]],[11,"from_system","","",34,[[["systemcursor"]],["result",["cursor","string"]]]],[11,"set","","",34,[[["self"]]]],[11,"from_ll","","",31,[[["u32"]],["mousewheeldirection"]]],[11,"to_ll","","",31,[[["self"]],["u32"]]],[11,"from_ll","","",32,[[["u8"]],["mousebutton"]]],[11,"new","","",35,[[["eventpump"]],["mousestate"]]],[11,"from_sdl_state","","",35,[[["u32"]],["mousestate"]]],[11,"to_sdl_state","","",35,[[["self"]],["u32"]]],[11,"left","","Returns true if the left mouse button is pressed.",35,[[["self"]],["bool"]]],[11,"middle","","Tests if the middle mouse button was pressed.",35,[[["self"]],["bool"]]],[11,"right","","Tests if the right mouse button was pressed.",35,[[["self"]],["bool"]]],[11,"x1","","Tests if the X1 mouse button was pressed.",35,[[["self"]],["bool"]]],[11,"x2","","Tests if the X2 mouse button was pressed.",35,[[["self"]],["bool"]]],[11,"x","","Returns the x coordinate of the state",35,[[["self"]],["i32"]]],[11,"y","","Returns the y coordinate of the state",35,[[["self"]],["i32"]]],[11,"is_mouse_button_pressed","","Returns true if the mouse button is pressed.",35,[[["self"],["mousebutton"]],["bool"]]],[11,"mouse_buttons","","Returns an iterator all mouse buttons with a boolean indicating if the scancode is pressed.",35,[[["self"]],["mousebuttoniterator"]]],[11,"pressed_mouse_buttons","","Returns an iterator of pressed mouse buttons.",35,[[["self"]],["pressedmousebuttoniterator"]]],[11,"mouse","sdl2","",27,[[["self"]],["mouseutil"]]],[11,"focused_window_id","sdl2::mouse","Gets the id of the window which currently has mouse focus.",36,[[["self"]],["option",["u32"]]]],[11,"warp_mouse_in_window","","",36,[[["self"],["window"],["i32"],["i32"]]]],[11,"set_relative_mouse_mode","","",36,[[["self"],["bool"]]]],[11,"relative_mouse_mode","","",36,[[["self"]],["bool"]]],[11,"is_cursor_showing","","",36,[[["self"]],["bool"]]],[11,"show_cursor","","",36,[[["self"],["bool"]]]],[11,"capture","","",36,[[["self"],["bool"]]]],[0,"rect","sdl2","Rectangles and points.",N,N],[3,"Rect","sdl2::rect","A (non-empty) rectangle.",N,N],[3,"Point","","Immutable point type, consisting of x and y.",N,N],[5,"max_int_value","","The maximal integer value that can be used for rectangles.",N,[[],["u32"]]],[5,"min_int_value","","The minimal integer value that can be used for rectangle positions and points.",N,[[],["i32"]]],[11,"new","","Creates a new rectangle from the given values.",37,[[["i32"],["i32"],["u32"],["u32"]],["rect"]]],[11,"from_center","","Creates a new rectangle centered on the given position.",37,[[["p"],["u32"],["u32"]],["rect"]]],[11,"x","","The horizontal position of this rectangle.",37,[[["self"]],["i32"]]],[11,"y","","The vertical position of this rectangle.",37,[[["self"]],["i32"]]],[11,"width","","The width of this rectangle.",37,[[["self"]],["u32"]]],[11,"height","","The height of this rectangle.",37,[[["self"]],["u32"]]],[11,"size","","Returns the width and height of this rectangle.",37,N],[11,"set_x","","Sets the horizontal position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["i32"]]]],[11,"set_y","","Sets the vertical position of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["i32"]]]],[11,"set_width","","Sets the width of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["u32"]]]],[11,"set_height","","Sets the height of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["u32"]]]],[11,"left","","Returns the x-position of the left side of this rectangle.",37,[[["self"]],["i32"]]],[11,"right","","Returns the x-position of the right side of this rectangle.",37,[[["self"]],["i32"]]],[11,"top","","Returns the y-position of the top side of this rectangle.",37,[[["self"]],["i32"]]],[11,"bottom","","Returns the y-position of the bottom side of this rectangle.",37,[[["self"]],["i32"]]],[11,"center","","Returns the center position of this rectangle.",37,[[["self"]],["point"]]],[11,"top_left","","Returns the top-left corner of this rectangle.",37,[[["self"]],["point"]]],[11,"top_right","","Returns the top-right corner of this rectangle.",37,[[["self"]],["point"]]],[11,"bottom_left","","Returns the bottom-left corner of this rectangle.",37,[[["self"]],["point"]]],[11,"bottom_right","","Returns the bottom-right corner of this rectangle.",37,[[["self"]],["point"]]],[11,"set_right","","Sets the position of the right side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["i32"]]]],[11,"set_bottom","","Sets the position of the bottom side of this rectangle to the given value, clamped to be less than or equal to i32::max_value() / 2.",37,[[["self"],["i32"]]]],[11,"center_on","","Centers the rectangle on the given point.",37,[[["self"],["p"]]]],[11,"offset","","Move this rect and clamp the positions to prevent over/underflow. This also clamps the size to prevent overflow.",37,[[["self"],["i32"],["i32"]]]],[11,"reposition","","Moves this rect to the given position after clamping the values.",37,[[["self"],["p"]]]],[11,"resize","","Resizes this rect to the given size after clamping the values.",37,[[["self"],["u32"],["u32"]]]],[11,"contains","","Checks whether this rect contains a given point, or touches it on the right and/or bottom edges.  This method is deprecated in favor of `Rect::contains_point`.",37,[[["self"],["p"]],["bool"]]],[11,"contains_point","","Checks whether this rectangle contains a given point.",37,[[["self"],["p"]],["bool"]]],[11,"contains_rect","","Checks whether this rectangle completely contains another rectangle.",37,[[["self"],["rect"]],["bool"]]],[11,"raw","","Returns the underlying C Rect.",37,N],[11,"raw_mut","","",37,N],[11,"raw_slice","","",37,N],[11,"from_ll","","",37,[[["sdl_rect"]],["rect"]]],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points. If a clipping rectangle is given, only points that are within it will be considered.",37,N],[11,"has_intersection","","Determines whether two rectangles intersect.",37,[[["self"],["rect"]],["bool"]]],[11,"intersection","","Calculates the intersection of two rectangles.",37,[[["self"],["rect"]],["option",["rect"]]]],[11,"union","","Calculates the union of two rectangles (i.e. the smallest rectangle that contains both).",37,[[["self"],["rect"]],["rect"]]],[11,"intersect_line","","Calculates the intersection of a rectangle and a line segment and returns the points of their intersection.",37,[[["self"],["point"],["point"]],["option"]]],[11,"new","","Creates a new point from the given coordinates.",38,[[["i32"],["i32"]],["point"]]],[11,"from_ll","","",38,[[["sdl_point"]],["point"]]],[11,"raw_slice","","",38,N],[11,"raw","","",38,N],[11,"offset","","Returns a new point by shifting this point's coordinates by the given x and y values.",38,[[["self"],["i32"],["i32"]],["point"]]],[11,"scale","","Returns a new point by multiplying this point's coordinates by the given scale factor.",38,[[["self"],["i32"]],["point"]]],[11,"x","","Returns the x-coordinate of this point.",38,[[["self"]],["i32"]]],[11,"y","","Returns the y-coordinate of this point.",38,[[["self"]],["i32"]]],[0,"surface","sdl2","",N,N],[3,"SurfaceContext","sdl2::surface","Holds a `SDL_Surface`",N,N],[3,"Surface","","Holds a `Rc<SurfaceContext>`.",N,N],[3,"SurfaceRef","","An unsized Surface reference.",N,N],[11,"from_ll","","",39,N],[11,"new","","Creates a new surface using a pixel format.",39,[[["u32"],["u32"],["pixelformatenum"]],["result",["surface","string"]]]],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",39,[[["u32"],["u32"],["pixelmasks"]],["result",["surface","string"]]]],[11,"from_data","","Creates a new surface from an existing buffer, using a pixel format.",39,N],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using pixel masks.",39,N],[11,"load_bmp_rw","","",39,[[["rwops"]],["result",["surface","string"]]]],[11,"load_bmp","","",39,[[["p"]],["result",["surface","string"]]]],[11,"into_canvas","","Creates a Software Canvas to allow rendering in the Surface itself. This `Canvas` will never be accelerated materially, so there is no performance change between `Surface` and `Canvas` coming from a `Surface`.",39,[[["self"]],["result",["canvas","string"]]]],[11,"context","","",39,[[["self"]],["rc",["surfacecontext"]]]],[11,"from_ll","","",40,N],[11,"from_ll_mut","","",40,N],[11,"raw","","",40,N],[11,"width","","",40,[[["self"]],["u32"]]],[11,"height","","",40,[[["self"]],["u32"]]],[11,"pitch","","",40,[[["self"]],["u32"]]],[11,"size","","",40,N],[11,"rect","","",40,[[["self"]],["rect"]]],[11,"pixel_format","","",40,[[["self"]],["pixelformat"]]],[11,"pixel_format_enum","","",40,[[["self"]],["pixelformatenum"]]],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",40,[[["self"],["f"]],["r"]]],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly accessed safely.",40,[[["self"],["f"]],["r"]]],[11,"without_lock","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",40,[[["self"]],["option"]]],[11,"without_lock_mut","","Returns the Surface's pixel buffer if the Surface doesn't require locking (e.g. it's a software surface).",40,[[["self"]],["option"]]],[11,"must_lock","","Returns true if the Surface needs to be locked before accessing the Surface pixels.",40,[[["self"]],["bool"]]],[11,"save_bmp_rw","","",40,[[["self"],["rwops"]],["result",["string"]]]],[11,"save_bmp","","",40,[[["self"],["p"]],["result",["string"]]]],[11,"set_palette","","",40,[[["self"],["palette"]],["result",["string"]]]],[11,"enable_RLE","","",40,[[["self"]]]],[11,"disable_RLE","","",40,[[["self"]]]],[11,"set_color_key","","",40,[[["self"],["bool"],["color"]],["result",["string"]]]],[11,"color_key","","The function will fail if the surface doesn't have color key enabled.",40,[[["self"]],["result",["color","string"]]]],[11,"set_color_mod","","",40,[[["self"],["color"]]]],[11,"color_mod","","",40,[[["self"]],["color"]]],[11,"fill_rect","","",40,[[["self"],["r"],["color"]],["result",["string"]]]],[11,"fill_rects","","",40,N],[11,"set_alpha_mod","","",40,[[["self"],["u8"]]]],[11,"alpha_mod","","",40,[[["self"]],["u8"]]],[11,"set_blend_mode","","The function will fail if the blend mode is not supported by SDL.",40,[[["self"],["blendmode"]],["result",["string"]]]],[11,"blend_mode","","",40,[[["self"]],["blendmode"]]],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",40,[[["self"],["r"]],["bool"]]],[11,"clip_rect","","Gets the clip rectangle for the surface.",40,[[["self"]],["option",["rect"]]]],[11,"convert","","Copies the surface into a new one that is optimized for blitting to a surface of a specified pixel format.",40,[[["self"],["pixelformat"]],["result",["surface","string"]]]],[11,"blit","","Performs surface blitting (surface copying).",40,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["option","string"]]]],[11,"lower_blit","","Performs low-level surface blitting.",40,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["string"]]]],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",40,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["option","string"]]]],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",40,[[["self"],["r1"],["surfaceref"],["r2"]],["result",["string"]]]],[0,"pixels","sdl2","",N,N],[3,"Palette","sdl2::pixels","",N,N],[3,"Color","","",N,N],[12,"r","","",41,N],[12,"g","","",41,N],[12,"b","","",41,N],[12,"a","","",41,N],[3,"PixelMasks","","",N,N],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",42,N],[12,"rmask","","The red mask",42,N],[12,"gmask","","The green mask",42,N],[12,"bmask","","The blue mask",42,N],[12,"amask","","The alpha mask",42,N],[3,"PixelFormat","","",N,N],[4,"PixelFormatEnum","","",N,N],[13,"Unknown","","",43,N],[13,"Index1LSB","","",43,N],[13,"Index1MSB","","",43,N],[13,"Index4LSB","","",43,N],[13,"Index4MSB","","",43,N],[13,"Index8","","",43,N],[13,"RGB332","","",43,N],[13,"RGB444","","",43,N],[13,"RGB555","","",43,N],[13,"BGR555","","",43,N],[13,"ARGB4444","","",43,N],[13,"RGBA4444","","",43,N],[13,"ABGR4444","","",43,N],[13,"BGRA4444","","",43,N],[13,"ARGB1555","","",43,N],[13,"RGBA5551","","",43,N],[13,"ABGR1555","","",43,N],[13,"BGRA5551","","",43,N],[13,"RGB565","","",43,N],[13,"BGR565","","",43,N],[13,"RGB24","","",43,N],[13,"BGR24","","",43,N],[13,"RGB888","","",43,N],[13,"RGBX8888","","",43,N],[13,"BGR888","","",43,N],[13,"BGRX8888","","",43,N],[13,"ARGB8888","","",43,N],[13,"RGBA8888","","",43,N],[13,"ABGR8888","","",43,N],[13,"BGRA8888","","",43,N],[13,"ARGB2101010","","",43,N],[13,"YV12","","",43,N],[13,"IYUV","","",43,N],[13,"YUY2","","",43,N],[13,"UYVY","","",43,N],[13,"YVYU","","",43,N],[11,"new","","Creates a new, uninitialized palette",44,[[["usize"]],["result",["string"]]]],[11,"with_colors","","Creates a palette from the provided colors",44,N],[11,"len","","",44,[[["self"]],["usize"]]],[11,"is_empty","","",44,[[["self"]],["bool"]]],[11,"raw","","",44,N],[11,"RGB","","",41,[[["u8"],["u8"],["u8"]],["color"]]],[11,"RGBA","","",41,[[["u8"],["u8"],["u8"],["u8"]],["color"]]],[11,"to_u32","","",41,[[["self"],["pixelformat"]],["u32"]]],[11,"from_u32","","",41,[[["pixelformat"],["u32"]],["color"]]],[11,"rgb","","",41,N],[11,"rgba","","",41,N],[11,"raw","","",45,N],[11,"from_ll","","",45,N],[18,"RGBA32","","",43,N],[18,"ARGB32","","",43,N],[18,"BGRA32","","",43,N],[18,"ABGR32","","",43,N],[11,"from_masks","","",43,[[["pixelmasks"]],["pixelformatenum"]]],[11,"into_masks","","",43,[[["self"]],["result",["pixelmasks","string"]]]],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given its pitch and height.",43,[[["self"],["usize"],["usize"]],["usize"]]],[11,"byte_size_of_pixels","","",43,[[["self"],["usize"]],["usize"]]],[11,"byte_size_per_pixel","","",43,[[["self"]],["usize"]]],[11,"supports_alpha","","",43,[[["self"]],["bool"]]],[0,"video","sdl2","",N,N],[6,"VkInstance","sdl2::video","",N,N],[6,"VkSurfaceKHR","","",N,N],[3,"WindowSurfaceRef","","",N,N],[3,"DisplayMode","","",N,N],[12,"format","","",46,N],[12,"w","","",46,N],[12,"h","","",46,N],[12,"refresh_rate","","",46,N],[3,"GLContext","","",N,N],[3,"WindowContext","","Holds a `SDL_Window`",N,N],[3,"Window","","Represents the \"shell\" of a `Window`.",N,N],[3,"WindowBuilder","","The type that allows you to build windows.",N,N],[3,"DriverIterator","","",N,N],[4,"GLProfile","","",N,N],[13,"Core","","OpenGL core profile - deprecated functions are disabled",47,N],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are allowed",47,N],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL functionality is available",47,N],[13,"Unknown","","Unknown profile - SDL will tend to return 0 if you ask when no particular profile has been defined or requested.",47,N],[4,"FullscreenType","","",N,N],[13,"Off","","",48,N],[13,"True","","",48,N],[13,"Desktop","","",48,N],[4,"WindowPos","","",N,N],[13,"Undefined","","",49,N],[13,"Centered","","",49,N],[13,"Positioned","","",49,N],[4,"SwapInterval","","Represents a setting for vsync/swap interval.",N,N],[13,"Immediate","","",50,N],[13,"VSync","","",50,N],[13,"LateSwapTearing","","",50,N],[4,"WindowBuildError","","",N,N],[13,"HeightOverflows","","",51,N],[13,"WidthOverflows","","",51,N],[13,"InvalidTitle","","",51,N],[13,"SdlError","","",51,N],[5,"drivers","","Gets an iterator of all video drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[0,"gl_attr","","OpenGL context getters and setters",N,N],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with `VideoSubsystem::gl_attr()`.",N,N],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context configuration.",N,N],[3,"ContextFlags","","",N,N],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",2,[[["self"]],["glattr"]]],[11,"set_red_size","sdl2::video::gl_attr","Sets the attribute:  the minimum number of bits for the red channel of the color buffer; defaults to 3",52,[[["self"],["u8"]]]],[11,"red_size","","Gets the attribute:  the minimum number of bits for the red channel of the color buffer; defaults to 3",52,[[["self"]],["u8"]]],[11,"set_green_size","","Sets the attribute:  the minimum number of bits for the green channel of the color buffer; defaults to 3",52,[[["self"],["u8"]]]],[11,"green_size","","Gets the attribute:  the minimum number of bits for the green channel of the color buffer; defaults to 3",52,[[["self"]],["u8"]]],[11,"set_blue_size","","Sets the attribute:  the minimum number of bits for the blue channel of the color buffer; defaults to 2",52,[[["self"],["u8"]]]],[11,"blue_size","","Gets the attribute:  the minimum number of bits for the blue channel of the color buffer; defaults to 2",52,[[["self"]],["u8"]]],[11,"set_alpha_size","","Sets the attribute:  the minimum number of bits for the alpha channel of the color buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"alpha_size","","Gets the attribute:  the minimum number of bits for the alpha channel of the color buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_buffer_size","","Sets the attribute:  the minimum number of bits for frame buffer size; defaults to 0",52,[[["self"],["u8"]]]],[11,"buffer_size","","Gets the attribute:  the minimum number of bits for frame buffer size; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_double_buffer","","Sets the attribute:  whether the output is single or double buffered; defaults to double buffering on",52,[[["self"],["bool"]]]],[11,"double_buffer","","Gets the attribute:  whether the output is single or double buffered; defaults to double buffering on",52,[[["self"]],["bool"]]],[11,"set_depth_size","","Sets the attribute:  the minimum number of bits in the depth buffer; defaults to 16",52,[[["self"],["u8"]]]],[11,"depth_size","","Gets the attribute:  the minimum number of bits in the depth buffer; defaults to 16",52,[[["self"]],["u8"]]],[11,"set_stencil_size","","Sets the attribute:  the minimum number of bits in the stencil buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"stencil_size","","Gets the attribute:  the minimum number of bits in the stencil buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_accum_red_size","","Sets the attribute:  the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"accum_red_size","","Gets the attribute:  the minimum number of bits for the red channel of the accumulation buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_accum_green_size","","Sets the attribute:  the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"accum_green_size","","Gets the attribute:  the minimum number of bits for the green channel of the accumulation buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_accum_blue_size","","Sets the attribute:  the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"accum_blue_size","","Gets the attribute:  the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_accum_alpha_size","","Sets the attribute:  the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",52,[[["self"],["u8"]]]],[11,"accum_alpha_size","","Gets the attribute:  the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_stereo","","Sets the attribute:  whether the output is stereo 3D; defaults to off",52,[[["self"],["bool"]]]],[11,"stereo","","Gets the attribute:  whether the output is stereo 3D; defaults to off",52,[[["self"]],["bool"]]],[11,"set_multisample_buffers","","Sets the attribute:  the number of buffers used for multisample anti-aliasing; defaults to 0",52,[[["self"],["u8"]]]],[11,"multisample_buffers","","Gets the attribute:  the number of buffers used for multisample anti-aliasing; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_multisample_samples","","Sets the attribute:  the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",52,[[["self"],["u8"]]]],[11,"multisample_samples","","Gets the attribute:  the number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",52,[[["self"]],["u8"]]],[11,"set_accelerated_visual","","Sets the attribute:  whether to require hardware acceleration; false to force software rendering; defaults to allow either",52,[[["self"],["bool"]]]],[11,"accelerated_visual","","Gets the attribute:  whether to require hardware acceleration; false to force software rendering; defaults to allow either",52,[[["self"]],["bool"]]],[11,"set_context_major_version","","Sets the attribute:  OpenGL context major version",52,[[["self"],["u8"]]]],[11,"context_major_version","","Gets the attribute:  OpenGL context major version",52,[[["self"]],["u8"]]],[11,"set_context_minor_version","","Sets the attribute:  OpenGL context minor version",52,[[["self"],["u8"]]]],[11,"context_minor_version","","Gets the attribute:  OpenGL context minor version",52,[[["self"]],["u8"]]],[11,"set_context_profile","","Sets the attribute:  type of GL context (Core, Compatibility, ES)",52,[[["self"],["glprofile"]]]],[11,"context_profile","","Gets the attribute:  type of GL context (Core, Compatibility, ES)",52,[[["self"]],["glprofile"]]],[11,"set_share_with_current_context","","Sets the attribute:  OpenGL context sharing; defaults to false",52,[[["self"],["bool"]]]],[11,"share_with_current_context","","Gets the attribute:  OpenGL context sharing; defaults to false",52,[[["self"]],["bool"]]],[11,"set_framebuffer_srgb_compatible","","Sets the attribute:  requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",52,[[["self"],["bool"]]]],[11,"framebuffer_srgb_compatible","","Gets the attribute:  requests sRGB capable visual; defaults to false (>= SDL 2.0.1)",52,[[["self"]],["bool"]]],[11,"set_context_version","","Sets the OpenGL context major and minor versions.",52,[[["self"],["u8"],["u8"]]]],[11,"context_version","","Gets the OpenGL context major and minor versions as a tuple.",52,N],[11,"set","","Finishes the builder and applies the GL context flags to the GL context.",53,[[["self"]]]],[11,"debug","","Sets the context into \"debug\" mode.",53,[[["self"]],["contextflagsbuilder"]]],[11,"forward_compatible","","Sets the context into \"forward compatible\" mode.",53,[[["self"]],["contextflagsbuilder"]]],[11,"robust_access","","",53,[[["self"]],["contextflagsbuilder"]]],[11,"reset_isolation","","",53,[[["self"]],["contextflagsbuilder"]]],[11,"has_debug","","",54,[[["self"]],["bool"]]],[11,"has_forward_compatible","","",54,[[["self"]],["bool"]]],[11,"has_robust_access","","",54,[[["self"]],["bool"]]],[11,"has_reset_isolation","","",54,[[["self"]],["bool"]]],[11,"set_context_flags","","Sets any combination of OpenGL context configuration flags.",52,[[["self"]],["contextflagsbuilder"]]],[11,"context_flags","","Gets the applied OpenGL context configuration flags.",52,[[["self"]],["contextflags"]]],[11,"update_window","sdl2::video","Updates the change made to the inner Surface to the Window it was created from.",55,[[["self"]],["result",["string"]]]],[11,"update_window_rects","","Same as `update_window`, but only update the parts included in `rects` to the Window it was created from.",55,N],[11,"finish","","Gives up this WindowSurfaceRef, allowing to use the window freely again. Before being destroyed, calls `update_window` one last time.",55,[[["self"]],["result",["string"]]]],[11,"new","","",46,[[["pixelformatenum"],["i32"],["i32"],["i32"]],["displaymode"]]],[11,"from_ll","","",46,[[["sdl_displaymode"]],["displaymode"]]],[11,"to_ll","","",46,[[["self"]],["sdl_displaymode"]]],[11,"from_window_flags","","",48,[[["u32"]],["fullscreentype"]]],[11,"is_current","","Returns true if the OpenGL context is the current one in the thread.",56,[[["self"]],["bool"]]],[11,"from_ll","","Unsafe if the `*mut SDL_Window` is used after the `WindowContext` is dropped",57,N],[11,"raw","","",56,[[["self"]],["sdl_glcontext"]]],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method that calls `WindowBuilder::new()`.",2,[[["self"],["str"],["u32"],["u32"]],["windowbuilder"]]],[11,"current_video_driver","","",2,[[["self"]],["str"]]],[11,"num_video_displays","","",2,[[["self"]],["result",["i32","string"]]]],[11,"display_name","","Get the name of the display at the index `display_name`.",2,[[["self"],["i32"]],["result",["string","string"]]]],[11,"display_bounds","","",2,[[["self"],["i32"]],["result",["rect","string"]]]],[11,"num_display_modes","","",2,[[["self"],["i32"]],["result",["i32","string"]]]],[11,"display_mode","","",2,[[["self"],["i32"],["i32"]],["result",["displaymode","string"]]]],[11,"desktop_display_mode","","",2,[[["self"],["i32"]],["result",["displaymode","string"]]]],[11,"current_display_mode","","",2,[[["self"],["i32"]],["result",["displaymode","string"]]]],[11,"closest_display_mode","","",2,[[["self"],["i32"],["displaymode"]],["result",["displaymode","string"]]]],[11,"display_dpi","","Return a triplet `(ddpi, hdpi, vdpi)` containing the diagonal, horizontal and vertical dots/pixels-per-inch of a display",2,[[["self"],["i32"]],["result",["string"]]]],[11,"is_screen_saver_enabled","","",2,[[["self"]],["bool"]]],[11,"enable_screen_saver","","",2,[[["self"]]]],[11,"disable_screen_saver","","",2,[[["self"]]]],[11,"gl_load_library_default","","Loads the default OpenGL library.",2,[[["self"]],["result",["string"]]]],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent OpenGL library name (usually a file path).",2,[[["self"],["p"]],["result",["string"]]]],[11,"gl_unload_library","","Unloads the current OpenGL library.",2,[[["self"]]]],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",2,N],[11,"gl_extension_supported","","",2,[[["self"],["str"]],["bool"]]],[11,"gl_get_current_window_id","","",2,[[["self"]],["result",["u32","string"]]]],[11,"gl_release_current_context","","Releases the thread's current OpenGL context, i.e. sets the current OpenGL context to nothing.",2,[[["self"]],["result",["string"]]]],[11,"gl_set_swap_interval","","",2,[[["self"],["s"]],["result",["string"]]]],[11,"gl_get_swap_interval","","",2,[[["self"]],["swapinterval"]]],[11,"vulkan_load_library_default","","Loads the default Vulkan library.",2,[[["self"]],["result",["string"]]]],[11,"vulkan_load_library","","Loads the Vulkan library using a platform-dependent Vulkan library name (usually a file path).",2,[[["self"],["p"]],["result",["string"]]]],[11,"vulkan_unload_library","","Unloads the current Vulkan library.",2,[[["self"]]]],[11,"vulkan_get_proc_address_function","","Gets the pointer to the `vkGetInstanceProcAddr` Vulkan function. This function can be called to retrieve the address of other Vulkan functions.",2,[[["self"]],["result",["string"]]]],[11,"new","sdl2::video","Initializes a new `WindowBuilder`.",58,[[["videosubsystem"],["str"],["u32"],["u32"]],["windowbuilder"]]],[11,"build","","Builds the window.",58,[[["self"]],["result",["window","windowbuilderror"]]]],[11,"window_flags","","Gets the underlying window flags.",58,[[["self"]],["u32"]]],[11,"set_window_flags","","Sets the underlying window flags. This will effectively undo any previous build operations, excluding window size and position.",58,[[["self"],["u32"]],["windowbuilder"]]],[11,"position","","Sets the window position.",58,[[["self"],["i32"],["i32"]],["windowbuilder"]]],[11,"position_centered","","Centers the window.",58,[[["self"]],["windowbuilder"]]],[11,"fullscreen","","Sets the window to fullscreen.",58,[[["self"]],["windowbuilder"]]],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop resolution.",58,[[["self"]],["windowbuilder"]]],[11,"opengl","","Sets the window to be usable with an OpenGL context",58,[[["self"]],["windowbuilder"]]],[11,"vulkan","","Sets the window to be usable with a Vulkan instance",58,[[["self"]],["windowbuilder"]]],[11,"hidden","","Hides the window.",58,[[["self"]],["windowbuilder"]]],[11,"borderless","","Removes the window decoration.",58,[[["self"]],["windowbuilder"]]],[11,"resizable","","Sets the window to be resizable.",58,[[["self"]],["windowbuilder"]]],[11,"minimized","","Minimizes the window.",58,[[["self"]],["windowbuilder"]]],[11,"maximized","","Maximizes the window.",58,[[["self"]],["windowbuilder"]]],[11,"input_grabbed","","Sets the window to have grabbed input focus.",58,[[["self"]],["windowbuilder"]]],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (>= SDL 2.0.1)",58,[[["self"]],["windowbuilder"]]],[11,"raw","","",59,N],[11,"from_ll","","",59,N],[11,"from_ref","","Create a new `Window` without taking ownership of the `WindowContext`",59,[[["rc",["windowcontext"]]],["window"]]],[11,"subsystem","","",59,[[["self"]],["videosubsystem"]]],[11,"into_canvas","","Initializes a new `CanvasBuilder`; a convenience method that calls `CanvasBuilder::new()`.",59,[[["self"]],["canvasbuilder"]]],[11,"context","","",59,[[["self"]],["rc",["windowcontext"]]]],[11,"id","","",59,[[["self"]],["u32"]]],[11,"gl_create_context","","",59,[[["self"]],["result",["glcontext","string"]]]],[11,"gl_set_context_to_current","","Set the window's OpenGL context to the current context on the thread.",59,[[["self"]],["result",["string"]]]],[11,"gl_make_current","","",59,[[["self"],["glcontext"]],["result",["string"]]]],[11,"gl_swap_window","","",59,[[["self"]]]],[11,"vulkan_instance_extensions","","Get the names of the Vulkan instance extensions needed to create a surface with `vulkan_create_surface`.",59,[[["self"]],["result",["vec","string"]]]],[11,"vulkan_create_surface","","Create a Vulkan rendering surface for a window.",59,[[["self"],["vkinstance"]],["result",["vksurfacekhr","string"]]]],[11,"display_index","","",59,[[["self"]],["result",["i32","string"]]]],[11,"set_display_mode","","",59,[[["self"],["d"]],["result",["string"]]]],[11,"display_mode","","",59,[[["self"]],["result",["displaymode","string"]]]],[11,"window_pixel_format","","",59,[[["self"]],["pixelformatenum"]]],[11,"window_flags","","",59,[[["self"]],["u32"]]],[11,"set_title","","",59,[[["self"],["str"]],["result",["nulerror"]]]],[11,"title","","",59,[[["self"]],["str"]]],[11,"set_icon","","",59,[[["self"],["s"]]]],[11,"set_position","","",59,[[["self"],["windowpos"],["windowpos"]]]],[11,"position","","",59,N],[11,"border_size","","Use this function to get the size of a window's borders (decorations) around the client area.",59,[[["self"]],["result",["string"]]]],[11,"set_size","","",59,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"size","","",59,N],[11,"drawable_size","","",59,N],[11,"vulkan_drawable_size","","",59,N],[11,"set_minimum_size","","",59,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"minimum_size","","",59,N],[11,"set_maximum_size","","",59,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"maximum_size","","",59,N],[11,"set_bordered","","",59,[[["self"],["bool"]]]],[11,"show","","",59,[[["self"]]]],[11,"hide","","",59,[[["self"]]]],[11,"raise","","",59,[[["self"]]]],[11,"maximize","","",59,[[["self"]]]],[11,"minimize","","",59,[[["self"]]]],[11,"restore","","",59,[[["self"]]]],[11,"fullscreen_state","","",59,[[["self"]],["fullscreentype"]]],[11,"set_fullscreen","","",59,[[["self"],["fullscreentype"]],["result",["string"]]]],[11,"surface","","Returns a WindowSurfaceRef, which can be used like a regular Surface. This is an alternative way to the Renderer (Canvas) way to modify pixels directly in the Window.",59,[[["self"],["eventpump"]],["result",["windowsurfaceref","string"]]]],[11,"set_grab","","",59,[[["self"],["bool"]]]],[11,"grab","","",59,[[["self"]],["bool"]]],[11,"set_brightness","","",59,[[["self"],["f64"]],["result",["string"]]]],[11,"brightness","","",59,[[["self"]],["f64"]]],[11,"set_gamma_ramp","","",59,[[["self"],["r"],["g"],["b"]],["result",["string"]]]],[11,"gamma_ramp","","",59,[[["self"]],["result",["string"]]]],[0,"timer","sdl2","",N,N],[3,"Timer","sdl2::timer","",N,N],[6,"TimerCallback","","",N,N],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",60,[[["self"],["u32"],["timercallback"]],["timer"]]],[11,"ticks","","Gets the number of milliseconds elapsed since the timer subsystem was initialized.",60,[[["self"]],["u32"]]],[11,"delay","","Sleeps the current thread for the specified amount of milliseconds.",60,[[["self"],["u32"]]]],[11,"performance_counter","","",60,[[["self"]],["u64"]]],[11,"performance_frequency","","",60,[[["self"]],["u64"]]],[11,"into_inner","sdl2::timer","Returns the closure as a trait-object and cancels the timer by consuming it...",61,[[["self"]],["timercallback"]]],[0,"render","sdl2","2D accelerated rendering",N,N],[3,"SdlError","sdl2::render","Contains the description of an error returned by SDL",N,N],[3,"RendererInfo","","A structure that contains information on the capabilities of a render driver or the current render context.",N,N],[12,"name","","",62,N],[12,"flags","","",62,N],[12,"texture_formats","","",62,N],[12,"max_texture_width","","",62,N],[12,"max_texture_height","","",62,N],[3,"RendererContext","","Manages what keeps a `SDL_Renderer` alive",N,N],[3,"Canvas","","Manages and owns a target (`Surface` or `Window`) and allows drawing in it.",N,N],[3,"TextureCreator","","Creates Textures that cannot outlive the creator",N,N],[3,"CanvasBuilder","","The type that allows you to build Window-based renderers.",N,N],[3,"TextureQuery","","",N,N],[12,"format","","",63,N],[12,"access","","",63,N],[12,"width","","",63,N],[12,"height","","",63,N],[3,"Texture","","A texture for a rendering context.",N,N],[3,"DriverIterator","","",N,N],[4,"TargetRenderError","","Possible errors returned by targeting a `Canvas` to render to a `Texture`",N,N],[13,"SdlError","","",64,N],[13,"NotSupported","","",64,N],[4,"TextureAccess","","",N,N],[13,"Static","","",65,N],[13,"Streaming","","",65,N],[13,"Target","","",65,N],[4,"BlendMode","","",N,N],[13,"None","","",66,N],[13,"Blend","","",66,N],[13,"Add","","",66,N],[13,"Mod","","",66,N],[13,"Invalid","","",66,N],[4,"TextureValueError","","",N,N],[13,"WidthOverflows","","",67,N],[13,"HeightOverflows","","",67,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",67,N],[13,"SdlError","","",67,N],[4,"UpdateTextureError","","",N,N],[13,"PitchOverflows","","",68,N],[13,"PitchMustBeMultipleOfTwoForFormat","","",68,N],[13,"XMustBeMultipleOfTwoForFormat","","",68,N],[13,"YMustBeMultipleOfTwoForFormat","","",68,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",68,N],[13,"HeightMustBeMultipleOfTwoForFormat","","",68,N],[13,"SdlError","","",68,N],[4,"UpdateTextureYUVError","","",N,N],[13,"PitchOverflows","","",69,N],[12,"plane","sdl2::render::UpdateTextureYUVError","",69,N],[12,"value","","",69,N],[13,"InvalidPlaneLength","sdl2::render","",69,N],[12,"plane","sdl2::render::UpdateTextureYUVError","",69,N],[12,"length","","",69,N],[12,"pitch","","",69,N],[12,"height","","",69,N],[13,"XMustBeMultipleOfTwoForFormat","sdl2::render","",69,N],[13,"YMustBeMultipleOfTwoForFormat","","",69,N],[13,"WidthMustBeMultipleOfTwoForFormat","","",69,N],[13,"HeightMustBeMultipleOfTwoForFormat","","",69,N],[13,"RectNotInsideTexture","","",69,N],[13,"SdlError","","",69,N],[5,"drivers","","Gets an iterator of all render drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[6,"SurfaceCanvas","","Alias for a `Canvas` that was created out of a `Surface`",N,N],[6,"WindowCanvas","","",N,N],[8,"RenderTarget","","Represents structs which can be the target of a `SDL_Renderer` (or Canvas).",N,N],[16,"Context","","",70,N],[11,"from_ll","","",62,[[["sdl_rendererinfo"]],["rendererinfo"]]],[11,"info","","Gets information about the rendering context.",71,[[["self"]],["rendererinfo"]]],[11,"raw","","Gets the raw pointer to the SDL_Renderer",71,N],[11,"from_ll","","",71,N],[11,"from_surface","","Creates a 2D software rendering context for a surface.",72,[[["surface"]],["result",["string"]]]],[11,"surface","","Gets a reference to the associated surface of the Canvas",72,[[["self"]],["surfaceref"]]],[11,"surface_mut","","Gets a mutable reference to the associated surface of the Canvas",72,[[["self"]],["surfaceref"]]],[11,"into_surface","","Gets the associated surface of the Canvas and destroys the Canvas",72,[[["self"]],["surface"]]],[11,"texture_creator","","Returns a `TextureCreator` that can create Textures to be drawn on this `Canvas`",72,[[["self"]],["texturecreator",["surfacecontext"]]]],[11,"window","","Gets a reference to the associated window of the Canvas",72,[[["self"]],["window"]]],[11,"window_mut","","Gets a mutable reference to the associated window of the Canvas",72,[[["self"]],["window"]]],[11,"into_window","","Gets the associated window of the Canvas and destroys the Canvas",72,[[["self"]],["window"]]],[11,"default_pixel_format","","",72,[[["self"]],["pixelformatenum"]]],[11,"texture_creator","","Returns a `TextureCreator` that can create Textures to be drawn on this `Canvas`",72,[[["self"]],["texturecreator",["windowcontext"]]]],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",72,[[["self"]],["bool"]]],[11,"with_texture_canvas","","Temporarily sets the target of `Canvas` to a `Texture`. This effectively allows rendering to a `Texture` in any way you want: you can make a `Texture` a combination of other `Texture`s, be a complex geometry form with the `gfx` module, ... You can draw pixel by pixel in it if you want, so you can do basically anything with that `Texture`.",72,[[["self"],["texture"],["f"]],["result",["targetrendererror"]]]],[11,"with_multiple_texture_canvas","","Same as `with_texture_canvas`, but allows to change multiple `Texture`s at once with the least amount of overhead. It means that between every iteration the Target is not reset to the source, and that the fact that the Canvas supports render target isn't checked every iteration either; the check is actually only done once, at the beginning, avoiding useless checks.",72,[[["self"],["i"],["f"]],["result",["targetrendererror"]]]],[11,"new","","Initializes a new `CanvasBuilder`.",73,[[["window"]],["canvasbuilder"]]],[11,"build","","Builds the renderer.",73,[[["self"]],["result",["windowcanvas","integerorsdlerror"]]]],[11,"index","","Sets the index of the rendering driver to initialize. If you desire the first rendering driver to support the flags provided, or if you're translating code from C which passes -1 for the index, do not invoke the `index` method.",73,[[["self"],["u32"]],["canvasbuilder"]]],[11,"software","","Set the renderer to a software fallback. This flag is accumulative, and may be specified with other flags.",73,[[["self"]],["canvasbuilder"]]],[11,"accelerated","","Set the renderer to use hardware acceleration. This flag is accumulative, and may be specified with other flags.",73,[[["self"]],["canvasbuilder"]]],[11,"present_vsync","","Synchronize renderer `present` method calls with the refresh rate. This flag is accumulative, and may be specified with other flags.",73,[[["self"]],["canvasbuilder"]]],[11,"target_texture","","Set the renderer to support rendering to a texture. This flag is accumulative, and may be specified with other flags.",73,[[["self"]],["canvasbuilder"]]],[11,"raw","","",74,N],[11,"default_pixel_format","","",74,[[["self"]],["pixelformatenum"]]],[11,"create_texture","","Creates a texture for a rendering context.",74,[[["self"],["f"],["textureaccess"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, width, height)`",74,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, width, height)`",74,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, width, height)`",74,[[["self"],["f"],["u32"],["u32"]],["result",["texture","texturevalueerror"]]]],[11,"create_texture_from_surface","","Creates a texture from an existing surface.",74,[[["self"],["s"]],["result",["texture","texturevalueerror"]]]],[11,"raw_create_texture","","Create a texture from its raw `SDL_Texture`.",74,N],[11,"raw","","",72,N],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",72,[[["self"],["c"]]]],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",72,[[["self"]],["color"]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",72,[[["self"],["blendmode"]]]],[11,"blend_mode","","Gets the blend mode used for drawing operations.",72,[[["self"]],["blendmode"]]],[11,"clear","","Clears the current rendering target with the drawing color.",72,[[["self"]]]],[11,"present","","Updates the screen with any rendering performed since the previous call.",72,[[["self"]]]],[11,"output_size","","Gets the output size of a rendering context.",72,[[["self"]],["result",["string"]]]],[11,"set_logical_size","","Sets a device independent resolution for rendering.",72,[[["self"],["u32"],["u32"]],["result",["integerorsdlerror"]]]],[11,"logical_size","","Gets device independent resolution for rendering.",72,N],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",72,[[["self"],["r"]]]],[11,"viewport","","Gets the drawing area for the current target.",72,[[["self"]],["rect"]]],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",72,[[["self"],["r"]]]],[11,"clip_rect","","Gets the clip rectangle for the current target.",72,[[["self"]],["option",["rect"]]]],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",72,[[["self"],["f32"],["f32"]],["result",["string"]]]],[11,"scale","","Gets the drawing scale for the current target.",72,N],[11,"draw_point","","Draws a point on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["p"]],["result",["string"]]]],[11,"draw_points","","Draws multiple points on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["p"]],["result",["string"]]]],[11,"draw_line","","Draws a line on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["p1"],["p2"]],["result",["string"]]]],[11,"draw_lines","","Draws a series of connected lines on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["p"]],["result",["string"]]]],[11,"draw_rect","","Draws a rectangle on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["rect"]],["result",["string"]]]],[11,"draw_rects","","Draws some number of rectangles on the current rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,N],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing color. Passing None will fill the entire rendering target. Errors if drawing fails for any reason (e.g. driver failure)",72,[[["self"],["r"]],["result",["string"]]]],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with the drawing color. Errors if drawing fails for any reason (e.g. driver failure)",72,N],[11,"copy","","Copies a portion of the texture to the current rendering target.",72,[[["self"],["texture"],["r1"],["r2"]],["result",["string"]]]],[11,"copy_ex","","Copies a portion of the texture to the current rendering target, optionally rotating it by angle around the given center and also flipping it top-bottom and/or left-right.",72,[[["self"],["texture"],["r1"],["r2"],["f64"],["p"],["bool"],["bool"]],["result",["string"]]]],[11,"read_pixels","","Reads pixels from the current rendering target. # Remarks WARNING: This is a very slow operation, and should not be used frequently.",72,[[["self"],["r"],["pixelformatenum"]],["result",["vec","string"]]]],[11,"query","","Queries the attributes of the texture.",75,[[["self"]],["texturequery"]]],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",75,[[["self"],["u8"],["u8"],["u8"]]]],[11,"color_mod","","Gets the additional color value multiplied into render copy operations.",75,N],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",75,[[["self"],["u8"]]]],[11,"alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",75,[[["self"]],["u8"]]],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",75,[[["self"],["blendmode"]]]],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",75,[[["self"]],["blendmode"]]],[11,"update","","Updates the given texture rectangle with new pixel data.",75,N],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture with new pixel data.",75,N],[11,"with_lock","","Locks the texture for write-only pixel access. The texture must have been created with streaming access.",75,[[["self"],["r2"],["f"]],["result",["string"]]]],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current context for use with when rendering OpenGL primitives directly.",75,N],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",75,[[["self"]]]],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",75,[[["self"],["f"]],["r"]]],[11,"raw","","",75,N],[0,"rwops","sdl2","",N,N],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream I/O.",N,N],[11,"raw","","",76,N],[11,"from_ll","","",76,N],[11,"from_file","","Creates an SDL file stream.",76,[[["p"],["str"]],["result",["rwops","string"]]]],[11,"from_bytes","","Prepares a read-only memory buffer for use with `RWops`.",76,N],[11,"from_read","","Reads a `Read` object into a buffer and then passes it to `RWops.from_bytes`.",76,[[["t"],["vec"]],["result",["rwops","string"]]]],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with `RWops`.",76,N],[11,"len","","Gets the stream's total size in bytes.",76,[[["self"]],["option",["usize"]]]],[11,"is_empty","","",76,[[["self"]],["bool"]]],[0,"log","sdl2","",N,N],[4,"Category","sdl2::log","",N,N],[13,"Application","","",77,N],[13,"Error","","",77,N],[13,"Assert","","",77,N],[13,"System","","",77,N],[13,"Audio","","",77,N],[13,"Video","","",77,N],[13,"Render","","",77,N],[13,"Input","","",77,N],[13,"Test","","",77,N],[13,"Custom","","",77,N],[13,"Unknown","","",77,N],[4,"Priority","","",N,N],[13,"Verbose","","",78,N],[13,"Debug","","",78,N],[13,"Info","","",78,N],[13,"Warn","","",78,N],[13,"Error","","",78,N],[13,"Critical","","",78,N],[5,"set_output_function","","",N,N],[5,"log","","Standard log function which takes as priority INFO and as category APPLICATION",N,[[["str"]]]],[11,"audio","sdl2","Initializes the audio subsystem.",27,[[["self"]],["result",["audiosubsystem","string"]]]],[11,"event","","Initializes the event subsystem.",27,[[["self"]],["result",["eventsubsystem","string"]]]],[11,"joystick","","Initializes the joystick subsystem.",27,[[["self"]],["result",["joysticksubsystem","string"]]]],[11,"haptic","","Initializes the haptic subsystem.",27,[[["self"]],["result",["hapticsubsystem","string"]]]],[11,"game_controller","","Initializes the game controller subsystem.",27,[[["self"]],["result",["gamecontrollersubsystem","string"]]]],[11,"timer","","Initializes the timer subsystem.",27,[[["self"]],["result",["timersubsystem","string"]]]],[11,"video","","Initializes the video subsystem.",27,[[["self"]],["result",["videosubsystem","string"]]]],[11,"event_pump","","Obtains the SDL event pump.",27,[[["self"]],["result",["eventpump","string"]]]],[11,"sdl","","Obtain an SDL context.",79,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",19,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",21,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",12,[[["self"]],["sdl"]]],[11,"sdl","","Obtain an SDL context.",2,[[["self"]],["sdl"]]],[11,"clone","","",60,[[["self"]],["timersubsystem"]]],[11,"sdl","","Obtain an SDL context.",60,[[["self"]],["sdl"]]],[11,"clone","","",7,[[["self"]],["eventsubsystem"]]],[11,"sdl","","Obtain an SDL context.",7,[[["self"]],["sdl"]]],[0,"audio","","Audio Functions",N,N],[3,"DriverIterator","sdl2::audio","",N,N],[3,"AudioSpecWAV","","",N,N],[12,"freq","","",80,N],[12,"format","","",80,N],[12,"channels","","",80,N],[3,"AudioSpecDesired","","",N,N],[12,"freq","","DSP frequency (samples per second). Set to None for the device's fallback frequency.",81,N],[12,"channels","","Number of separate audio channels. Set to None for the device's fallback number of channels.",81,N],[12,"samples","","Audio buffer size in samples (power of 2). Set to None for the device's fallback sample size.",81,N],[3,"AudioSpec","","",N,N],[12,"freq","","",82,N],[12,"format","","",82,N],[12,"channels","","",82,N],[12,"silence","","",82,N],[12,"samples","","",82,N],[12,"size","","",82,N],[3,"AudioQueue","","Wraps `SDL_AudioDeviceID` and owns the callback data used by the audio device.",N,N],[3,"AudioDevice","","Wraps `SDL_AudioDeviceID` and owns the callback data used by the audio device.",N,N],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`.",N,N],[3,"AudioCVT","","",N,N],[4,"AudioFormat","","",N,N],[13,"U8","","Unsigned 8-bit samples",83,N],[13,"S8","","Signed 8-bit samples",83,N],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",83,N],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",83,N],[13,"S16LSB","","Signed 16-bit samples, little-endian",83,N],[13,"S16MSB","","Signed 16-bit samples, big-endian",83,N],[13,"S32LSB","","Signed 32-bit samples, little-endian",83,N],[13,"S32MSB","","Signed 32-bit samples, big-endian",83,N],[13,"F32LSB","","32-bit floating point samples, little-endian",83,N],[13,"F32MSB","","32-bit floating point samples, big-endian",83,N],[4,"AudioStatus","","",N,N],[13,"Stopped","","",84,N],[13,"Playing","","",84,N],[13,"Paused","","",84,N],[5,"drivers","","Gets an iterator of all audio drivers compiled into the SDL2 library.",N,[[],["driveriterator"]]],[8,"AudioCallback","","",N,N],[16,"Channel","","",85,N],[10,"callback","","",85,N],[8,"AudioFormatNum","","A phantom type for retrieving the `SDL_AudioFormat` of a given generic type. All format types are returned as native-endian.",N,N],[10,"audio_format","","",86,[[],["audioformat"]]],[10,"zero","","",86,[[],["self"]]],[11,"open_playback","sdl2","Opens a new audio device given the desired parameters and callback.",79,[[["self"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired parameters and callback). Supported since SDL 2.0.5",79,[[["self"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_queue","","Opens a new audio device which uses queueing rather than older callback method.",79,[[["self"],["d"],["audiospecdesired"]],["result",["audioqueue","string"]]]],[11,"current_audio_driver","","",79,[[["self"]],["str"]]],[11,"num_audio_playback_devices","","",79,[[["self"]],["option",["u32"]]]],[11,"audio_playback_device_name","","",79,[[["self"],["u32"]],["result",["string","string"]]]],[11,"u16_sys","sdl2::audio","Unsigned 16-bit samples, native endian",83,[[],["audioformat"]]],[11,"s16_sys","","Signed 16-bit samples, native endian",83,[[],["audioformat"]]],[11,"s32_sys","","Signed 32-bit samples, native endian",83,[[],["audioformat"]]],[11,"f32_sys","","32-bit floating point samples, native endian",83,[[],["audioformat"]]],[11,"load_wav","","Loads a WAVE from the file path.",80,[[["p"]],["result",["audiospecwav","string"]]]],[11,"load_wav_rw","","Loads a WAVE from the data source.",80,[[["rwops"]],["result",["audiospecwav","string"]]]],[11,"buffer","","",80,N],[11,"open_queue","","Opens a new audio device given the desired parameters and callback.",87,[[["audiosubsystem"],["d"],["audiospecdesired"]],["result",["audioqueue","string"]]]],[11,"subsystem","","",87,[[["self"]],["audiosubsystem"]]],[11,"spec","","",87,[[["self"]],["audiospec"]]],[11,"status","","",87,[[["self"]],["audiostatus"]]],[11,"pause","","Pauses playback of the audio device.",87,[[["self"]]]],[11,"resume","","Starts playback of the audio device.",87,[[["self"]]]],[11,"queue","","Adds data to the audio queue.",87,N],[11,"size","","",87,[[["self"]],["u32"]]],[11,"clear","","Clears all data from the current audio queue.",87,[[["self"]]]],[11,"open_playback","","Opens a new audio device for playback (given the desired parameters and callback).",88,[[["audiosubsystem"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"open_capture","","Opens a new audio device for capture (given the desired parameters and callback). Supported since SDL 2.0.5",88,[[["audiosubsystem"],["d"],["audiospecdesired"],["f"]],["result",["audiodevice","string"]]]],[11,"subsystem","","",88,[[["self"]],["audiosubsystem"]]],[11,"spec","","",88,[[["self"]],["audiospec"]]],[11,"status","","",88,[[["self"]],["audiostatus"]]],[11,"pause","","Pauses playback of the audio device.",88,[[["self"]]]],[11,"resume","","Starts playback of the audio device.",88,[[["self"]]]],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",88,[[["self"]],["audiodevicelockguard"]]],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",88,[[["self"]],["cb"]]],[11,"new","","",89,[[["audioformat"],["u8"],["i32"],["audioformat"],["u8"],["i32"]],["result",["audiocvt","string"]]]],[11,"convert","","Convert audio data to a desired audio format.",89,[[["self"],["vec",["u8"]]],["vec",["u8"]]]],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes into `convert()` is unchanged from the result.",89,[[["self"]],["bool"]]],[11,"capacity","","Gets the buffer capacity that can contain both the original and converted data.",89,[[["self"],["usize"]],["usize"]]],[0,"version","sdl2","Querying SDL Version",N,N],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use.",N,N],[12,"major","","major version",90,N],[12,"minor","","minor version",90,N],[12,"patch","","update version (patchlevel)",90,N],[5,"version","","Get the version of SDL that is linked against your program.",N,[[],["version"]]],[5,"revision","","Get the code revision of SDL that is linked against your program.",N,[[],["string"]]],[5,"revision_number","","Get the revision number of SDL that is linked against your program.",N,[[],["i32"]]],[11,"from_ll","","Convert a raw *SDL_version to Version.",90,[[["sdl_version"]],["version"]]],[0,"messagebox","sdl2","",N,N],[3,"MessageBoxFlag","sdl2::messagebox","",N,N],[3,"MessageBoxButtonFlag","","",N,N],[3,"MessageBoxColorScheme","","",N,N],[12,"background","","",91,N],[12,"text","","",91,N],[12,"button_border","","",91,N],[12,"button_background","","",91,N],[12,"button_selected","","",91,N],[3,"ButtonData","","`button_id` is the integer that will be returned by `show_message_box`. It is not sed by SDL2, and should only be used to know which button has been triggered",N,N],[12,"flags","","",92,N],[12,"button_id","","",92,N],[12,"text","","",92,N],[4,"ClickedButton","","",N,N],[13,"CloseButton","","",93,N],[13,"CustomButton","","",93,N],[4,"ShowMessageError","","",N,N],[13,"InvalidTitle","","",94,N],[13,"InvalidMessage","","",94,N],[13,"InvalidButton","","Second argument of the tuple (i32) corresponds to the first button_id having an error",94,N],[13,"SdlError","","",94,N],[5,"show_simple_message_box","","Show a simple message box, meant to be informative only.",N,[[["messageboxflag"],["str"],["str"],["w"]],["result",["showmessageerror"]]]],[5,"show_message_box","","Show a customizable message box.",N,N],[18,"ERROR","","",95,N],[18,"WARNING","","",95,N],[18,"INFORMATION","","",95,N],[11,"empty","","Returns an empty set of flags.",95,[[],["messageboxflag"]]],[11,"all","","Returns the set containing all flags.",95,[[],["messageboxflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",95,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",95,[[["u32"]],["option",["messageboxflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",95,[[["u32"]],["messageboxflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",95,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",95,[[["self"],["messageboxflag"]]]],[11,"remove","","Removes the specified flags in-place.",95,[[["self"],["messageboxflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",95,[[["self"],["messageboxflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",95,[[["self"],["messageboxflag"],["bool"]]]],[18,"ESCAPEKEY_DEFAULT","","",96,N],[18,"RETURNKEY_DEFAULT","","",96,N],[18,"NOTHING","","",96,N],[11,"empty","","Returns an empty set of flags.",96,[[],["messageboxbuttonflag"]]],[11,"all","","Returns the set containing all flags.",96,[[],["messageboxbuttonflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",96,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",96,[[["u32"]],["option",["messageboxbuttonflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",96,[[["u32"]],["messageboxbuttonflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",96,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"remove","","Removes the specified flags in-place.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",96,[[["self"],["messageboxbuttonflag"],["bool"]]]],[0,"hint","sdl2","",N,N],[4,"Hint","sdl2::hint","",N,N],[13,"Default","","",97,N],[13,"Normal","","",97,N],[13,"Override","","",97,N],[5,"set_video_minimize_on_focus_loss","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[["bool"]],["bool"]]],[5,"set_video_minimize_on_focus_loss_with_priority","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[["bool"],["hint"]],["bool"]]],[5,"get_video_minimize_on_focus_loss","","A hint that specifies whether a fullscreen Window will be minimized if key focus is lost.",N,[[],["bool"]]],[5,"set","","",N,[[["str"],["str"]],["bool"]]],[5,"get","","",N,[[["str"]],["option",["string"]]]],[5,"set_with_priority","","",N,[[["str"],["str"],["hint"]],["bool"]]],[0,"ttf","sdl2","A binding for the library `SDL2_ttf`",N,N],[3,"Sdl2TtfContext","sdl2::ttf","A context manager for `SDL2_TTF` to manage C code initialization and clean-up.",N,N],[3,"Font","","A loaded TTF font.",N,N],[3,"FontStyle","","The styling of a font.",N,N],[3,"GlyphMetrics","","Information about a specific glyph (character) in a font face.",N,N],[12,"minx","","",98,N],[12,"maxx","","",98,N],[12,"miny","","",98,N],[12,"maxy","","",98,N],[12,"advance","","",98,N],[3,"PartialRendering","","A builder for a font rendering.",N,N],[4,"InitError","","An error for when `sdl2_ttf` is attempted initialized twice Necessary for context management, unless we find a way to have a singleton",N,N],[13,"InitializationError","","",99,N],[13,"AlreadyInitializedError","","",99,N],[4,"Hinting","","Information about the hinting of a font. See wikipedia",N,N],[13,"Normal","","",100,N],[13,"Light","","",100,N],[13,"Mono","","",100,N],[13,"None","","",100,N],[4,"FontError","","A font-related error.",N,N],[13,"InvalidLatin1Text","","A Latin-1 encoded byte string is invalid.",101,N],[13,"SdlError","","A SDL2-related error occured.",101,N],[5,"init","","Initializes the truetype font API and returns a context manager which will clean up the library once it goes out of scope.",N,[[],["result",["sdl2ttfcontext","initerror"]]]],[5,"has_been_initialized","","Returns whether library has been initialized already.",N,[[],["bool"]]],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_TTF` library",N,[[],["version"]]],[18,"NORMAL","","",102,N],[18,"BOLD","","",102,N],[18,"ITALIC","","",102,N],[18,"UNDERLINE","","",102,N],[18,"STRIKETHROUGH","","",102,N],[11,"empty","","Returns an empty set of flags.",102,[[],["fontstyle"]]],[11,"all","","Returns the set containing all flags.",102,[[],["fontstyle"]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",102,[[["i32"]],["option",["fontstyle"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",102,[[["i32"]],["fontstyle"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",102,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,[[["self"],["fontstyle"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,[[["self"],["fontstyle"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["self"],["fontstyle"]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["self"],["fontstyle"]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["self"],["fontstyle"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",102,[[["self"],["fontstyle"],["bool"]]]],[11,"solid","","Renders the text in solid mode. See the SDL2_TTF docs for an explanation.",103,[[["self"],["t"]],["fontresult",["surface"]]]],[11,"shaded","","Renders the text in shaded mode. See the SDL2_TTF docs for an explanation.",103,[[["self"],["t"],["t"]],["fontresult",["surface"]]]],[11,"blended","","Renders the text in blended mode. See the SDL2_TTF docs for an explanation.",103,[[["self"],["t"]],["fontresult",["surface"]]]],[11,"blended_wrapped","","Renders the text in blended mode but wrapping the words if the width exceeds the given maximum width. See the SDL2_TTF docs for an explanation of the mode.",103,[[["self"],["t"],["u32"]],["fontresult",["surface"]]]],[11,"render","","Starts specifying a rendering of the given UTF-8-encoded text.",104,[[["self"],["str"]],["partialrendering"]]],[11,"render_latin1","","Starts specifying a rendering of the given Latin-1-encoded text.",104,N],[11,"render_char","","Starts specifying a rendering of the given UTF-8-encoded character.",104,[[["self"],["char"]],["partialrendering"]]],[11,"size_of","","Returns the width and height of the given text when rendered using this font.",104,[[["self"],["str"]],["fontresult"]]],[11,"size_of_latin1","","Returns the width and height of the given text when rendered using this font.",104,N],[11,"size_of_char","","Returns the width and height of the given text when rendered using this font.",104,[[["self"],["char"]],["fontresult"]]],[11,"get_style","","Returns the font's style flags.",104,[[["self"]],["fontstyle"]]],[11,"set_style","","Sets the font's style flags.",104,[[["self"],["fontstyle"]]]],[11,"get_outline_width","","Returns the width of the font's outline.",104,[[["self"]],["u16"]]],[11,"set_outline_width","","Sets the width of the font's outline.",104,[[["self"],["u16"]]]],[11,"get_hinting","","Returns the font's freetype hints.",104,[[["self"]],["hinting"]]],[11,"set_hinting","","Sets the font's freetype hints.",104,[[["self"],["hinting"]]]],[11,"get_kerning","","Returns whether the font is kerning.",104,[[["self"]],["bool"]]],[11,"set_kerning","","Sets whether the font should use kerning.",104,[[["self"],["bool"]]]],[11,"height","","Get font maximum total height.",104,[[["self"]],["i32"]]],[11,"ascent","","Returns the font's highest ascent (height above base).",104,[[["self"]],["i32"]]],[11,"descent","","Returns the font's lowest descent (height below base). This is a negative number.",104,[[["self"]],["i32"]]],[11,"recommended_line_spacing","","Returns the recommended line spacing for text rendered with this font.",104,[[["self"]],["i32"]]],[11,"face_count","","Returns the number of faces in this font.",104,[[["self"]],["u16"]]],[11,"face_is_fixed_width","","Returns whether the font is monospaced.",104,[[["self"]],["bool"]]],[11,"face_family_name","","Returns the family name of the current font face.",104,[[["self"]],["option",["string"]]]],[11,"face_style_name","","Returns the name of the current font face.",104,[[["self"]],["option",["string"]]]],[11,"find_glyph","","Returns the index of the given character in this font face.",104,[[["self"],["char"]],["option",["u16"]]]],[11,"find_glyph_metrics","","Returns the glyph metrics of the given character in this font face.",104,[[["self"],["char"]],["option",["glyphmetrics"]]]],[11,"load_font","","Loads a font from the given file with the given size in points.",105,[[["self"],["p"],["u16"]],["result",["font","string"]]]],[11,"load_font_at_index","","Loads the font at the given index of the file, with the given size in points.",105,[[["self"],["p"],["u32"],["u16"]],["result",["font","string"]]]],[11,"load_font_from_rwops","","Loads a font from the given SDL2 rwops object with the given size in points.",105,[[["self"],["rwops"],["u16"]],["result",["font","string"]]]],[11,"load_font_at_index_from_rwops","","Loads the font at the given index of the SDL2 rwops object with the given size in points.",105,[[["self"],["rwops"],["u32"],["u16"]],["result",["font","string"]]]],[6,"FontResult","","The result of an `SDL2_TTF` font operation.",N,N],[0,"image","sdl2","A binding for the library `SDL2_image`",N,N],[3,"InitFlag","sdl2::image","",N,N],[3,"Sdl2ImageContext","","Context manager for `sdl2_image` to manage quitting. Can't do much with it but keep it alive while you are using it.",N,N],[5,"init","","Initializes `SDL2_image` with `InitFlags`. If not every flag is set it returns an error",N,[[["initflag"]],["result",["sdl2imagecontext","string"]]]],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_image` library",N,[[],["version"]]],[8,"LoadSurface","","Static method extensions for creating Surfaces",N,N],[10,"from_file","","",106,[[["p"]],["result",["string"]]]],[10,"from_xpm_array","","",106,N],[8,"SaveSurface","","Method extensions to Surface for saving to disk",N,N],[10,"save","","",107,[[["self"],["p"]],["result",["string"]]]],[10,"save_rw","","",107,[[["self"],["rwops"]],["result",["string"]]]],[8,"LoadTexture","","Method extensions for creating Textures from a `TextureCreator`",N,N],[10,"load_texture","","",108,[[["self"],["p"]],["result",["texture","string"]]]],[8,"ImageRWops","","",N,N],[10,"load","","load as a surface. except TGA",109,[[["self"]],["result",["surface","string"]]]],[10,"load_typed","","load as a surface. This can load all supported image formats.",109,[[["self"],["str"]],["result",["surface","string"]]]],[10,"load_cur","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_ico","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_bmp","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_pnm","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_xpm","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_xcf","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_pcx","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_gif","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_jpg","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_tif","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_png","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_tga","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_lbm","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_xv","","",109,[[["self"]],["result",["surface","string"]]]],[10,"load_webp","","",109,[[["self"]],["result",["surface","string"]]]],[10,"is_cur","","",109,[[["self"]],["bool"]]],[10,"is_ico","","",109,[[["self"]],["bool"]]],[10,"is_bmp","","",109,[[["self"]],["bool"]]],[10,"is_pnm","","",109,[[["self"]],["bool"]]],[10,"is_xpm","","",109,[[["self"]],["bool"]]],[10,"is_xcf","","",109,[[["self"]],["bool"]]],[10,"is_pcx","","",109,[[["self"]],["bool"]]],[10,"is_gif","","",109,[[["self"]],["bool"]]],[10,"is_jpg","","",109,[[["self"]],["bool"]]],[10,"is_tif","","",109,[[["self"]],["bool"]]],[10,"is_png","","",109,[[["self"]],["bool"]]],[10,"is_lbm","","",109,[[["self"]],["bool"]]],[10,"is_xv","","",109,[[["self"]],["bool"]]],[10,"is_webp","","",109,[[["self"]],["bool"]]],[18,"JPG","","",110,N],[18,"PNG","","",110,N],[18,"TIF","","",110,N],[18,"WEBP","","",110,N],[11,"empty","","Returns an empty set of flags.",110,[[],["initflag"]]],[11,"all","","Returns the set containing all flags.",110,[[],["initflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",110,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",110,[[["u32"]],["option",["initflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",110,[[["u32"]],["initflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",110,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,[[["self"],["initflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,[[["self"],["initflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",110,[[["self"],["initflag"]]]],[11,"remove","","Removes the specified flags in-place.",110,[[["self"],["initflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",110,[[["self"],["initflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",110,[[["self"],["initflag"],["bool"]]]],[0,"mixer","sdl2","A binding for the library `SDL2_mixer`",N,N],[3,"InitFlag","sdl2::mixer","",N,N],[3,"Sdl2MixerContext","","Context manager for `sdl2_mixer` to manage init and quit",N,N],[3,"Chunk","","The internal format for an audio chunk.",N,N],[12,"raw","","",111,N],[12,"owned","","",111,N],[3,"Channel","","Sound effect channel.",N,N],[12,"0","","",112,N],[3,"Group","","Sound effect channel grouping.",N,N],[12,"0","","",113,N],[3,"Music","","This is an opaque data type used for Music data.",N,N],[12,"raw","","",114,N],[12,"owned","","",114,N],[4,"Fading","","Fader effect type enumerations",N,N],[13,"NoFading","","",115,N],[13,"FadingOut","","",115,N],[13,"FadingIn","","",115,N],[4,"MusicType","","Music type enumerations",N,N],[13,"MusicNone","","",116,N],[13,"MusicCmd","","",116,N],[13,"MusicWav","","",116,N],[13,"MusicMod","","",116,N],[13,"MusicMid","","",116,N],[13,"MusicOgg","","",116,N],[13,"MusicMp3","","",116,N],[13,"MusicMp3Mad","","",116,N],[13,"MusicFlac","","",116,N],[13,"MusicModPlug","","",116,N],[5,"get_linked_version","","Returns the version of the dynamically linked `SDL_mixer` library",N,[[],["version"]]],[5,"init","","Loads dynamic libraries and prepares them for use.  Flags should be one or more flags from `InitFlag`.",N,[[["initflag"]],["result",["sdl2mixercontext","string"]]]],[5,"open_audio","","Open the mixer with a certain audio format.",N,[[["i32"],["audioformat"],["i32"],["i32"]],["result",["string"]]]],[5,"close_audio","","Shutdown and cleanup the mixer API.",N,[[]]],[5,"query_spec","","Get the actual audio format in use by the opened audio device.",N,[[],["result",["string"]]]],[5,"get_chunk_decoders_number","","Get the number of sample chunk decoders available from the `Mix_GetChunkDecoder` function.",N,[[],["i32"]]],[5,"get_chunk_decoder","","Get the name of the indexed sample chunk decoder.",N,[[["i32"]],["string"]]],[5,"channel","","Return a channel object.",N,[[["i32"]],["channel"]]],[5,"allocate_channels","","Set the number of channels being mixed.",N,[[["i32"]],["i32"]]],[5,"set_channel_finished","","When channel playback is halted, then the specified `channel_finished` function is called.",N,N],[5,"unset_channel_finished","","Unhooks the specified function set before, so no function is called when channel playback is halted.",N,[[]]],[5,"get_playing_channels_number","","Returns how many channels are currently playing.",N,[[],["i32"]]],[5,"get_paused_channels_number","","Returns how many channels are currently paused.",N,[[],["i32"]]],[5,"reserve_channels","","Reserve num channels from being used when playing samples when passing in -1 as a channel number to playback functions.",N,[[["i32"]],["i32"]]],[5,"get_music_decoders_number","","Get the number of music decoders available.",N,[[],["i32"]]],[5,"get_music_decoder","","Get the name of the indexed music decoder.",N,[[["i32"]],["string"]]],[6,"AudioFormat","","",N,N],[17,"AUDIO_U8","","",N,N],[17,"AUDIO_S8","","",N,N],[17,"AUDIO_U16LSB","","",N,N],[17,"AUDIO_S16LSB","","",N,N],[17,"AUDIO_U16MSB","","",N,N],[17,"AUDIO_S16MSB","","",N,N],[17,"AUDIO_U16","","",N,N],[17,"AUDIO_S16","","",N,N],[17,"AUDIO_S32LSB","","",N,N],[17,"AUDIO_S32MSB","","",N,N],[17,"AUDIO_S32","","",N,N],[17,"AUDIO_F32LSB","","",N,N],[17,"AUDIO_F32MSB","","",N,N],[17,"AUDIO_F32","","",N,N],[17,"AUDIO_U16SYS","","",N,N],[17,"AUDIO_S16SYS","","",N,N],[17,"AUDIO_S32SYS","","",N,N],[17,"AUDIO_F32SYS","","",N,N],[17,"DEFAULT_FORMAT","","The suggested default is signed 16bit samples in host byte order.",N,N],[17,"DEFAULT_CHANNELS","","Default channels: Stereo.",N,N],[17,"DEFAULT_FREQUENCY","","Good default sample rate in Hz (samples per second) for PC sound cards.",N,N],[17,"MAX_VOLUME","","Maximum value for any volume setting.",N,N],[8,"LoaderRWops","","Loader trait for `RWops`",N,N],[10,"load_wav","","Load src for use as a sample.",117,[[["self"]],["result",["chunk","string"]]]],[10,"load_music","","",117,[[["self"]],["result",["music","string"]]]],[18,"FLAC","","",118,N],[18,"MOD","","",118,N],[18,"MP3","","",118,N],[18,"OGG","","",118,N],[18,"MID","","",118,N],[11,"empty","","Returns an empty set of flags.",118,[[],["initflag"]]],[11,"all","","Returns the set containing all flags.",118,[[],["initflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,[[["u32"]],["option",["initflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,[[["u32"]],["initflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,[[["self"],["initflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,[[["self"],["initflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["initflag"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["initflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["initflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",118,[[["self"],["initflag"],["bool"]]]],[11,"from_file","","Load file for use as a sample.",111,[[["p"]],["result",["chunk","string"]]]],[11,"set_volume","","Set chunk->volume to volume.",111,[[["self"],["i32"]],["i32"]]],[11,"get_volume","","current volume for the chunk.",111,[[["self"]],["i32"]]],[11,"all","","Represent for all channels (-1)",112,[[],["channel"]]],[11,"post","","This is the MIX_CHANNEL_POST (-2)",112,[[],["channel"]]],[11,"set_volume","","Set the volume for any allocated channel.",112,[[["self"],["i32"]],["i32"]]],[11,"get_volume","","Returns the channels volume on scale of 0 to 128.",112,[[["self"]],["i32"]]],[11,"play","","Play chunk on channel, or if channel is -1, pick the first free unreserved channel.",112,[[["self"],["chunk"],["i32"]],["result",["channel","string"]]]],[11,"play_timed","","",112,[[["self"],["chunk"],["i32"],["i32"]],["result",["channel","string"]]]],[11,"fade_in","","Play chunk on channel, or if channel is -1, pick the first free unreserved channel.",112,[[["self"],["chunk"],["i32"],["i32"]],["result",["channel","string"]]]],[11,"fade_in_timed","","",112,[[["self"],["chunk"],["i32"],["i32"],["i32"]],["result",["channel","string"]]]],[11,"pause","","Pause channel, or all playing channels if -1 is passed in.",112,[[["self"]]]],[11,"resume","","Unpause channel, or all playing and paused channels if -1 is passed in.",112,[[["self"]]]],[11,"halt","","Halt channel playback",112,[[["self"]]]],[11,"expire","","Halt channel playback, after ticks milliseconds.",112,[[["self"],["i32"]],["i32"]]],[11,"fade_out","","Gradually fade out which channel over ms milliseconds starting from now.",112,[[["self"],["i32"]],["i32"]]],[11,"is_playing","","if channel is playing, or not.",112,[[["self"]],["bool"]]],[11,"is_paused","","if channel is paused, or not.",112,[[["self"]],["bool"]]],[11,"get_fading","","if channel is fading in, out, or not",112,[[["self"]],["fading"]]],[11,"get_chunk","","Get the most recent sample chunk pointer played on channel.",112,[[["self"]],["option",["chunk"]]]],[11,"unregister_all_effects","","This removes all effects registered to channel.",112,[[["self"]],["result",["string"]]]],[11,"set_panning","","Sets a panning effect, where left and right is the volume of the left and right channels. They range from 0 (silence) to 255 (loud).",112,[[["self"],["u8"],["u8"]],["result",["string"]]]],[11,"unset_panning","","Unregisters panning effect.",112,[[["self"]],["result",["string"]]]],[11,"set_distance","","This effect simulates a simple attenuation of volume due to distance. distance ranges from 0 (close/loud) to 255 (far/quiet).",112,[[["self"],["u8"]],["result",["string"]]]],[11,"unset_distance","","Unregisters distance effect.",112,[[["self"]],["result",["string"]]]],[11,"set_position","","This effect emulates a simple 3D audio effect. angle ranges from 0 to 360 degrees going clockwise, where 0 is directly in front. distance ranges from 0 (close/loud) to 255 (far/quiet).",112,[[["self"],["i16"],["u8"]],["result",["string"]]]],[11,"unset_position","","Unregisters position effect.",112,[[["self"]],["result",["string"]]]],[11,"set_reverse_stereo","","Simple reverse stereo, swaps left and right channel sound. true for reverse, false to unregister effect.",112,[[["self"],["bool"]],["result",["string"]]]],[11,"add_channels_range","","Add channels starting at from up through to to group tag, or reset it's group to the default group tag (-1).",113,[[["self"],["i32"],["i32"]],["i32"]]],[11,"add_channel","","Add which channel to group tag, or reset it's group to the default group tag",113,[[["self"],["channel"]],["bool"]]],[11,"count","","Count the number of channels in group",113,[[["self"]],["i32"]]],[11,"find_available","","Find the first available (not playing) channel in group",113,[[["self"]],["option",["channel"]]]],[11,"find_oldest","","Find the oldest actively playing channel in group",113,[[["self"]],["option",["channel"]]]],[11,"find_newest","","Find the newest, most recently started, actively playing channel in group.",113,[[["self"]],["option",["channel"]]]],[11,"fade_out","","Gradually fade out channels in group over some milliseconds starting from now. Returns the number of channels set to fade out.",113,[[["self"],["i32"]],["i32"]]],[11,"halt","","Halt playback on all channels in group.",113,[[["self"]]]],[11,"from_file","","Load music file to use.",114,[[["p"]],["result",["music","string"]]]],[11,"from_static_bytes","","Load music from a static byte buffer.",114,N],[11,"get_type","","The file format encoding of the music.",114,[[["self"]],["musictype"]]],[11,"play","","Play the loaded music loop times through from start to finish.",114,[[["self"],["i32"]],["result",["string"]]]],[11,"fade_in","","Fade in over ms milliseconds of time, the loaded music, playing it loop times through from start to finish.",114,[[["self"],["i32"],["i32"]],["result",["string"]]]],[11,"fade_in_from_pos","","Fade in over ms milliseconds of time, from position.",114,[[["self"],["i32"],["i32"],["f64"]],["result",["string"]]]],[11,"get_volume","","Returns current volume",114,[[],["i32"]]],[11,"set_volume","","Set the volume on a scale of 0 to 128. Values greater than 128 will use 128.",114,[[["i32"]]]],[11,"pause","","Pause the music playback.",114,[[]]],[11,"resume","","Unpause the music.",114,[[]]],[11,"rewind","","Rewind the music to the start.",114,[[]]],[11,"set_pos","","Set the position of the currently playing music.",114,[[["f64"]],["result",["string"]]]],[11,"set_command","","Setup a command line music player to use to play music.",114,[[["str"]],["result",["string"]]]],[11,"halt","","Halt playback of music.",114,[[]]],[11,"fade_out","","Gradually fade out the music over ms milliseconds starting from now.",114,[[["i32"]],["result",["string"]]]],[11,"hook_finished","","Sets up a function to be called when music playback is halted.",114,N],[11,"unhook_finished","","A previously set up function would no longer be called when music playback is halted.",114,[[]]],[11,"is_playing","","If music is actively playing, or not.",114,[[],["bool"]]],[11,"is_paused","","If music is paused, or not.",114,[[],["bool"]]],[11,"get_fading","","If music is fading, or not.",114,[[],["fading"]]],[0,"gfx","sdl2","A binding for the library `SDL2_gfx`",N,N],[0,"primitives","sdl2::gfx","Graphic Primitives",N,N],[5,"set_font","sdl2::gfx::primitives","Sets or resets the current global font data.",N,[[["f"],["u32"],["u32"]]]],[5,"set_font_rotation","","Sets current global font character rotation steps.",N,[[["u32"]]]],[8,"ToColor","","generic Color type",N,N],[10,"as_rgba","","",119,N],[11,"as_u32","","",119,[[["self"]],["u32"]]],[8,"DrawRenderer","","For drawing with rust-sdl2 Renderer",N,N],[10,"pixel","","",120,[[["self"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"hline","","",120,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"vline","","",120,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"rectangle","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"rounded_rectangle","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"box_","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"rounded_box","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"line","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"aa_line","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"thick_line","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["u8"],["c"]],["result",["string"]]]],[10,"circle","","",120,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"aa_circle","","",120,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"filled_circle","","",120,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"arc","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"ellipse","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"aa_ellipse","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"filled_ellipse","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"pie","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"filled_pie","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"trigon","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"aa_trigon","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"filled_trigon","","",120,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[10,"polygon","","",120,N],[10,"aa_polygon","","",120,N],[10,"filled_polygon","","",120,N],[10,"textured_polygon","","",120,N],[10,"bezier","","",120,N],[10,"character","","",120,[[["self"],["i16"],["i16"],["char"],["c"]],["result",["string"]]]],[10,"string","","",120,[[["self"],["i16"],["i16"],["str"],["c"]],["result",["string"]]]],[0,"rotozoom","sdl2::gfx","Surface Rotozoomer",N,N],[17,"PI","sdl2::gfx::rotozoom","Archimedes' constant (π)",N,N],[5,"get_zoom_size","","",N,N],[5,"get_rotozoom_size","","",N,N],[5,"get_rotozoom_xy_size","","",N,N],[8,"RotozoomSurface","","`RotozoomSurface` for work with rust-sdl2 Surface type",N,N],[10,"rotozoom","","Rotates and zooms a surface and optional anti-aliasing.",121,[[["self"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[10,"rotozoom_xy","","Rotates and zooms a surface with different horizontal and vertical scaling factors and optional anti-aliasing.",121,[[["self"],["f64"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[10,"zoom","","Zoom a surface by independent horizontal and vertical factors with optional smoothing.",121,[[["self"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[10,"shrink","","Shrink a surface by an integer ratio using averaging.",121,[[["self"],["i32"],["i32"]],["result",["surface","string"]]]],[10,"rotate_90deg","","Rotates a 8/16/24/32 bit surface in increments of 90 degrees.",121,[[["self"],["i32"]],["result",["surface","string"]]]],[0,"framerate","sdl2::gfx","Framerate control",N,N],[3,"FPSManager","sdl2::gfx::framerate","Structure holding the state and timing information of the framerate controller.",N,N],[11,"new","","Create the framerate manager.",122,[[],["fpsmanager"]]],[11,"set_framerate","","Set the framerate in Hz.",122,[[["self"],["u32"]],["result",["string"]]]],[11,"get_framerate","","Return the current target framerate in Hz.",122,[[["self"]],["i32"]]],[11,"get_frame_count","","Return the current framecount.",122,[[["self"]],["i32"]]],[11,"delay","","Delay execution to maintain a constant framerate and calculate fps.",122,[[["self"]],["u32"]]],[0,"imagefilter","sdl2::gfx","MMX image filters",N,N],[5,"mmx_detect","sdl2::gfx::imagefilter","MMX detection routine (with override flag).",N,[[],["bool"]]],[5,"mmx_off","","Disable MMX check for filter functions and and force to use non-MMX C based code.",N,[[]]],[5,"mmx_on","","Enable MMX check for filter functions and use MMX code if available.",N,[[]]],[5,"add","","Filter using Add: D = saturation255(S1 + S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"mean","","Filter using Mean: D = S1/2 + S2/2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"sub","","Filter using Sub: D = saturation0(S1 - S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"abs_diff","","Filter using `AbsDiff`: D = | S1 - S2 |.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"mult","","Filter using Mult: D = saturation255(S1 * S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"mult_nor","","Filter using `MultNor`: D = S1 * S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"mult_div_by2","","Filter using `MultDivby2`: D = saturation255(S1/2 * S2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"mult_div_by4","","Filter using `MultDivby4`: D = saturation255(S1/2 * S2/2).",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"bit_and","","Filter using `BitAnd`: D = S1 & S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"bit_or","","Filter using `BitOr`: D = S1 | S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"div","","Filter using Div: D = S1 / S2.",N,[[["cvec",["u8"]],["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"bit_negation","","Filter using `BitNegation`: D = !S.",N,[[["cvec",["u8"]]],["result",["cvec","string"]]]],[5,"add_byte","","Filter using `AddByte`: D = saturation255(S + C).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"add_uint","","Filter using `AddUint`: D = saturation255((S[i] + Cs[i % 4]), Cs=Swap32((uint)C).",N,[[["cvec",["u8"]],["u32"]],["result",["cvec","string"]]]],[5,"add_byte_to_half","","Filter using `AddByteToHalf`: D = saturation255(S/2 + C).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"sub_byte","","Filter using `SubByte`: D = saturation0(S - C).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"sub_uint","","Filter using `SubUint`: D = saturation0(S[i] - Cs[i % 4]), Cs=Swap32((uint)C).",N,[[["cvec",["u8"]],["u32"]],["result",["cvec","string"]]]],[5,"shift_right","","Filter using `ShiftRight`: D = saturation0(S >> N).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"shift_right_uint","","Filter using `ShiftRightUint`: D = saturation0((uint)S[i] >> N).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"mult_by_byte","","Filter using `MultByByte`: D = saturation255(S * C).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"shift_right_and_mult_by_byte","","Filter using `ShiftRightAndMultByByte`: D = saturation255((S >> N) * C).",N,[[["cvec",["u8"]],["u8"],["u8"]],["result",["cvec","string"]]]],[5,"shift_left_byte","","Filter using `ShiftLeftByte`: D = (S << N).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"shift_left_uint","","Filter using `ShiftLeftUint`: D = ((uint)S << N).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"shift_left","","Filter `ShiftLeft`: D = saturation255(S << N).",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"binarize_using_threshold","","Filter using `BinarizeUsingThreshold`: D = (S >= T) ? 255:0.",N,[[["cvec",["u8"]],["u8"]],["result",["cvec","string"]]]],[5,"clip_to_range","","Filter using `ClipToRange`: D = (S >= Tmin) & (S <= Tmax) S:Tmin | Tmax.",N,[[["cvec",["u8"]],["u8"],["u8"]],["result",["cvec","string"]]]],[5,"normalize_linear","","Filter using `NormalizeLinear`: D = saturation255((Nmax - Nmin)/(Cmax - Cmin)*(S - Cmin) + Nmin).",N,[[["cvec",["u8"]],["i32"],["i32"],["i32"],["i32"]],["result",["cvec","string"]]]],[11,"to_owned","sdl2","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","sdl2::clipboard","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","sdl2::event","",123,[[["t"]],["t"]]],[11,"into_iter","","",123,[[["self"]],["i"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into_iter","","",124,[[["self"]],["i"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into_iter","","",125,[[["self"]],["i"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","sdl2::filesystem","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","sdl2::joystick","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","sdl2::controller","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","sdl2::haptic","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::keyboard","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into_iter","","",126,[[["self"]],["i"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into_iter","","",127,[[["self"]],["i"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::mouse","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into_iter","","",128,[[["self"]],["i"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into_iter","","",129,[[["self"]],["i"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::rect","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","sdl2::surface","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","sdl2::pixels","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","sdl2::video","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into_iter","","",131,[[["self"]],["i"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","sdl2::video::gl_attr","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","sdl2::timer","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_string","sdl2::render","",132,[[["self"]],["string"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into_iter","","",133,[[["self"]],["i"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","sdl2::rwops","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::log","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::audio","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into_iter","","",134,[[["self"]],["i"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::version","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"to_string","","",90,[[["self"]],["string"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::messagebox","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","sdl2::hint","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","sdl2::ttf","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"to_string","","",99,[[["self"]],["string"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"to_string","","",101,[[["self"]],["string"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::image","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"to_string","","",110,[[["self"]],["string"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","sdl2::mixer","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","sdl2::gfx::framerate","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from_file","sdl2::surface","Loads an SDL Surface from a file",39,[[["p"]],["result",["surface","string"]]]],[11,"from_xpm_array","","Loads an SDL Surface from XPM data",39,N],[11,"save","","Saves an SDL Surface to a file",39,[[["self"],["p"]],["result",["string"]]]],[11,"save_rw","","Saves an SDL Surface to an RWops",39,[[["self"],["rwops"]],["result",["string"]]]],[11,"load_texture","sdl2::render","Loads an SDL Texture from a file",74,[[["self"],["p"]],["result",["texture","string"]]]],[11,"load","sdl2::rwops","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_typed","","",76,[[["self"],["str"]],["result",["surface","string"]]]],[11,"load_cur","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_ico","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_bmp","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_pnm","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_xpm","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_xcf","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_pcx","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_gif","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_jpg","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_tif","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_png","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_tga","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_lbm","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_xv","","",76,[[["self"]],["result",["surface","string"]]]],[11,"load_webp","","",76,[[["self"]],["result",["surface","string"]]]],[11,"is_cur","","",76,[[["self"]],["bool"]]],[11,"is_ico","","",76,[[["self"]],["bool"]]],[11,"is_bmp","","",76,[[["self"]],["bool"]]],[11,"is_pnm","","",76,[[["self"]],["bool"]]],[11,"is_xpm","","",76,[[["self"]],["bool"]]],[11,"is_xcf","","",76,[[["self"]],["bool"]]],[11,"is_pcx","","",76,[[["self"]],["bool"]]],[11,"is_gif","","",76,[[["self"]],["bool"]]],[11,"is_jpg","","",76,[[["self"]],["bool"]]],[11,"is_tif","","",76,[[["self"]],["bool"]]],[11,"is_png","","",76,[[["self"]],["bool"]]],[11,"is_lbm","","",76,[[["self"]],["bool"]]],[11,"is_xv","","",76,[[["self"]],["bool"]]],[11,"is_webp","","",76,[[["self"]],["bool"]]],[11,"load_wav","","Load src for use as a sample.",76,[[["self"]],["result",["chunk","string"]]]],[11,"load_music","","Load src for use as music.",76,[[["self"]],["result",["music","string"]]]],[11,"as_rgba","sdl2::pixels","",41,N],[11,"pixel","sdl2::render","",72,[[["self"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"hline","","",72,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"vline","","",72,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"rectangle","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"rounded_rectangle","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"box_","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"rounded_box","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"line","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"aa_line","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"thick_line","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["u8"],["c"]],["result",["string"]]]],[11,"circle","","",72,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"aa_circle","","",72,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"filled_circle","","",72,[[["self"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"arc","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"ellipse","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"aa_ellipse","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"filled_ellipse","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"pie","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"filled_pie","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"trigon","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"aa_trigon","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"filled_trigon","","",72,[[["self"],["i16"],["i16"],["i16"],["i16"],["i16"],["i16"],["c"]],["result",["string"]]]],[11,"polygon","","",72,N],[11,"aa_polygon","","",72,N],[11,"filled_polygon","","",72,N],[11,"textured_polygon","","",72,N],[11,"bezier","","",72,N],[11,"character","","",72,[[["self"],["i16"],["i16"],["char"],["c"]],["result",["string"]]]],[11,"string","","",72,[[["self"],["i16"],["i16"],["str"],["c"]],["result",["string"]]]],[11,"rotozoom","sdl2::surface","",39,[[["self"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[11,"rotozoom_xy","","",39,[[["self"],["f64"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[11,"zoom","","",39,[[["self"],["f64"],["f64"],["bool"]],["result",["surface","string"]]]],[11,"shrink","","",39,[[["self"],["i32"],["i32"]],["result",["surface","string"]]]],[11,"rotate_90deg","","",39,[[["self"],["i32"]],["result",["surface","string"]]]],[11,"default","sdl2::mixer","",113,[[],["group"]]],[11,"as_mut","sdl2::rect","",37,[[["self"]],["sdl_rect"]]],[11,"as_mut","","",38,[[["self"]],["sdl_point"]]],[11,"as_mut","sdl2::surface","",39,[[["self"]],["surfaceref"]]],[11,"to_string","sdl2::mixer","",118,[[["self"]],["string"]]],[11,"as_ref","sdl2::rect","",37,[[["self"]],["sdl_rect"]]],[11,"as_ref","","",38,[[["self"]],["sdl_point"]]],[11,"as_ref","sdl2::surface","",40,[[["self"]],["surfaceref"]]],[11,"as_ref","","",39,[[["self"]],["surfaceref"]]],[11,"eq","sdl2::event","",4,[[["self"],["eventtype"]],["bool"]]],[11,"eq","","",5,[[["self"],["windowevent"]],["bool"]]],[11,"ne","","",5,[[["self"],["windowevent"]],["bool"]]],[11,"eq","","",6,[[["self"],["event"]],["bool"]]],[11,"ne","","",6,[[["self"],["event"]],["bool"]]],[11,"eq","sdl2::joystick","",10,[[["self"],["powerlevel"]],["bool"]]],[11,"eq","","",14,[[["self"],["guid"]],["bool"]]],[11,"eq","","",11,[[["self"],["hatstate"]],["bool"]]],[11,"eq","sdl2::controller","",16,[[["self"],["axis"]],["bool"]]],[11,"eq","","",17,[[["self"],["button"]],["bool"]]],[11,"eq","","",18,[[["self"],["mappingstatus"]],["bool"]]],[11,"eq","sdl2::keyboard","",23,[[["self"],["keycode"]],["bool"]]],[11,"eq","","",24,[[["self"],["scancode"]],["bool"]]],[11,"eq","","",25,[[["self"],["mod"]],["bool"]]],[11,"ne","","",25,[[["self"],["mod"]],["bool"]]],[11,"eq","sdl2::mouse","",33,[[["self"],["relativemousestate"]],["bool"]]],[11,"ne","","",33,[[["self"],["relativemousestate"]],["bool"]]],[11,"eq","","",30,[[["self"],["systemcursor"]],["bool"]]],[11,"eq","","",31,[[["self"],["mousewheeldirection"]],["bool"]]],[11,"ne","","",31,[[["self"],["mousewheeldirection"]],["bool"]]],[11,"eq","","",32,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","","",35,[[["self"],["mousestate"]],["bool"]]],[11,"ne","","",35,[[["self"],["mousestate"]],["bool"]]],[11,"eq","sdl2::rect","",37,[[["self"],["rect"]],["bool"]]],[11,"eq","","",38,[[["self"],["point"]],["bool"]]],[11,"eq","sdl2::pixels","",41,[[["self"],["color"]],["bool"]]],[11,"ne","","",41,[[["self"],["color"]],["bool"]]],[11,"eq","","",43,[[["self"],["pixelformatenum"]],["bool"]]],[11,"eq","sdl2::video","",47,[[["self"],["glprofile"]],["bool"]]],[11,"ne","","",47,[[["self"],["glprofile"]],["bool"]]],[11,"eq","","",46,[[["self"],["displaymode"]],["bool"]]],[11,"ne","","",46,[[["self"],["displaymode"]],["bool"]]],[11,"eq","","",48,[[["self"],["fullscreentype"]],["bool"]]],[11,"eq","","",49,[[["self"],["windowpos"]],["bool"]]],[11,"ne","","",49,[[["self"],["windowpos"]],["bool"]]],[11,"eq","","",50,[[["self"],["swapinterval"]],["bool"]]],[11,"eq","sdl2::render","",65,[[["self"],["textureaccess"]],["bool"]]],[11,"eq","","",62,[[["self"],["rendererinfo"]],["bool"]]],[11,"ne","","",62,[[["self"],["rendererinfo"]],["bool"]]],[11,"eq","","",66,[[["self"],["blendmode"]],["bool"]]],[11,"eq","","",63,[[["self"],["texturequery"]],["bool"]]],[11,"ne","","",63,[[["self"],["texturequery"]],["bool"]]],[11,"eq","sdl2::log","",77,[[["self"],["category"]],["bool"]]],[11,"eq","","",78,[[["self"],["priority"]],["bool"]]],[11,"eq","sdl2","",0,[[["self"],["error"]],["bool"]]],[11,"eq","sdl2::audio","",83,[[["self"],["audioformat"]],["bool"]]],[11,"eq","","",84,[[["self"],["audiostatus"]],["bool"]]],[11,"eq","","",82,[[["self"],["audiospec"]],["bool"]]],[11,"ne","","",82,[[["self"],["audiospec"]],["bool"]]],[11,"eq","sdl2::version","",90,[[["self"],["version"]],["bool"]]],[11,"ne","","",90,[[["self"],["version"]],["bool"]]],[11,"eq","sdl2::messagebox","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"ne","","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"eq","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"ne","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"eq","sdl2::ttf","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"ne","","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"eq","","",100,[[["self"],["hinting"]],["bool"]]],[11,"eq","","",98,[[["self"],["glyphmetrics"]],["bool"]]],[11,"ne","","",98,[[["self"],["glyphmetrics"]],["bool"]]],[11,"eq","sdl2::image","",110,[[["self"],["initflag"]],["bool"]]],[11,"ne","","",110,[[["self"],["initflag"]],["bool"]]],[11,"eq","sdl2::mixer","",118,[[["self"],["initflag"]],["bool"]]],[11,"ne","","",118,[[["self"],["initflag"]],["bool"]]],[11,"eq","","",111,[[["self"],["chunk"]],["bool"]]],[11,"ne","","",111,[[["self"],["chunk"]],["bool"]]],[11,"eq","","",115,[[["self"],["fading"]],["bool"]]],[11,"eq","","",112,[[["self"],["channel"]],["bool"]]],[11,"ne","","",112,[[["self"],["channel"]],["bool"]]],[11,"eq","","",116,[[["self"],["musictype"]],["bool"]]],[11,"eq","","",114,[[["self"],["music"]],["bool"]]],[11,"ne","","",114,[[["self"],["music"]],["bool"]]],[11,"eq","sdl2","",1,[[["self"],["integerorsdlerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["integerorsdlerror"]],["bool"]]],[11,"from","sdl2::rect","",37,[[["sdl_rect"]],["rect"]]],[11,"from","","",37,N],[11,"from","","",38,[[["sdl_point"]],["point"]]],[11,"from","","",38,N],[11,"from","sdl2::pixels","",41,[[["sdl_color"]],["color"]]],[11,"from","","",41,N],[11,"from","","",41,N],[11,"from","","",43,[[["pixelformat"]],["pixelformatenum"]]],[11,"from","sdl2::video","",50,[[["i32"]],["self"]]],[11,"from","","",59,[[["windowcontext"]],["window"]]],[11,"from","sdl2::render","",73,[[["window"]],["canvasbuilder"]]],[11,"from","sdl2::messagebox","",91,[[["sdl_messageboxcolorscheme"]],["messageboxcolorscheme"]]],[11,"clone","sdl2::event","",4,[[["self"]],["eventtype"]]],[11,"clone","","",5,[[["self"]],["windowevent"]]],[11,"clone","","",6,[[["self"]],["event"]]],[11,"clone","sdl2::joystick","",10,[[["self"]],["powerlevel"]]],[11,"clone","","",14,[[["self"]],["guid"]]],[11,"clone","","",11,[[["self"]],["hatstate"]]],[11,"clone","sdl2::controller","",16,[[["self"]],["axis"]]],[11,"clone","","",17,[[["self"]],["button"]]],[11,"clone","","",18,[[["self"]],["mappingstatus"]]],[11,"clone","sdl2::keyboard","",23,[[["self"]],["keycode"]]],[11,"clone","","",24,[[["self"]],["scancode"]]],[11,"clone","","",25,[[["self"]],["mod"]]],[11,"clone","sdl2::mouse","",33,[[["self"]],["relativemousestate"]]],[11,"clone","","",30,[[["self"]],["systemcursor"]]],[11,"clone","","",31,[[["self"]],["mousewheeldirection"]]],[11,"clone","","",32,[[["self"]],["mousebutton"]]],[11,"clone","","",35,[[["self"]],["mousestate"]]],[11,"clone","sdl2::rect","",37,[[["self"]],["rect"]]],[11,"clone","","",38,[[["self"]],["point"]]],[11,"clone","sdl2::pixels","",41,[[["self"]],["color"]]],[11,"clone","","",43,[[["self"]],["pixelformatenum"]]],[11,"clone","sdl2::video","",47,[[["self"]],["glprofile"]]],[11,"clone","","",46,[[["self"]],["displaymode"]]],[11,"clone","","",48,[[["self"]],["fullscreentype"]]],[11,"clone","","",49,[[["self"]],["windowpos"]]],[11,"clone","","",50,[[["self"]],["swapinterval"]]],[11,"clone","","",131,[[["self"]],["driveriterator"]]],[11,"clone","sdl2::render","",65,[[["self"]],["textureaccess"]]],[11,"clone","","",62,[[["self"]],["rendererinfo"]]],[11,"clone","","",66,[[["self"]],["blendmode"]]],[11,"clone","","",63,[[["self"]],["texturequery"]]],[11,"clone","","",133,[[["self"]],["driveriterator"]]],[11,"clone","sdl2::log","",77,[[["self"]],["category"]]],[11,"clone","","",78,[[["self"]],["priority"]]],[11,"clone","sdl2","",0,[[["self"]],["error"]]],[11,"clone","","",27,[[["self"]],["sdl"]]],[11,"clone","","",79,[[["self"]],["audiosubsystem"]]],[11,"clone","","",19,[[["self"]],["gamecontrollersubsystem"]]],[11,"clone","","",21,[[["self"]],["hapticsubsystem"]]],[11,"clone","","",12,[[["self"]],["joysticksubsystem"]]],[11,"clone","","",2,[[["self"]],["videosubsystem"]]],[11,"clone","sdl2::audio","",83,[[["self"]],["audioformat"]]],[11,"clone","","",84,[[["self"]],["audiostatus"]]],[11,"clone","","",134,[[["self"]],["driveriterator"]]],[11,"clone","","",81,[[["self"]],["audiospecdesired"]]],[11,"clone","","",82,[[["self"]],["audiospec"]]],[11,"clone","","",89,[[["self"]],["audiocvt"]]],[11,"clone","sdl2::version","",90,[[["self"]],["version"]]],[11,"clone","sdl2::messagebox","",95,[[["self"]],["messageboxflag"]]],[11,"clone","","",96,[[["self"]],["messageboxbuttonflag"]]],[11,"clone","sdl2::ttf","",102,[[["self"]],["fontstyle"]]],[11,"clone","","",100,[[["self"]],["hinting"]]],[11,"clone","","",98,[[["self"]],["glyphmetrics"]]],[11,"clone","sdl2::image","",110,[[["self"]],["initflag"]]],[11,"clone","sdl2::mixer","",118,[[["self"]],["initflag"]]],[11,"clone","","",115,[[["self"]],["fading"]]],[11,"clone","","",112,[[["self"]],["channel"]]],[11,"clone","","",113,[[["self"]],["group"]]],[11,"clone","","",116,[[["self"]],["musictype"]]],[11,"clone","sdl2","",1,[[["self"]],["integerorsdlerror"]]],[11,"into","sdl2::rect","",37,[[["self"]],["sdl_rect"]]],[11,"into","","",37,N],[11,"into","","",38,[[["self"]],["sdl_point"]]],[11,"into","","",38,N],[11,"into","sdl2::pixels","",41,[[["self"]],["sdl_color"]]],[11,"into","","",43,[[["self"]],["uint32_t"]]],[11,"into","sdl2::messagebox","",91,[[["self"]],["sdl_messageboxcolorscheme"]]],[11,"cmp","sdl2::keyboard","",25,[[["self"],["mod"]],["ordering"]]],[11,"cmp","sdl2::messagebox","",95,[[["self"],["messageboxflag"]],["ordering"]]],[11,"cmp","","",96,[[["self"],["messageboxbuttonflag"]],["ordering"]]],[11,"cmp","sdl2::ttf","",102,[[["self"],["fontstyle"]],["ordering"]]],[11,"cmp","sdl2::image","",110,[[["self"],["initflag"]],["ordering"]]],[11,"cmp","sdl2::mixer","",118,[[["self"],["initflag"]],["ordering"]]],[11,"drop","sdl2::joystick","",13,[[["self"]]]],[11,"drop","sdl2::controller","",20,[[["self"]]]],[11,"drop","sdl2::haptic","",22,[[["self"]]]],[11,"drop","sdl2::mouse","",34,[[["self"]]]],[11,"drop","sdl2::surface","",130,[[["self"]]]],[11,"drop","sdl2::pixels","",44,[[["self"]]]],[11,"drop","sdl2::video","",56,[[["self"]]]],[11,"drop","","",57,[[["self"]]]],[11,"drop","sdl2::timer","",61,[[["self"]]]],[11,"drop","sdl2::render","",71,[[["self"]]]],[11,"drop","","",75,[[["self"]]]],[11,"drop","sdl2::rwops","",76,[[["self"]]]],[11,"drop","sdl2","",8,[[["self"]]]],[11,"drop","sdl2::audio","",80,[[["self"]]]],[11,"drop","","",135,[[["self"]]]],[11,"drop","sdl2::ttf","",104,[[["self"]]]],[11,"drop","","",105,[[["self"]]]],[11,"drop","sdl2::image","",136,[[["self"]]]],[11,"drop","sdl2::mixer","",137,[[["self"]]]],[11,"drop","","",111,[[["self"]]]],[11,"drop","","",114,[[["self"]]]],[11,"drop","sdl2::gfx::framerate","",122,[[["self"]]]],[11,"extend","sdl2::keyboard","",25,[[["self"],["t"]]]],[11,"extend","sdl2::messagebox","",95,[[["self"],["t"]]]],[11,"extend","","",96,[[["self"],["t"]]]],[11,"extend","sdl2::ttf","",102,[[["self"],["t"]]]],[11,"extend","sdl2::image","",110,[[["self"],["t"]]]],[11,"extend","sdl2::mixer","",118,[[["self"],["t"]]]],[11,"next","sdl2::event","",123,[[["self"]],["option",["event"]]]],[11,"next","","",124,[[["self"]],["option",["event"]]]],[11,"next","","",125,[[["self"]],["option",["event"]]]],[11,"next","sdl2::keyboard","",126,[[["self"]],["option"]]],[11,"next","","",127,[[["self"]],["option",["scancode"]]]],[11,"next","sdl2::mouse","",128,[[["self"]],["option"]]],[11,"next","","",129,[[["self"]],["option",["mousebutton"]]]],[11,"next","sdl2::video","",131,[[["self"]],["option",["str"]]]],[11,"size_hint","","",131,N],[11,"next","sdl2::render","",133,[[["self"]],["option",["rendererinfo"]]]],[11,"size_hint","","",133,N],[11,"next","sdl2::audio","",134,[[["self"]],["option",["str"]]]],[11,"size_hint","","",134,N],[11,"partial_cmp","sdl2::keyboard","",25,[[["self"],["mod"]],["option",["ordering"]]]],[11,"lt","","",25,[[["self"],["mod"]],["bool"]]],[11,"le","","",25,[[["self"],["mod"]],["bool"]]],[11,"gt","","",25,[[["self"],["mod"]],["bool"]]],[11,"ge","","",25,[[["self"],["mod"]],["bool"]]],[11,"partial_cmp","sdl2::messagebox","",95,[[["self"],["messageboxflag"]],["option",["ordering"]]]],[11,"lt","","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"le","","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"gt","","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"ge","","",95,[[["self"],["messageboxflag"]],["bool"]]],[11,"partial_cmp","","",96,[[["self"],["messageboxbuttonflag"]],["option",["ordering"]]]],[11,"lt","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"le","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"gt","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"ge","","",96,[[["self"],["messageboxbuttonflag"]],["bool"]]],[11,"partial_cmp","sdl2::ttf","",102,[[["self"],["fontstyle"]],["option",["ordering"]]]],[11,"lt","","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"le","","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"gt","","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"ge","","",102,[[["self"],["fontstyle"]],["bool"]]],[11,"partial_cmp","sdl2::image","",110,[[["self"],["initflag"]],["option",["ordering"]]]],[11,"lt","","",110,[[["self"],["initflag"]],["bool"]]],[11,"le","","",110,[[["self"],["initflag"]],["bool"]]],[11,"gt","","",110,[[["self"],["initflag"]],["bool"]]],[11,"ge","","",110,[[["self"],["initflag"]],["bool"]]],[11,"partial_cmp","sdl2::mixer","",118,[[["self"],["initflag"]],["option",["ordering"]]]],[11,"lt","","",118,[[["self"],["initflag"]],["bool"]]],[11,"le","","",118,[[["self"],["initflag"]],["bool"]]],[11,"gt","","",118,[[["self"],["initflag"]],["bool"]]],[11,"ge","","",118,[[["self"],["initflag"]],["bool"]]],[11,"deref","sdl2::rect","Example",37,[[["self"]],["sdl_rect"]]],[11,"deref","","Example",38,[[["self"]],["sdl_point"]]],[11,"deref","sdl2::surface","",39,[[["self"]],["surfaceref"]]],[11,"deref","sdl2::video","",55,[[["self"]],["surfaceref"]]],[11,"deref","sdl2::render","",72,[[["self"]],["renderercontext"]]],[11,"deref","sdl2::audio","",135,[[["self"]],["cb"]]],[11,"fmt","sdl2::event","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::filesystem","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::joystick","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::controller","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mouse","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::rect","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::pixels","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::video","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::render","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::log","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::audio","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::version","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mixer","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","Shows the original regular expression.",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::filesystem","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::joystick","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::controller","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::video","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::render","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::version","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",101,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2","",1,[[["self"],["formatter"]],["result"]]],[11,"add","sdl2::rect","",38,[[["self"],["point"]],["point"]]],[11,"sub","sdl2::keyboard","Returns the set difference of the two sets of flags.",25,[[["self"],["mod"]],["mod"]]],[11,"sub","sdl2::rect","",38,[[["self"],["point"]],["point"]]],[11,"sub","sdl2::messagebox","Returns the set difference of the two sets of flags.",95,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",96,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"sub","sdl2::ttf","Returns the set difference of the two sets of flags.",102,[[["self"],["fontstyle"]],["fontstyle"]]],[11,"sub","sdl2::image","Returns the set difference of the two sets of flags.",110,[[["self"],["initflag"]],["initflag"]]],[11,"sub","sdl2::mixer","Returns the set difference of the two sets of flags.",118,[[["self"],["initflag"]],["initflag"]]],[11,"mul","sdl2::rect","",38,[[["self"],["i32"]],["point"]]],[11,"div","","",38,[[["self"],["i32"]],["point"]]],[11,"neg","","",38,[[["self"]],["point"]]],[11,"sub_assign","sdl2::keyboard","Disables all flags enabled in the set.",25,[[["self"],["mod"]]]],[11,"sub_assign","sdl2::messagebox","Disables all flags enabled in the set.",95,[[["self"],["messageboxflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"sub_assign","sdl2::ttf","Disables all flags enabled in the set.",102,[[["self"],["fontstyle"]]]],[11,"sub_assign","sdl2::image","Disables all flags enabled in the set.",110,[[["self"],["initflag"]]]],[11,"sub_assign","sdl2::mixer","Disables all flags enabled in the set.",118,[[["self"],["initflag"]]]],[11,"not","sdl2::keyboard","Returns the complement of this set of flags.",25,[[["self"]],["mod"]]],[11,"not","sdl2::messagebox","Returns the complement of this set of flags.",95,[[["self"]],["messageboxflag"]]],[11,"not","","Returns the complement of this set of flags.",96,[[["self"]],["messageboxbuttonflag"]]],[11,"not","sdl2::ttf","Returns the complement of this set of flags.",102,[[["self"]],["fontstyle"]]],[11,"not","sdl2::image","Returns the complement of this set of flags.",110,[[["self"]],["initflag"]]],[11,"not","sdl2::mixer","Returns the complement of this set of flags.",118,[[["self"]],["initflag"]]],[11,"bitand","sdl2::keyboard","Returns the intersection between the two sets of flags.",25,[[["self"],["mod"]],["mod"]]],[11,"bitand","sdl2::rect","",37,[[["self"],["rect"]],["option",["rect"]]]],[11,"bitand","sdl2::messagebox","Returns the intersection between the two sets of flags.",95,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",96,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitand","sdl2::ttf","Returns the intersection between the two sets of flags.",102,[[["self"],["fontstyle"]],["fontstyle"]]],[11,"bitand","sdl2::image","Returns the intersection between the two sets of flags.",110,[[["self"],["initflag"]],["initflag"]]],[11,"bitand","sdl2::mixer","Returns the intersection between the two sets of flags.",118,[[["self"],["initflag"]],["initflag"]]],[11,"bitor","sdl2::keyboard","Returns the union of the two sets of flags.",25,[[["self"],["mod"]],["mod"]]],[11,"bitor","sdl2::rect","",37,[[["self"],["rect"]],["rect"]]],[11,"bitor","sdl2::messagebox","Returns the union of the two sets of flags.",95,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",96,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitor","sdl2::ttf","Returns the union of the two sets of flags.",102,[[["self"],["fontstyle"]],["fontstyle"]]],[11,"bitor","sdl2::image","Returns the union of the two sets of flags.",110,[[["self"],["initflag"]],["initflag"]]],[11,"bitor","sdl2::mixer","Returns the union of the two sets of flags.",118,[[["self"],["initflag"]],["initflag"]]],[11,"bitxor","sdl2::keyboard","Returns the left flags, but with all the right flags toggled.",25,[[["self"],["mod"]],["mod"]]],[11,"bitxor","sdl2::messagebox","Returns the left flags, but with all the right flags toggled.",95,[[["self"],["messageboxflag"]],["messageboxflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,[[["self"],["messageboxbuttonflag"]],["messageboxbuttonflag"]]],[11,"bitxor","sdl2::ttf","Returns the left flags, but with all the right flags toggled.",102,[[["self"],["fontstyle"]],["fontstyle"]]],[11,"bitxor","sdl2::image","Returns the left flags, but with all the right flags toggled.",110,[[["self"],["initflag"]],["initflag"]]],[11,"bitxor","sdl2::mixer","Returns the left flags, but with all the right flags toggled.",118,[[["self"],["initflag"]],["initflag"]]],[11,"bitand_assign","sdl2::keyboard","Disables all flags disabled in the set.",25,[[["self"],["mod"]]]],[11,"bitand_assign","sdl2::messagebox","Disables all flags disabled in the set.",95,[[["self"],["messageboxflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"bitand_assign","sdl2::ttf","Disables all flags disabled in the set.",102,[[["self"],["fontstyle"]]]],[11,"bitand_assign","sdl2::image","Disables all flags disabled in the set.",110,[[["self"],["initflag"]]]],[11,"bitand_assign","sdl2::mixer","Disables all flags disabled in the set.",118,[[["self"],["initflag"]]]],[11,"bitor_assign","sdl2::keyboard","Adds the set of flags.",25,[[["self"],["mod"]]]],[11,"bitor_assign","sdl2::messagebox","Adds the set of flags.",95,[[["self"],["messageboxflag"]]]],[11,"bitor_assign","","Adds the set of flags.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"bitor_assign","sdl2::ttf","Adds the set of flags.",102,[[["self"],["fontstyle"]]]],[11,"bitor_assign","sdl2::image","Adds the set of flags.",110,[[["self"],["initflag"]]]],[11,"bitor_assign","sdl2::mixer","Adds the set of flags.",118,[[["self"],["initflag"]]]],[11,"bitxor_assign","sdl2::keyboard","Toggles the set of flags.",25,[[["self"],["mod"]]]],[11,"bitxor_assign","sdl2::messagebox","Toggles the set of flags.",95,[[["self"],["messageboxflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",96,[[["self"],["messageboxbuttonflag"]]]],[11,"bitxor_assign","sdl2::ttf","Toggles the set of flags.",102,[[["self"],["fontstyle"]]]],[11,"bitxor_assign","sdl2::image","Toggles the set of flags.",110,[[["self"],["initflag"]]]],[11,"bitxor_assign","sdl2::mixer","Toggles the set of flags.",118,[[["self"],["initflag"]]]],[11,"deref_mut","sdl2::rect","Example",37,[[["self"]],["sdl_rect"]]],[11,"deref_mut","","Example",38,[[["self"]],["sdl_point"]]],[11,"deref_mut","sdl2::surface","",39,[[["self"]],["surfaceref"]]],[11,"deref_mut","sdl2::video","",55,[[["self"]],["surfaceref"]]],[11,"deref_mut","sdl2::audio","",135,[[["self"]],["cb"]]],[11,"hash","sdl2::event","",4,N],[11,"hash","","",5,N],[11,"hash","sdl2::joystick","",10,N],[11,"hash","","",11,N],[11,"hash","sdl2::controller","",16,N],[11,"hash","","",17,N],[11,"hash","","",18,N],[11,"hash","sdl2::keyboard","",23,N],[11,"hash","","",24,N],[11,"hash","","",25,N],[11,"hash","sdl2::mouse","",33,N],[11,"hash","","",30,N],[11,"hash","","",31,N],[11,"hash","","",32,N],[11,"hash","","",35,N],[11,"hash","sdl2::rect","",37,[[["self"],["h"]]]],[11,"hash","","",38,[[["self"],["h"]]]],[11,"hash","sdl2::pixels","",41,N],[11,"hash","","",43,N],[11,"hash","sdl2::video","",47,N],[11,"hash","","",46,N],[11,"hash","","",48,N],[11,"hash","","",49,N],[11,"hash","","",50,N],[11,"hash","sdl2::render","",65,N],[11,"hash","","",62,N],[11,"hash","","",66,N],[11,"hash","","",63,N],[11,"hash","sdl2::log","",77,N],[11,"hash","","",78,N],[11,"hash","sdl2","",0,N],[11,"hash","sdl2::audio","",83,N],[11,"hash","","",84,N],[11,"hash","","",82,N],[11,"hash","sdl2::version","",90,N],[11,"hash","sdl2::messagebox","",95,N],[11,"hash","","",96,N],[11,"hash","sdl2::ttf","",102,N],[11,"hash","sdl2::image","",110,N],[11,"hash","sdl2::mixer","",118,N],[11,"hash","","",115,N],[11,"hash","","",116,N],[11,"from_iter","sdl2::keyboard","",25,[[["t"]],["mod"]]],[11,"from_iter","sdl2::messagebox","",95,[[["t"]],["messageboxflag"]]],[11,"from_iter","","",96,[[["t"]],["messageboxbuttonflag"]]],[11,"from_iter","sdl2::ttf","",102,[[["t"]],["fontstyle"]]],[11,"from_iter","sdl2::image","",110,[[["t"]],["initflag"]]],[11,"from_iter","sdl2::mixer","",118,[[["t"]],["initflag"]]],[11,"fmt","sdl2::keyboard","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mixer","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mixer","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mixer","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::keyboard","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::messagebox","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::ttf","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::image","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2::mixer","",118,[[["self"],["formatter"]],["result"]]],[11,"read","sdl2::rwops","",76,N],[11,"seek","","",76,[[["self"],["seekfrom"]],["result",["u64"]]]],[11,"write","","",76,N],[11,"flush","","",76,[[["self"]],["result"]]],[11,"description","sdl2::filesystem","",9,[[["self"]],["str"]]],[11,"description","sdl2::controller","",15,[[["self"]],["str"]]],[11,"description","sdl2::video","",51,[[["self"]],["str"]]],[11,"description","sdl2::render","",132,[[["self"]],["str"]]],[11,"description","","",64,[[["self"]],["str"]]],[11,"description","","",67,[[["self"]],["str"]]],[11,"description","","",68,[[["self"]],["str"]]],[11,"description","","",69,[[["self"]],["str"]]],[11,"description","sdl2","",0,[[["self"]],["str"]]],[11,"description","sdl2::messagebox","",94,[[["self"]],["str"]]],[11,"description","sdl2::ttf","",101,[[["self"]],["str"]]],[11,"cause","","",101,[[["self"]],["option",["error"]]]],[11,"description","","",99,[[["self"]],["str"]]],[11,"cause","","",99,[[["self"]],["option",["error"]]]],[11,"description","sdl2","",1,[[["self"]],["str"]]],[11,"from_i64","sdl2::event","",4,[[["i64"]],["option",["eventtype"]]]],[11,"from_u64","","",4,[[["u64"]],["option",["eventtype"]]]],[11,"from_i64","sdl2::pixels","",43,[[["i64"]],["option",["pixelformatenum"]]]],[11,"from_u64","","",43,[[["u64"]],["option",["pixelformatenum"]]]],[11,"from_i64","sdl2::render","",65,[[["i64"]],["option",["textureaccess"]]]],[11,"from_u64","","",65,[[["u64"]],["option",["textureaccess"]]]],[11,"from_i64","","",66,[[["i64"]],["option",["blendmode"]]]],[11,"from_u64","","",66,[[["u64"]],["option",["blendmode"]]]],[11,"from_i64","sdl2::audio","",84,[[["i64"]],["option",["audiostatus"]]]],[11,"from_u64","","",84,[[["u64"]],["option",["audiostatus"]]]]],"paths":[[4,"Error"],[4,"IntegerOrSdlError"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEvent"],[4,"Event"],[3,"EventSubsystem"],[3,"EventPump"],[4,"PrefPathError"],[4,"PowerLevel"],[4,"HatState"],[3,"JoystickSubsystem"],[3,"Joystick"],[3,"Guid"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameControllerSubsystem"],[3,"GameController"],[3,"HapticSubsystem"],[3,"Haptic"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"Sdl"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"RelativeMouseState"],[3,"Cursor"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"Color"],[3,"PixelMasks"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[4,"SwapInterval"],[4,"WindowBuildError"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"WindowSurfaceRef"],[3,"GLContext"],[3,"WindowContext"],[3,"WindowBuilder"],[3,"Window"],[3,"TimerSubsystem"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"TargetRenderError"],[4,"TextureAccess"],[4,"BlendMode"],[4,"TextureValueError"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[8,"RenderTarget"],[3,"RendererContext"],[3,"Canvas"],[3,"CanvasBuilder"],[3,"TextureCreator"],[3,"Texture"],[3,"RWops"],[4,"Category"],[4,"Priority"],[3,"AudioSubsystem"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioFormat"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"AudioQueue"],[3,"AudioDevice"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[4,"ShowMessageError"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[4,"Hint"],[3,"GlyphMetrics"],[4,"InitError"],[4,"Hinting"],[4,"FontError"],[3,"FontStyle"],[3,"PartialRendering"],[3,"Font"],[3,"Sdl2TtfContext"],[8,"LoadSurface"],[8,"SaveSurface"],[8,"LoadTexture"],[8,"ImageRWops"],[3,"InitFlag"],[3,"Chunk"],[3,"Channel"],[3,"Group"],[3,"Music"],[4,"Fading"],[4,"MusicType"],[8,"LoaderRWops"],[3,"InitFlag"],[8,"ToColor"],[8,"DrawRenderer"],[8,"RotozoomSurface"],[3,"FPSManager"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"SurfaceContext"],[3,"DriverIterator"],[3,"SdlError"],[3,"DriverIterator"],[3,"DriverIterator"],[3,"AudioDeviceLockGuard"],[3,"Sdl2ImageContext"],[3,"Sdl2MixerContext"]]};
searchIndex["sdl2_sys"]={"doc":"This crate was mainly generated by `bindgen`. It should be enough in most cases, but if you ever find discrepancies between what bindgen generated and your OS, you can always  generate your own `sdl2-sys`.","items":[[3,"__fsid_t","sdl2_sys","",N,N],[12,"__val","","",0,N],[3,"_SDL_iconv_t","","",N,N],[3,"SDL_AssertData","","",N,N],[12,"always_ignore","","",1,N],[12,"trigger_count","","",1,N],[12,"condition","","",1,N],[12,"filename","","",1,N],[12,"linenum","","",1,N],[12,"function","","",1,N],[12,"next","","",1,N],[3,"SDL_atomic_t","","\\brief A type representing an atomic integer value.  It is a struct so people don't accidentally use numeric operations on it.",N,N],[12,"value","","",2,N],[3,"SDL_mutex","","",N,N],[3,"SDL_semaphore","","",N,N],[3,"SDL_cond","","",N,N],[3,"SDL_Thread","","",N,N],[3,"SDL_RWops","","This is the read/write operation structure -- very basic.",N,N],[12,"size","","Return the size of the file in this rwops, or -1 if unknown",3,N],[12,"seek","","Seek to \\c offset relative to \\c whence, one of stdio's whence values: RW_SEEK_SET, RW_SEEK_CUR, RW_SEEK_END",3,N],[12,"read","","Read up to \\c maxnum objects each of size \\c size from the data stream to the area pointed at by \\c ptr.",3,N],[12,"write","","Write exactly \\c num objects each of size \\c size from the area pointed at by \\c ptr to data stream.",3,N],[12,"close","","Close and free an allocated SDL_RWops structure.",3,N],[12,"type_","","",3,N],[12,"hidden","","",3,N],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"base","","",4,N],[12,"here","","",4,N],[12,"stop","","",4,N],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2","","",N,N],[12,"data1","","",5,N],[12,"data2","","",5,N],[3,"SDL_AudioSpec","","The calculated values in this structure are calculated by SDL_OpenAudio().",N,N],[12,"freq","","< DSP frequency -- samples per second",6,N],[12,"format","","< Audio data format",6,N],[12,"channels","","< Number of channels: 1 mono, 2 stereo",6,N],[12,"silence","","< Audio buffer silence value (calculated)",6,N],[12,"samples","","< Audio buffer size in sample FRAMES (total samples divided by channel count)",6,N],[12,"padding","","< Necessary for some compile environments",6,N],[12,"size","","< Audio buffer size in bytes (calculated)",6,N],[12,"callback","","< Callback that feeds the audio device (NULL to use SDL_QueueAudio()).",6,N],[12,"userdata","","< Userdata passed to callback (ignored for NULL callbacks).",6,N],[3,"SDL_AudioCVT","","",N,N],[12,"needed","","< Set to 1 if conversion possible",7,N],[12,"src_format","","< Source audio format",7,N],[12,"dst_format","","< Target audio format",7,N],[12,"rate_incr","","< Rate conversion increment",7,N],[12,"buf","","< Buffer to hold entire audio data",7,N],[12,"len","","< Length of original audio buffer",7,N],[12,"len_cvt","","< Length of converted audio buffer",7,N],[12,"len_mult","","< buffer must be len*len_mult big",7,N],[12,"len_ratio","","< Given len, final size is len*len_ratio",7,N],[12,"filters","","< NULL-terminated list of filter functions",7,N],[12,"filter_index","","< Current audio conversion function",7,N],[3,"_SDL_AudioStream","","",N,N],[3,"div_t","","",N,N],[12,"quot","","",8,N],[12,"rem","","",8,N],[3,"ldiv_t","","",N,N],[12,"quot","","",9,N],[12,"rem","","",9,N],[3,"lldiv_t","","",N,N],[12,"quot","","",10,N],[12,"rem","","",10,N],[3,"__sigset_t","","",N,N],[12,"__val","","",11,N],[3,"timeval","","",N,N],[12,"tv_sec","","",12,N],[12,"tv_usec","","",12,N],[3,"timespec","","",N,N],[12,"tv_sec","","",13,N],[12,"tv_nsec","","",13,N],[3,"fd_set","","",N,N],[12,"__fds_bits","","",14,N],[3,"__pthread_rwlock_arch_t","","",N,N],[12,"__readers","","",15,N],[12,"__writers","","",15,N],[12,"__wrphase_futex","","",15,N],[12,"__writers_futex","","",15,N],[12,"__pad3","","",15,N],[12,"__pad4","","",15,N],[12,"__cur_writer","","",15,N],[12,"__shared","","",15,N],[12,"__rwelision","","",15,N],[12,"__pad1","","",15,N],[12,"__pad2","","",15,N],[12,"__flags","","",15,N],[3,"__pthread_internal_list","","",N,N],[12,"__prev","","",16,N],[12,"__next","","",16,N],[3,"__pthread_mutex_s","","",N,N],[12,"__lock","","",17,N],[12,"__count","","",17,N],[12,"__owner","","",17,N],[12,"__nusers","","",17,N],[12,"__kind","","",17,N],[12,"__spins","","",17,N],[12,"__elision","","",17,N],[12,"__list","","",17,N],[3,"__pthread_cond_s","","",N,N],[12,"__bindgen_anon_1","","",18,N],[12,"__bindgen_anon_2","","",18,N],[12,"__g_refs","","",18,N],[12,"__g_size","","",18,N],[12,"__g1_orig_size","","",18,N],[12,"__wrefs","","",18,N],[12,"__g_signals","","",18,N],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"__low","","",19,N],[12,"__high","","",19,N],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","","",N,N],[12,"__low","","",20,N],[12,"__high","","",20,N],[3,"random_data","","",N,N],[12,"fptr","","",21,N],[12,"rptr","","",21,N],[12,"state","","",21,N],[12,"rand_type","","",21,N],[12,"rand_deg","","",21,N],[12,"rand_sep","","",21,N],[12,"end_ptr","","",21,N],[3,"drand48_data","","",N,N],[12,"__x","","",22,N],[12,"__old_x","","",22,N],[12,"__c","","",22,N],[12,"__init","","",22,N],[12,"__a","","",22,N],[3,"SDL_Color","","",N,N],[12,"r","","",23,N],[12,"g","","",23,N],[12,"b","","",23,N],[12,"a","","",23,N],[3,"SDL_Palette","","",N,N],[12,"ncolors","","",24,N],[12,"colors","","",24,N],[12,"version","","",24,N],[12,"refcount","","",24,N],[3,"SDL_PixelFormat","","\\note Everything in the pixel format structure is read-only.",N,N],[12,"format","","",25,N],[12,"palette","","",25,N],[12,"BitsPerPixel","","",25,N],[12,"BytesPerPixel","","",25,N],[12,"padding","","",25,N],[12,"Rmask","","",25,N],[12,"Gmask","","",25,N],[12,"Bmask","","",25,N],[12,"Amask","","",25,N],[12,"Rloss","","",25,N],[12,"Gloss","","",25,N],[12,"Bloss","","",25,N],[12,"Aloss","","",25,N],[12,"Rshift","","",25,N],[12,"Gshift","","",25,N],[12,"Bshift","","",25,N],[12,"Ashift","","",25,N],[12,"refcount","","",25,N],[12,"next","","",25,N],[3,"SDL_Point","","\\brief  The structure that defines a point",N,N],[12,"x","","",26,N],[12,"y","","",26,N],[3,"SDL_Rect","","\\brief A rectangle, with the origin at the upper left.",N,N],[12,"x","","",27,N],[12,"y","","",27,N],[12,"w","","",27,N],[12,"h","","",27,N],[3,"SDL_Surface","","\\brief A collection of pixels used in software blitting.",N,N],[12,"flags","","< Read-only",28,N],[12,"format","","< Read-only",28,N],[12,"w","","< Read-only",28,N],[12,"h","","< Read-only",28,N],[12,"pitch","","< Read-only",28,N],[12,"pixels","","< Read-write",28,N],[12,"userdata","","< Read-write",28,N],[12,"locked","","< Read-only",28,N],[12,"lock_data","","< Read-only",28,N],[12,"clip_rect","","< Read-only",28,N],[12,"map","","< Private",28,N],[12,"refcount","","< Read-mostly",28,N],[3,"SDL_DisplayMode","","\\brief  The structure that defines a display mode",N,N],[12,"format","","< pixel format",29,N],[12,"w","","< width, in screen coordinates",29,N],[12,"h","","< height, in screen coordinates",29,N],[12,"refresh_rate","","< refresh rate (or zero for unspecified)",29,N],[12,"driverdata","","< driver-specific data, initialize to 0",29,N],[3,"SDL_Window","","",N,N],[3,"SDL_Keysym","","\\brief The SDL keysym structure, used in key events.",N,N],[12,"scancode","","< SDL physical key code - see ::SDL_Scancode for details",30,N],[12,"sym","","< SDL virtual key code - see ::SDL_Keycode for details",30,N],[12,"mod_","","< current key modifiers",30,N],[12,"unused","","",30,N],[3,"SDL_Cursor","","",N,N],[3,"_SDL_Joystick","","The joystick structure used to identify an SDL joystick",N,N],[3,"SDL_JoystickGUID","","",N,N],[12,"data","","",31,N],[3,"_SDL_GameController","","The gamecontroller structure used to identify an SDL game controller",N,N],[3,"SDL_GameControllerButtonBind","","Get the SDL joystick layer binding for this controller button/axis mapping",N,N],[12,"bindType","","",32,N],[12,"value","","",32,N],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"hat","","",33,N],[12,"hat_mask","","",33,N],[3,"SDL_Finger","","",N,N],[12,"id","","",34,N],[12,"x","","",34,N],[12,"y","","",34,N],[12,"pressure","","",34,N],[3,"SDL_CommonEvent","","\\brief Fields shared by every event",N,N],[12,"type_","","",35,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",35,N],[3,"SDL_DisplayEvent","","\\brief Display state change event data (event.display.*)",N,N],[12,"type_","","< ::SDL_DISPLAYEVENT",36,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",36,N],[12,"display","","< The associated display index",36,N],[12,"event","","< ::SDL_DisplayEventID",36,N],[12,"padding1","","",36,N],[12,"padding2","","",36,N],[12,"padding3","","",36,N],[12,"data1","","< event dependent data",36,N],[3,"SDL_WindowEvent","","\\brief Window state change event data (event.window.*)",N,N],[12,"type_","","< ::SDL_WINDOWEVENT",37,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",37,N],[12,"windowID","","< The associated window",37,N],[12,"event","","< ::SDL_WindowEventID",37,N],[12,"padding1","","",37,N],[12,"padding2","","",37,N],[12,"padding3","","",37,N],[12,"data1","","< event dependent data",37,N],[12,"data2","","< event dependent data",37,N],[3,"SDL_KeyboardEvent","","\\brief Keyboard button event structure (event.key.*)",N,N],[12,"type_","","< ::SDL_KEYDOWN or ::SDL_KEYUP",38,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",38,N],[12,"windowID","","< The window with keyboard focus, if any",38,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",38,N],[12,"repeat","","< Non-zero if this is a key repeat",38,N],[12,"padding2","","",38,N],[12,"padding3","","",38,N],[12,"keysym","","< The key that was pressed or released",38,N],[3,"SDL_TextEditingEvent","","\\brief Keyboard text editing event structure (event.edit.*)",N,N],[12,"type_","","< ::SDL_TEXTEDITING",39,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",39,N],[12,"windowID","","< The window with keyboard focus, if any",39,N],[12,"text","","< The editing text",39,N],[12,"start","","< The start cursor of selected editing text",39,N],[12,"length","","< The length of selected editing text",39,N],[3,"SDL_TextInputEvent","","\\brief Keyboard text input event structure (event.text.*)",N,N],[12,"type_","","< ::SDL_TEXTINPUT",40,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",40,N],[12,"windowID","","< The window with keyboard focus, if any",40,N],[12,"text","","< The input text",40,N],[3,"SDL_MouseMotionEvent","","\\brief Mouse motion event structure (event.motion.*)",N,N],[12,"type_","","< ::SDL_MOUSEMOTION",41,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",41,N],[12,"windowID","","< The window with mouse focus, if any",41,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",41,N],[12,"state","","< The current button state",41,N],[12,"x","","< X coordinate, relative to window",41,N],[12,"y","","< Y coordinate, relative to window",41,N],[12,"xrel","","< The relative motion in the X direction",41,N],[12,"yrel","","< The relative motion in the Y direction",41,N],[3,"SDL_MouseButtonEvent","","\\brief Mouse button event structure (event.button.*)",N,N],[12,"type_","","< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP",42,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",42,N],[12,"windowID","","< The window with mouse focus, if any",42,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",42,N],[12,"button","","< The mouse button index",42,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",42,N],[12,"clicks","","< 1 for single-click, 2 for double-click, etc.",42,N],[12,"padding1","","",42,N],[12,"x","","< X coordinate, relative to window",42,N],[12,"y","","< Y coordinate, relative to window",42,N],[3,"SDL_MouseWheelEvent","","\\brief Mouse wheel event structure (event.wheel.*)",N,N],[12,"type_","","< ::SDL_MOUSEWHEEL",43,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",43,N],[12,"windowID","","< The window with mouse focus, if any",43,N],[12,"which","","< The mouse instance id, or SDL_TOUCH_MOUSEID",43,N],[12,"x","","< The amount scrolled horizontally, positive to the right and negative to the left",43,N],[12,"y","","< The amount scrolled vertically, positive away from the user and negative toward the user",43,N],[12,"direction","","< Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED the values in X and Y will be opposite. Multiply by -1 to change them back",43,N],[3,"SDL_JoyAxisEvent","","\\brief Joystick axis motion event structure (event.jaxis.*)",N,N],[12,"type_","","< ::SDL_JOYAXISMOTION",44,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",44,N],[12,"which","","< The joystick instance id",44,N],[12,"axis","","< The joystick axis index",44,N],[12,"padding1","","",44,N],[12,"padding2","","",44,N],[12,"padding3","","",44,N],[12,"value","","< The axis value (range: -32768 to 32767)",44,N],[12,"padding4","","",44,N],[3,"SDL_JoyBallEvent","","\\brief Joystick trackball motion event structure (event.jball.*)",N,N],[12,"type_","","< ::SDL_JOYBALLMOTION",45,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",45,N],[12,"which","","< The joystick instance id",45,N],[12,"ball","","< The joystick trackball index",45,N],[12,"padding1","","",45,N],[12,"padding2","","",45,N],[12,"padding3","","",45,N],[12,"xrel","","< The relative motion in the X direction",45,N],[12,"yrel","","< The relative motion in the Y direction",45,N],[3,"SDL_JoyHatEvent","","\\brief Joystick hat position change event structure (event.jhat.*)",N,N],[12,"type_","","< ::SDL_JOYHATMOTION",46,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",46,N],[12,"which","","< The joystick instance id",46,N],[12,"hat","","< The joystick hat index",46,N],[12,"value","","< The hat position value. \\sa ::SDL_HAT_LEFTUP ::SDL_HAT_UP ::SDL_HAT_RIGHTUP \\sa ::SDL_HAT_LEFT ::SDL_HAT_CENTERED ::SDL_HAT_RIGHT \\sa ::SDL_HAT_LEFTDOWN ::SDL_HAT_DOWN ::SDL_HAT_RIGHTDOWN",46,N],[12,"padding1","","",46,N],[12,"padding2","","",46,N],[3,"SDL_JoyButtonEvent","","\\brief Joystick button event structure (event.jbutton.*)",N,N],[12,"type_","","< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP",47,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",47,N],[12,"which","","< The joystick instance id",47,N],[12,"button","","< The joystick button index",47,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",47,N],[12,"padding1","","",47,N],[12,"padding2","","",47,N],[3,"SDL_JoyDeviceEvent","","\\brief Joystick device event structure (event.jdevice.*)",N,N],[12,"type_","","< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED",48,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",48,N],[12,"which","","< The joystick device index for the ADDED event, instance id for the REMOVED event",48,N],[3,"SDL_ControllerAxisEvent","","\\brief Game controller axis motion event structure (event.caxis.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERAXISMOTION",49,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",49,N],[12,"which","","< The joystick instance id",49,N],[12,"axis","","< The controller axis (SDL_GameControllerAxis)",49,N],[12,"padding1","","",49,N],[12,"padding2","","",49,N],[12,"padding3","","",49,N],[12,"value","","< The axis value (range: -32768 to 32767)",49,N],[12,"padding4","","",49,N],[3,"SDL_ControllerButtonEvent","","\\brief Game controller button event structure (event.cbutton.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP",50,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",50,N],[12,"which","","< The joystick instance id",50,N],[12,"button","","< The controller button (SDL_GameControllerButton)",50,N],[12,"state","","< ::SDL_PRESSED or ::SDL_RELEASED",50,N],[12,"padding1","","",50,N],[12,"padding2","","",50,N],[3,"SDL_ControllerDeviceEvent","","\\brief Controller device event structure (event.cdevice.*)",N,N],[12,"type_","","< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::SDL_CONTROLLERDEVICEREMAPPED",51,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",51,N],[12,"which","","< The joystick device index for the ADDED event, instance id for the REMOVED or REMAPPED event",51,N],[3,"SDL_AudioDeviceEvent","","\\brief Audio device event structure (event.adevice.*)",N,N],[12,"type_","","< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED",52,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",52,N],[12,"which","","< The audio device index for the ADDED event (valid until next SDL_GetNumAudioDevices() call), SDL_AudioDeviceID for the REMOVED event",52,N],[12,"iscapture","","< zero if an output device, non-zero if a capture device.",52,N],[12,"padding1","","",52,N],[12,"padding2","","",52,N],[12,"padding3","","",52,N],[3,"SDL_TouchFingerEvent","","\\brief Touch finger event structure (event.tfinger.*)",N,N],[12,"type_","","< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP",53,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",53,N],[12,"touchId","","< The touch device id",53,N],[12,"fingerId","","",53,N],[12,"x","","< Normalized in the range 0...1",53,N],[12,"y","","< Normalized in the range 0...1",53,N],[12,"dx","","< Normalized in the range -1...1",53,N],[12,"dy","","< Normalized in the range -1...1",53,N],[12,"pressure","","< Normalized in the range 0...1",53,N],[3,"SDL_MultiGestureEvent","","\\brief Multiple Finger Gesture Event (event.mgesture.*)",N,N],[12,"type_","","< ::SDL_MULTIGESTURE",54,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",54,N],[12,"touchId","","< The touch device id",54,N],[12,"dTheta","","",54,N],[12,"dDist","","",54,N],[12,"x","","",54,N],[12,"y","","",54,N],[12,"numFingers","","",54,N],[12,"padding","","",54,N],[3,"SDL_DollarGestureEvent","","\\brief Dollar Gesture Event (event.dgesture.*)",N,N],[12,"type_","","< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD",55,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",55,N],[12,"touchId","","< The touch device id",55,N],[12,"gestureId","","",55,N],[12,"numFingers","","",55,N],[12,"error","","",55,N],[12,"x","","< Normalized center of gesture",55,N],[12,"y","","< Normalized center of gesture",55,N],[3,"SDL_DropEvent","","\\brief An event used to request a file open by the system (event.drop.*)        This event is enabled by default, you can disable it with SDL_EventState(). \\note If this event is enabled, you must free the filename in the event.",N,N],[12,"type_","","< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPCOMPLETE",56,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",56,N],[12,"file","","< The file name, which should be freed with SDL_free(), is NULL on begin/complete",56,N],[12,"windowID","","< The window that was dropped on, if any",56,N],[3,"SDL_SensorEvent","","\\brief Sensor event structure (event.sensor.*)",N,N],[12,"type_","","< ::SDL_SENSORUPDATE",57,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",57,N],[12,"which","","< The instance ID of the sensor",57,N],[12,"data","","< Up to 6 values from the sensor - additional values can be queried using SDL_SensorGetData()",57,N],[3,"SDL_QuitEvent","","\\brief The \"quit requested\" event",N,N],[12,"type_","","< ::SDL_QUIT",58,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",58,N],[3,"SDL_OSEvent","","\\brief OS Specific event",N,N],[12,"type_","","< ::SDL_QUIT",59,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",59,N],[3,"SDL_UserEvent","","\\brief A user-defined event type (event.user.*)",N,N],[12,"type_","","< ::SDL_USEREVENT through ::SDL_LASTEVENT-1",60,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",60,N],[12,"windowID","","< The associated window if any",60,N],[12,"code","","< User defined event code",60,N],[12,"data1","","< User defined data pointer",60,N],[12,"data2","","< User defined data pointer",60,N],[3,"SDL_SysWMEvent","","\\brief A video driver dependent system event (event.syswm.*)        This event is disabled by default, you can enable it with SDL_EventState()",N,N],[12,"type_","","< ::SDL_SYSWMEVENT",61,N],[12,"timestamp","","< In milliseconds, populated using SDL_GetTicks()",61,N],[12,"msg","","< driver dependent data, defined in SDL_syswm.h",61,N],[3,"_SDL_Haptic","","\\typedef SDL_Haptic",N,N],[3,"SDL_HapticDirection","","\\brief Structure that represents a haptic direction.",N,N],[12,"type_","","< The type of encoding.",62,N],[12,"dir","","< The encoded direction.",62,N],[3,"SDL_HapticConstant","","\\brief A structure containing a template for a Constant effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_CONSTANT",63,N],[12,"direction","","< Direction of the effect.",63,N],[12,"length","","< Duration of the effect.",63,N],[12,"delay","","< Delay before starting the effect.",63,N],[12,"button","","< Button that triggers the effect.",63,N],[12,"interval","","< How soon it can be triggered again after button.",63,N],[12,"level","","< Strength of the constant effect.",63,N],[12,"attack_length","","< Duration of the attack.",63,N],[12,"attack_level","","< Level at the start of the attack.",63,N],[12,"fade_length","","< Duration of the fade.",63,N],[12,"fade_level","","< Level at the end of the fade.",63,N],[3,"SDL_HapticPeriodic","","\\brief A structure containing a template for a Periodic effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, ::SDL_HAPTIC_TRIANGLE, ::SDL_HAPTIC_SAWTOOTHUP or ::SDL_HAPTIC_SAWTOOTHDOWN",64,N],[12,"direction","","< Direction of the effect.",64,N],[12,"length","","< Duration of the effect.",64,N],[12,"delay","","< Delay before starting the effect.",64,N],[12,"button","","< Button that triggers the effect.",64,N],[12,"interval","","< How soon it can be triggered again after button.",64,N],[12,"period","","< Period of the wave.",64,N],[12,"magnitude","","< Peak value; if negative, equivalent to 180 degrees extra phase shift.",64,N],[12,"offset","","< Mean value of the wave.",64,N],[12,"phase","","< Positive phase shift given by hundredth of a degree.",64,N],[12,"attack_length","","< Duration of the attack.",64,N],[12,"attack_level","","< Level at the start of the attack.",64,N],[12,"fade_length","","< Duration of the fade.",64,N],[12,"fade_level","","< Level at the end of the fade.",64,N],[3,"SDL_HapticCondition","","\\brief A structure containing a template for a Condition effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, ::SDL_HAPTIC_INERTIA or ::SDL_HAPTIC_FRICTION",65,N],[12,"direction","","< Direction of the effect - Not used ATM.",65,N],[12,"length","","< Duration of the effect.",65,N],[12,"delay","","< Delay before starting the effect.",65,N],[12,"button","","< Button that triggers the effect.",65,N],[12,"interval","","< How soon it can be triggered again after button.",65,N],[12,"right_sat","","< Level when joystick is to the positive side; max 0xFFFF.",65,N],[12,"left_sat","","< Level when joystick is to the negative side; max 0xFFFF.",65,N],[12,"right_coeff","","< How fast to increase the force towards the positive side.",65,N],[12,"left_coeff","","< How fast to increase the force towards the negative side.",65,N],[12,"deadband","","< Size of the dead zone; max 0xFFFF: whole axis-range when 0-centered.",65,N],[12,"center","","< Position of the dead zone.",65,N],[3,"SDL_HapticRamp","","\\brief A structure containing a template for a Ramp effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_RAMP",66,N],[12,"direction","","< Direction of the effect.",66,N],[12,"length","","< Duration of the effect.",66,N],[12,"delay","","< Delay before starting the effect.",66,N],[12,"button","","< Button that triggers the effect.",66,N],[12,"interval","","< How soon it can be triggered again after button.",66,N],[12,"start","","< Beginning strength level.",66,N],[12,"end","","< Ending strength level.",66,N],[12,"attack_length","","< Duration of the attack.",66,N],[12,"attack_level","","< Level at the start of the attack.",66,N],[12,"fade_length","","< Duration of the fade.",66,N],[12,"fade_level","","< Level at the end of the fade.",66,N],[3,"SDL_HapticLeftRight","","\\brief A structure containing a template for a Left/Right effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_LEFTRIGHT",67,N],[12,"length","","< Duration of the effect in milliseconds.",67,N],[12,"large_magnitude","","< Control of the large controller motor.",67,N],[12,"small_magnitude","","< Control of the small controller motor.",67,N],[3,"SDL_HapticCustom","","\\brief A structure containing a template for the ::SDL_HAPTIC_CUSTOM effect.",N,N],[12,"type_","","< ::SDL_HAPTIC_CUSTOM",68,N],[12,"direction","","< Direction of the effect.",68,N],[12,"length","","< Duration of the effect.",68,N],[12,"delay","","< Delay before starting the effect.",68,N],[12,"button","","< Button that triggers the effect.",68,N],[12,"interval","","< How soon it can be triggered again after button.",68,N],[12,"channels","","< Axes to use, minimum of one.",68,N],[12,"period","","< Sample periods.",68,N],[12,"samples","","< Amount of samples.",68,N],[12,"data","","< Should contain channels*samples items.",68,N],[12,"attack_length","","< Duration of the attack.",68,N],[12,"attack_level","","< Level at the start of the attack.",68,N],[12,"fade_length","","< Duration of the fade.",68,N],[12,"fade_level","","< Level at the end of the fade.",68,N],[3,"SDL_MessageBoxButtonData","","\\brief Individual button data.",N,N],[12,"flags","","< ::SDL_MessageBoxButtonFlags",69,N],[12,"buttonid","","< User defined button id (value returned via SDL_ShowMessageBox)",69,N],[12,"text","","< The UTF-8 button text",69,N],[3,"SDL_MessageBoxColor","","\\brief RGB value used in a message box color scheme",N,N],[12,"r","","",70,N],[12,"g","","",70,N],[12,"b","","",70,N],[3,"SDL_MessageBoxColorScheme","","\\brief A set of colors to use for message box dialogs",N,N],[12,"colors","","",71,N],[3,"SDL_MessageBoxData","","\\brief MessageBox structure containing title, text, window, etc.",N,N],[12,"flags","","< ::SDL_MessageBoxFlags",72,N],[12,"window","","< Parent window, can be NULL",72,N],[12,"title","","< UTF-8 title",72,N],[12,"message","","< UTF-8 message text",72,N],[12,"numbuttons","","",72,N],[12,"buttons","","",72,N],[12,"colorScheme","","< ::SDL_MessageBoxColorScheme, can be NULL to use system settings",72,N],[3,"SDL_RendererInfo","","\\brief Information on the capabilities of a render driver or context.",N,N],[12,"name","","< The name of the renderer",73,N],[12,"flags","","< Supported ::SDL_RendererFlags",73,N],[12,"num_texture_formats","","< The number of available texture formats",73,N],[12,"texture_formats","","< The available texture formats",73,N],[12,"max_texture_width","","< The maximum texture width",73,N],[12,"max_texture_height","","< The maximum texture height",73,N],[3,"SDL_Renderer","","\\brief A structure representing rendering state",N,N],[3,"SDL_Texture","","\\brief An efficient driver-specific representation of pixel data",N,N],[3,"_SDL_Sensor","","\\brief SDL_sensor.h",N,N],[3,"SDL_WindowShapeMode","","\\brief A struct that tags the SDL_WindowShapeParams union with an enum describing the type of its contents.",N,N],[12,"mode","","\\brief The mode of these window-shape parameters.",74,N],[12,"parameters","","\\brief Window-shape parameters.",74,N],[3,"SDL_version","","\\brief Information the version of SDL in use.",N,N],[12,"major","","< major version",75,N],[12,"minor","","< minor version",75,N],[12,"patch","","< update version",75,N],[3,"_XExtData","","",N,N],[12,"number","","",76,N],[12,"next","","",76,N],[12,"free_private","","",76,N],[12,"private_data","","",76,N],[3,"XExtCodes","","",N,N],[12,"extension","","",77,N],[12,"major_opcode","","",77,N],[12,"first_event","","",77,N],[12,"first_error","","",77,N],[3,"XPixmapFormatValues","","",N,N],[12,"depth","","",78,N],[12,"bits_per_pixel","","",78,N],[12,"scanline_pad","","",78,N],[3,"XGCValues","","",N,N],[12,"function","","",79,N],[12,"plane_mask","","",79,N],[12,"foreground","","",79,N],[12,"background","","",79,N],[12,"line_width","","",79,N],[12,"line_style","","",79,N],[12,"cap_style","","",79,N],[12,"join_style","","",79,N],[12,"fill_style","","",79,N],[12,"fill_rule","","",79,N],[12,"arc_mode","","",79,N],[12,"tile","","",79,N],[12,"stipple","","",79,N],[12,"ts_x_origin","","",79,N],[12,"ts_y_origin","","",79,N],[12,"font","","",79,N],[12,"subwindow_mode","","",79,N],[12,"graphics_exposures","","",79,N],[12,"clip_x_origin","","",79,N],[12,"clip_y_origin","","",79,N],[12,"clip_mask","","",79,N],[12,"dash_offset","","",79,N],[12,"dashes","","",79,N],[3,"_XGC","","",N,N],[3,"Visual","","",N,N],[12,"ext_data","","",80,N],[12,"visualid","","",80,N],[12,"class","","",80,N],[12,"red_mask","","",80,N],[12,"green_mask","","",80,N],[12,"blue_mask","","",80,N],[12,"bits_per_rgb","","",80,N],[12,"map_entries","","",80,N],[3,"Depth","","",N,N],[12,"depth","","",81,N],[12,"nvisuals","","",81,N],[12,"visuals","","",81,N],[3,"_XDisplay","","",N,N],[3,"Screen","","",N,N],[12,"ext_data","","",82,N],[12,"display","","",82,N],[12,"root","","",82,N],[12,"width","","",82,N],[12,"height","","",82,N],[12,"mwidth","","",82,N],[12,"mheight","","",82,N],[12,"ndepths","","",82,N],[12,"depths","","",82,N],[12,"root_depth","","",82,N],[12,"root_visual","","",82,N],[12,"default_gc","","",82,N],[12,"cmap","","",82,N],[12,"white_pixel","","",82,N],[12,"black_pixel","","",82,N],[12,"max_maps","","",82,N],[12,"min_maps","","",82,N],[12,"backing_store","","",82,N],[12,"save_unders","","",82,N],[12,"root_input_mask","","",82,N],[3,"ScreenFormat","","",N,N],[12,"ext_data","","",83,N],[12,"depth","","",83,N],[12,"bits_per_pixel","","",83,N],[12,"scanline_pad","","",83,N],[3,"XSetWindowAttributes","","",N,N],[12,"background_pixmap","","",84,N],[12,"background_pixel","","",84,N],[12,"border_pixmap","","",84,N],[12,"border_pixel","","",84,N],[12,"bit_gravity","","",84,N],[12,"win_gravity","","",84,N],[12,"backing_store","","",84,N],[12,"backing_planes","","",84,N],[12,"backing_pixel","","",84,N],[12,"save_under","","",84,N],[12,"event_mask","","",84,N],[12,"do_not_propagate_mask","","",84,N],[12,"override_redirect","","",84,N],[12,"colormap","","",84,N],[12,"cursor","","",84,N],[3,"XWindowAttributes","","",N,N],[12,"x","","",85,N],[12,"y","","",85,N],[12,"width","","",85,N],[12,"height","","",85,N],[12,"border_width","","",85,N],[12,"depth","","",85,N],[12,"visual","","",85,N],[12,"root","","",85,N],[12,"class","","",85,N],[12,"bit_gravity","","",85,N],[12,"win_gravity","","",85,N],[12,"backing_store","","",85,N],[12,"backing_planes","","",85,N],[12,"backing_pixel","","",85,N],[12,"save_under","","",85,N],[12,"colormap","","",85,N],[12,"map_installed","","",85,N],[12,"map_state","","",85,N],[12,"all_event_masks","","",85,N],[12,"your_event_mask","","",85,N],[12,"do_not_propagate_mask","","",85,N],[12,"override_redirect","","",85,N],[12,"screen","","",85,N],[3,"XHostAddress","","",N,N],[12,"family","","",86,N],[12,"length","","",86,N],[12,"address","","",86,N],[3,"XServerInterpretedAddress","","",N,N],[12,"typelength","","",87,N],[12,"valuelength","","",87,N],[12,"type_","","",87,N],[12,"value","","",87,N],[3,"_XImage","","",N,N],[12,"width","","",88,N],[12,"height","","",88,N],[12,"xoffset","","",88,N],[12,"format","","",88,N],[12,"data","","",88,N],[12,"byte_order","","",88,N],[12,"bitmap_unit","","",88,N],[12,"bitmap_bit_order","","",88,N],[12,"bitmap_pad","","",88,N],[12,"depth","","",88,N],[12,"bytes_per_line","","",88,N],[12,"bits_per_pixel","","",88,N],[12,"red_mask","","",88,N],[12,"green_mask","","",88,N],[12,"blue_mask","","",88,N],[12,"obdata","","",88,N],[12,"f","","",88,N],[3,"_XImage_funcs","","",N,N],[12,"create_image","","",89,N],[12,"destroy_image","","",89,N],[12,"get_pixel","","",89,N],[12,"put_pixel","","",89,N],[12,"sub_image","","",89,N],[12,"add_pixel","","",89,N],[3,"XWindowChanges","","",N,N],[12,"x","","",90,N],[12,"y","","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[12,"border_width","","",90,N],[12,"sibling","","",90,N],[12,"stack_mode","","",90,N],[3,"XColor","","",N,N],[12,"pixel","","",91,N],[12,"red","","",91,N],[12,"green","","",91,N],[12,"blue","","",91,N],[12,"flags","","",91,N],[12,"pad","","",91,N],[3,"XSegment","","",N,N],[12,"x1","","",92,N],[12,"y1","","",92,N],[12,"x2","","",92,N],[12,"y2","","",92,N],[3,"XPoint","","",N,N],[12,"x","","",93,N],[12,"y","","",93,N],[3,"XRectangle","","",N,N],[12,"x","","",94,N],[12,"y","","",94,N],[12,"width","","",94,N],[12,"height","","",94,N],[3,"XArc","","",N,N],[12,"x","","",95,N],[12,"y","","",95,N],[12,"width","","",95,N],[12,"height","","",95,N],[12,"angle1","","",95,N],[12,"angle2","","",95,N],[3,"XKeyboardControl","","",N,N],[12,"key_click_percent","","",96,N],[12,"bell_percent","","",96,N],[12,"bell_pitch","","",96,N],[12,"bell_duration","","",96,N],[12,"led","","",96,N],[12,"led_mode","","",96,N],[12,"key","","",96,N],[12,"auto_repeat_mode","","",96,N],[3,"XKeyboardState","","",N,N],[12,"key_click_percent","","",97,N],[12,"bell_percent","","",97,N],[12,"bell_pitch","","",97,N],[12,"bell_duration","","",97,N],[12,"led_mask","","",97,N],[12,"global_auto_repeat","","",97,N],[12,"auto_repeats","","",97,N],[3,"XTimeCoord","","",N,N],[12,"time","","",98,N],[12,"x","","",98,N],[12,"y","","",98,N],[3,"XModifierKeymap","","",N,N],[12,"max_keypermod","","",99,N],[12,"modifiermap","","",99,N],[3,"_XPrivate","","",N,N],[3,"_XrmHashBucketRec","","",N,N],[3,"_bindgen_ty_9","","",N,N],[12,"ext_data","","",100,N],[12,"private1","","",100,N],[12,"fd","","",100,N],[12,"private2","","",100,N],[12,"proto_major_version","","",100,N],[12,"proto_minor_version","","",100,N],[12,"vendor","","",100,N],[12,"private3","","",100,N],[12,"private4","","",100,N],[12,"private5","","",100,N],[12,"private6","","",100,N],[12,"resource_alloc","","",100,N],[12,"byte_order","","",100,N],[12,"bitmap_unit","","",100,N],[12,"bitmap_pad","","",100,N],[12,"bitmap_bit_order","","",100,N],[12,"nformats","","",100,N],[12,"pixmap_format","","",100,N],[12,"private8","","",100,N],[12,"release","","",100,N],[12,"private9","","",100,N],[12,"private10","","",100,N],[12,"qlen","","",100,N],[12,"last_request_read","","",100,N],[12,"request","","",100,N],[12,"private11","","",100,N],[12,"private12","","",100,N],[12,"private13","","",100,N],[12,"private14","","",100,N],[12,"max_request_size","","",100,N],[12,"db","","",100,N],[12,"private15","","",100,N],[12,"display_name","","",100,N],[12,"default_screen","","",100,N],[12,"nscreens","","",100,N],[12,"screens","","",100,N],[12,"motion_buffer","","",100,N],[12,"private16","","",100,N],[12,"min_keycode","","",100,N],[12,"max_keycode","","",100,N],[12,"private17","","",100,N],[12,"private18","","",100,N],[12,"private19","","",100,N],[12,"xdefaults","","",100,N],[3,"XKeyEvent","","",N,N],[12,"type_","","",101,N],[12,"serial","","",101,N],[12,"send_event","","",101,N],[12,"display","","",101,N],[12,"window","","",101,N],[12,"root","","",101,N],[12,"subwindow","","",101,N],[12,"time","","",101,N],[12,"x","","",101,N],[12,"y","","",101,N],[12,"x_root","","",101,N],[12,"y_root","","",101,N],[12,"state","","",101,N],[12,"keycode","","",101,N],[12,"same_screen","","",101,N],[3,"XButtonEvent","","",N,N],[12,"type_","","",102,N],[12,"serial","","",102,N],[12,"send_event","","",102,N],[12,"display","","",102,N],[12,"window","","",102,N],[12,"root","","",102,N],[12,"subwindow","","",102,N],[12,"time","","",102,N],[12,"x","","",102,N],[12,"y","","",102,N],[12,"x_root","","",102,N],[12,"y_root","","",102,N],[12,"state","","",102,N],[12,"button","","",102,N],[12,"same_screen","","",102,N],[3,"XMotionEvent","","",N,N],[12,"type_","","",103,N],[12,"serial","","",103,N],[12,"send_event","","",103,N],[12,"display","","",103,N],[12,"window","","",103,N],[12,"root","","",103,N],[12,"subwindow","","",103,N],[12,"time","","",103,N],[12,"x","","",103,N],[12,"y","","",103,N],[12,"x_root","","",103,N],[12,"y_root","","",103,N],[12,"state","","",103,N],[12,"is_hint","","",103,N],[12,"same_screen","","",103,N],[3,"XCrossingEvent","","",N,N],[12,"type_","","",104,N],[12,"serial","","",104,N],[12,"send_event","","",104,N],[12,"display","","",104,N],[12,"window","","",104,N],[12,"root","","",104,N],[12,"subwindow","","",104,N],[12,"time","","",104,N],[12,"x","","",104,N],[12,"y","","",104,N],[12,"x_root","","",104,N],[12,"y_root","","",104,N],[12,"mode","","",104,N],[12,"detail","","",104,N],[12,"same_screen","","",104,N],[12,"focus","","",104,N],[12,"state","","",104,N],[3,"XFocusChangeEvent","","",N,N],[12,"type_","","",105,N],[12,"serial","","",105,N],[12,"send_event","","",105,N],[12,"display","","",105,N],[12,"window","","",105,N],[12,"mode","","",105,N],[12,"detail","","",105,N],[3,"XKeymapEvent","","",N,N],[12,"type_","","",106,N],[12,"serial","","",106,N],[12,"send_event","","",106,N],[12,"display","","",106,N],[12,"window","","",106,N],[12,"key_vector","","",106,N],[3,"XExposeEvent","","",N,N],[12,"type_","","",107,N],[12,"serial","","",107,N],[12,"send_event","","",107,N],[12,"display","","",107,N],[12,"window","","",107,N],[12,"x","","",107,N],[12,"y","","",107,N],[12,"width","","",107,N],[12,"height","","",107,N],[12,"count","","",107,N],[3,"XGraphicsExposeEvent","","",N,N],[12,"type_","","",108,N],[12,"serial","","",108,N],[12,"send_event","","",108,N],[12,"display","","",108,N],[12,"drawable","","",108,N],[12,"x","","",108,N],[12,"y","","",108,N],[12,"width","","",108,N],[12,"height","","",108,N],[12,"count","","",108,N],[12,"major_code","","",108,N],[12,"minor_code","","",108,N],[3,"XNoExposeEvent","","",N,N],[12,"type_","","",109,N],[12,"serial","","",109,N],[12,"send_event","","",109,N],[12,"display","","",109,N],[12,"drawable","","",109,N],[12,"major_code","","",109,N],[12,"minor_code","","",109,N],[3,"XVisibilityEvent","","",N,N],[12,"type_","","",110,N],[12,"serial","","",110,N],[12,"send_event","","",110,N],[12,"display","","",110,N],[12,"window","","",110,N],[12,"state","","",110,N],[3,"XCreateWindowEvent","","",N,N],[12,"type_","","",111,N],[12,"serial","","",111,N],[12,"send_event","","",111,N],[12,"display","","",111,N],[12,"parent","","",111,N],[12,"window","","",111,N],[12,"x","","",111,N],[12,"y","","",111,N],[12,"width","","",111,N],[12,"height","","",111,N],[12,"border_width","","",111,N],[12,"override_redirect","","",111,N],[3,"XDestroyWindowEvent","","",N,N],[12,"type_","","",112,N],[12,"serial","","",112,N],[12,"send_event","","",112,N],[12,"display","","",112,N],[12,"event","","",112,N],[12,"window","","",112,N],[3,"XUnmapEvent","","",N,N],[12,"type_","","",113,N],[12,"serial","","",113,N],[12,"send_event","","",113,N],[12,"display","","",113,N],[12,"event","","",113,N],[12,"window","","",113,N],[12,"from_configure","","",113,N],[3,"XMapEvent","","",N,N],[12,"type_","","",114,N],[12,"serial","","",114,N],[12,"send_event","","",114,N],[12,"display","","",114,N],[12,"event","","",114,N],[12,"window","","",114,N],[12,"override_redirect","","",114,N],[3,"XMapRequestEvent","","",N,N],[12,"type_","","",115,N],[12,"serial","","",115,N],[12,"send_event","","",115,N],[12,"display","","",115,N],[12,"parent","","",115,N],[12,"window","","",115,N],[3,"XReparentEvent","","",N,N],[12,"type_","","",116,N],[12,"serial","","",116,N],[12,"send_event","","",116,N],[12,"display","","",116,N],[12,"event","","",116,N],[12,"window","","",116,N],[12,"parent","","",116,N],[12,"x","","",116,N],[12,"y","","",116,N],[12,"override_redirect","","",116,N],[3,"XConfigureEvent","","",N,N],[12,"type_","","",117,N],[12,"serial","","",117,N],[12,"send_event","","",117,N],[12,"display","","",117,N],[12,"event","","",117,N],[12,"window","","",117,N],[12,"x","","",117,N],[12,"y","","",117,N],[12,"width","","",117,N],[12,"height","","",117,N],[12,"border_width","","",117,N],[12,"above","","",117,N],[12,"override_redirect","","",117,N],[3,"XGravityEvent","","",N,N],[12,"type_","","",118,N],[12,"serial","","",118,N],[12,"send_event","","",118,N],[12,"display","","",118,N],[12,"event","","",118,N],[12,"window","","",118,N],[12,"x","","",118,N],[12,"y","","",118,N],[3,"XResizeRequestEvent","","",N,N],[12,"type_","","",119,N],[12,"serial","","",119,N],[12,"send_event","","",119,N],[12,"display","","",119,N],[12,"window","","",119,N],[12,"width","","",119,N],[12,"height","","",119,N],[3,"XConfigureRequestEvent","","",N,N],[12,"type_","","",120,N],[12,"serial","","",120,N],[12,"send_event","","",120,N],[12,"display","","",120,N],[12,"parent","","",120,N],[12,"window","","",120,N],[12,"x","","",120,N],[12,"y","","",120,N],[12,"width","","",120,N],[12,"height","","",120,N],[12,"border_width","","",120,N],[12,"above","","",120,N],[12,"detail","","",120,N],[12,"value_mask","","",120,N],[3,"XCirculateEvent","","",N,N],[12,"type_","","",121,N],[12,"serial","","",121,N],[12,"send_event","","",121,N],[12,"display","","",121,N],[12,"event","","",121,N],[12,"window","","",121,N],[12,"place","","",121,N],[3,"XCirculateRequestEvent","","",N,N],[12,"type_","","",122,N],[12,"serial","","",122,N],[12,"send_event","","",122,N],[12,"display","","",122,N],[12,"parent","","",122,N],[12,"window","","",122,N],[12,"place","","",122,N],[3,"XPropertyEvent","","",N,N],[12,"type_","","",123,N],[12,"serial","","",123,N],[12,"send_event","","",123,N],[12,"display","","",123,N],[12,"window","","",123,N],[12,"atom","","",123,N],[12,"time","","",123,N],[12,"state","","",123,N],[3,"XSelectionClearEvent","","",N,N],[12,"type_","","",124,N],[12,"serial","","",124,N],[12,"send_event","","",124,N],[12,"display","","",124,N],[12,"window","","",124,N],[12,"selection","","",124,N],[12,"time","","",124,N],[3,"XSelectionRequestEvent","","",N,N],[12,"type_","","",125,N],[12,"serial","","",125,N],[12,"send_event","","",125,N],[12,"display","","",125,N],[12,"owner","","",125,N],[12,"requestor","","",125,N],[12,"selection","","",125,N],[12,"target","","",125,N],[12,"property","","",125,N],[12,"time","","",125,N],[3,"XSelectionEvent","","",N,N],[12,"type_","","",126,N],[12,"serial","","",126,N],[12,"send_event","","",126,N],[12,"display","","",126,N],[12,"requestor","","",126,N],[12,"selection","","",126,N],[12,"target","","",126,N],[12,"property","","",126,N],[12,"time","","",126,N],[3,"XColormapEvent","","",N,N],[12,"type_","","",127,N],[12,"serial","","",127,N],[12,"send_event","","",127,N],[12,"display","","",127,N],[12,"window","","",127,N],[12,"colormap","","",127,N],[12,"new","","",127,N],[12,"state","","",127,N],[3,"XClientMessageEvent","","",N,N],[12,"type_","","",128,N],[12,"serial","","",128,N],[12,"send_event","","",128,N],[12,"display","","",128,N],[12,"window","","",128,N],[12,"message_type","","",128,N],[12,"format","","",128,N],[12,"data","","",128,N],[3,"XMappingEvent","","",N,N],[12,"type_","","",129,N],[12,"serial","","",129,N],[12,"send_event","","",129,N],[12,"display","","",129,N],[12,"window","","",129,N],[12,"request","","",129,N],[12,"first_keycode","","",129,N],[12,"count","","",129,N],[3,"XErrorEvent","","",N,N],[12,"type_","","",130,N],[12,"display","","",130,N],[12,"resourceid","","",130,N],[12,"serial","","",130,N],[12,"error_code","","",130,N],[12,"request_code","","",130,N],[12,"minor_code","","",130,N],[3,"XAnyEvent","","",N,N],[12,"type_","","",131,N],[12,"serial","","",131,N],[12,"send_event","","",131,N],[12,"display","","",131,N],[12,"window","","",131,N],[3,"XGenericEvent","","",N,N],[12,"type_","","",132,N],[12,"serial","","",132,N],[12,"send_event","","",132,N],[12,"display","","",132,N],[12,"extension","","",132,N],[12,"evtype","","",132,N],[3,"XGenericEventCookie","","",N,N],[12,"type_","","",133,N],[12,"serial","","",133,N],[12,"send_event","","",133,N],[12,"display","","",133,N],[12,"extension","","",133,N],[12,"evtype","","",133,N],[12,"cookie","","",133,N],[12,"data","","",133,N],[3,"XCharStruct","","",N,N],[12,"lbearing","","",134,N],[12,"rbearing","","",134,N],[12,"width","","",134,N],[12,"ascent","","",134,N],[12,"descent","","",134,N],[12,"attributes","","",134,N],[3,"XFontProp","","",N,N],[12,"name","","",135,N],[12,"card32","","",135,N],[3,"XFontStruct","","",N,N],[12,"ext_data","","",136,N],[12,"fid","","",136,N],[12,"direction","","",136,N],[12,"min_char_or_byte2","","",136,N],[12,"max_char_or_byte2","","",136,N],[12,"min_byte1","","",136,N],[12,"max_byte1","","",136,N],[12,"all_chars_exist","","",136,N],[12,"default_char","","",136,N],[12,"n_properties","","",136,N],[12,"properties","","",136,N],[12,"min_bounds","","",136,N],[12,"max_bounds","","",136,N],[12,"per_char","","",136,N],[12,"ascent","","",136,N],[12,"descent","","",136,N],[3,"XTextItem","","",N,N],[12,"chars","","",137,N],[12,"nchars","","",137,N],[12,"delta","","",137,N],[12,"font","","",137,N],[3,"XChar2b","","",N,N],[12,"byte1","","",138,N],[12,"byte2","","",138,N],[3,"XTextItem16","","",N,N],[12,"chars","","",139,N],[12,"nchars","","",139,N],[12,"delta","","",139,N],[12,"font","","",139,N],[3,"XFontSetExtents","","",N,N],[12,"max_ink_extent","","",140,N],[12,"max_logical_extent","","",140,N],[3,"_XOM","","",N,N],[3,"_XOC","","",N,N],[3,"XmbTextItem","","",N,N],[12,"chars","","",141,N],[12,"nchars","","",141,N],[12,"delta","","",141,N],[12,"font_set","","",141,N],[3,"XwcTextItem","","",N,N],[12,"chars","","",142,N],[12,"nchars","","",142,N],[12,"delta","","",142,N],[12,"font_set","","",142,N],[3,"XOMCharSetList","","",N,N],[12,"charset_count","","",143,N],[12,"charset_list","","",143,N],[3,"XOMOrientation","","",N,N],[12,"num_orientation","","",144,N],[12,"orientation","","",144,N],[3,"XOMFontInfo","","",N,N],[12,"num_font","","",145,N],[12,"font_struct_list","","",145,N],[12,"font_name_list","","",145,N],[3,"_XIM","","",N,N],[3,"_XIC","","",N,N],[3,"XIMStyles","","",N,N],[12,"count_styles","","",146,N],[12,"supported_styles","","",146,N],[3,"XIMCallback","","",N,N],[12,"client_data","","",147,N],[12,"callback","","",147,N],[3,"XICCallback","","",N,N],[12,"client_data","","",148,N],[12,"callback","","",148,N],[3,"_XIMText","","",N,N],[12,"length","","",149,N],[12,"feedback","","",149,N],[12,"encoding_is_wchar","","",149,N],[12,"string","","",149,N],[3,"_XIMPreeditStateNotifyCallbackStruct","","",N,N],[12,"state","","",150,N],[3,"_XIMStringConversionText","","",N,N],[12,"length","","",151,N],[12,"feedback","","",151,N],[12,"encoding_is_wchar","","",151,N],[12,"string","","",151,N],[3,"_XIMStringConversionCallbackStruct","","",N,N],[12,"position","","",152,N],[12,"direction","","",152,N],[12,"operation","","",152,N],[12,"factor","","",152,N],[12,"text","","",152,N],[3,"_XIMPreeditDrawCallbackStruct","","",N,N],[12,"caret","","",153,N],[12,"chg_first","","",153,N],[12,"chg_length","","",153,N],[12,"text","","",153,N],[3,"_XIMPreeditCaretCallbackStruct","","",N,N],[12,"position","","",154,N],[12,"direction","","",154,N],[12,"style","","",154,N],[3,"_XIMStatusDrawCallbackStruct","","",N,N],[12,"type_","","",155,N],[12,"data","","",155,N],[3,"_XIMHotKeyTrigger","","",N,N],[12,"keysym","","",156,N],[12,"modifier","","",156,N],[12,"modifier_mask","","",156,N],[3,"_XIMHotKeyTriggers","","",N,N],[12,"num_hot_key","","",157,N],[12,"key","","",157,N],[3,"XIMValuesList","","",N,N],[12,"count_values","","",158,N],[12,"supported_values","","",158,N],[3,"SDL_SysWMmsg","","The custom event structure.",N,N],[12,"version","","",159,N],[12,"subsystem","","",159,N],[12,"msg","","",159,N],[3,"SDL_SysWMmsg__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"event","","",160,N],[3,"SDL_SysWMinfo","","The custom window manager information structure.",N,N],[12,"version","","",161,N],[12,"subsystem","","",161,N],[12,"info","","",161,N],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_1","","",N,N],[12,"display","","< The X11 display",162,N],[12,"window","","< The X11 window",162,N],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_2","","",N,N],[12,"display","","< Wayland display",163,N],[12,"surface","","< Wayland surface",163,N],[12,"shell_surface","","< Wayland shell_surface (window manager handle)",163,N],[3,"VkInstance_T","","",N,N],[3,"VkSurfaceKHR_T","","",N,N],[3,"__va_list_tag","","",N,N],[12,"gp_offset","","",164,N],[12,"fp_offset","","",164,N],[12,"overflow_arg_area","","",164,N],[12,"reg_save_area","","",164,N],[3,"SDL_BlitMap","","< Private",N,N],[12,"_address","","",165,N],[3,"wl_display","","< Wayland display",N,N],[12,"_address","","",166,N],[3,"wl_surface","","< Wayland surface",N,N],[12,"_address","","",167,N],[3,"wl_shell_surface","","< Wayland shell_surface (window manager handle)",N,N],[12,"_address","","",168,N],[19,"SDL_RWops__bindgen_ty_1","","",N,N],[12,"mem","","",169,N],[12,"unknown","","",169,N],[19,"__pthread_cond_s__bindgen_ty_1","","",N,N],[12,"__wseq","","",170,N],[12,"__wseq32","","",170,N],[19,"__pthread_cond_s__bindgen_ty_2","","",N,N],[12,"__g1_start","","",171,N],[12,"__g1_start32","","",171,N],[19,"pthread_mutexattr_t","","",N,N],[12,"__size","","",172,N],[12,"__align","","",172,N],[19,"pthread_condattr_t","","",N,N],[12,"__size","","",173,N],[12,"__align","","",173,N],[19,"pthread_attr_t","","",N,N],[12,"__size","","",174,N],[12,"__align","","",174,N],[19,"pthread_mutex_t","","",N,N],[12,"__data","","",175,N],[12,"__size","","",175,N],[12,"__align","","",175,N],[19,"pthread_cond_t","","",N,N],[12,"__data","","",176,N],[12,"__size","","",176,N],[12,"__align","","",176,N],[19,"pthread_rwlock_t","","",N,N],[12,"__data","","",177,N],[12,"__size","","",177,N],[12,"__align","","",177,N],[19,"pthread_rwlockattr_t","","",N,N],[12,"__size","","",178,N],[12,"__align","","",178,N],[19,"pthread_barrier_t","","",N,N],[12,"__size","","",179,N],[12,"__align","","",179,N],[19,"pthread_barrierattr_t","","",N,N],[12,"__size","","",180,N],[12,"__align","","",180,N],[19,"SDL_GameControllerButtonBind__bindgen_ty_1","","",N,N],[12,"button","","",181,N],[12,"axis","","",181,N],[12,"hat","","",181,N],[19,"SDL_Event","","\\brief General event structure",N,N],[12,"type_","","< Event type, shared with all events",182,N],[12,"common","","< Common event data",182,N],[12,"display","","< Window event data",182,N],[12,"window","","< Window event data",182,N],[12,"key","","< Keyboard event data",182,N],[12,"edit","","< Text editing event data",182,N],[12,"text","","< Text input event data",182,N],[12,"motion","","< Mouse motion event data",182,N],[12,"button","","< Mouse button event data",182,N],[12,"wheel","","< Mouse wheel event data",182,N],[12,"jaxis","","< Joystick axis event data",182,N],[12,"jball","","< Joystick ball event data",182,N],[12,"jhat","","< Joystick hat event data",182,N],[12,"jbutton","","< Joystick button event data",182,N],[12,"jdevice","","< Joystick device change event data",182,N],[12,"caxis","","< Game Controller axis event data",182,N],[12,"cbutton","","< Game Controller button event data",182,N],[12,"cdevice","","< Game Controller device event data",182,N],[12,"adevice","","< Audio device event data",182,N],[12,"sensor","","< Sensor event data",182,N],[12,"quit","","< Quit request event data",182,N],[12,"user","","< Custom event data",182,N],[12,"syswm","","< System dependent window event data",182,N],[12,"tfinger","","< Touch finger event data",182,N],[12,"mgesture","","< Gesture event data",182,N],[12,"dgesture","","< Gesture event data",182,N],[12,"drop","","< Drag and drop event data",182,N],[12,"padding","","",182,N],[19,"SDL_HapticEffect","","\\brief The generic template for any haptic effect.",N,N],[12,"type_","","< Effect type.",183,N],[12,"constant","","< Constant effect.",183,N],[12,"periodic","","< Periodic effect.",183,N],[12,"condition","","< Condition effect.",183,N],[12,"ramp","","< Ramp effect.",183,N],[12,"leftright","","< Left/Right effect.",183,N],[12,"custom","","< Custom effect.",183,N],[19,"SDL_WindowShapeParams","","\\brief A union containing parameters for shaped windows.",N,N],[12,"binarizationCutoff","","\\brief A cutoff alpha value for binarization of the window shape's alpha channel.",184,N],[12,"colorKey","","",184,N],[19,"XClientMessageEvent__bindgen_ty_1","","",N,N],[12,"b","","",185,N],[12,"s","","",185,N],[12,"l","","",185,N],[19,"_XEvent","","",N,N],[12,"type_","","",186,N],[12,"xany","","",186,N],[12,"xkey","","",186,N],[12,"xbutton","","",186,N],[12,"xmotion","","",186,N],[12,"xcrossing","","",186,N],[12,"xfocus","","",186,N],[12,"xexpose","","",186,N],[12,"xgraphicsexpose","","",186,N],[12,"xnoexpose","","",186,N],[12,"xvisibility","","",186,N],[12,"xcreatewindow","","",186,N],[12,"xdestroywindow","","",186,N],[12,"xunmap","","",186,N],[12,"xmap","","",186,N],[12,"xmaprequest","","",186,N],[12,"xreparent","","",186,N],[12,"xconfigure","","",186,N],[12,"xgravity","","",186,N],[12,"xresizerequest","","",186,N],[12,"xconfigurerequest","","",186,N],[12,"xcirculate","","",186,N],[12,"xcirculaterequest","","",186,N],[12,"xproperty","","",186,N],[12,"xselectionclear","","",186,N],[12,"xselectionrequest","","",186,N],[12,"xselection","","",186,N],[12,"xcolormap","","",186,N],[12,"xclient","","",186,N],[12,"xmapping","","",186,N],[12,"xerror","","",186,N],[12,"xkeymap","","",186,N],[12,"xgeneric","","",186,N],[12,"xcookie","","",186,N],[12,"pad","","",186,N],[19,"XEDataObject","","",N,N],[12,"display","","",187,N],[12,"gc","","",187,N],[12,"visual","","",187,N],[12,"screen","","",187,N],[12,"pixmap_format","","",187,N],[12,"font","","",187,N],[19,"_XIMText__bindgen_ty_1","","",N,N],[12,"multi_byte","","",188,N],[12,"wide_char","","",188,N],[19,"_XIMStringConversionText__bindgen_ty_1","","",N,N],[12,"mbs","","",189,N],[12,"wcs","","",189,N],[19,"_XIMStatusDrawCallbackStruct__bindgen_ty_1","","",N,N],[12,"text","","",190,N],[12,"bitmap","","",190,N],[19,"SDL_SysWMmsg__bindgen_ty_1","","",N,N],[12,"x11","","",191,N],[12,"dummy","","",191,N],[19,"SDL_SysWMinfo__bindgen_ty_1","","",N,N],[12,"x11","","",192,N],[12,"wl","","",192,N],[12,"dummy","","",192,N],[4,"SDL_bool","","",N,N],[13,"SDL_FALSE","","",193,N],[13,"SDL_TRUE","","",193,N],[4,"SDL_DUMMY_ENUM","","",N,N],[13,"DUMMY_ENUM_VALUE","","",194,N],[4,"SDL_AssertState","","",N,N],[13,"SDL_ASSERTION_RETRY","","< Retry the assert immediately.",195,N],[13,"SDL_ASSERTION_BREAK","","< Make the debugger trigger a breakpoint.",195,N],[13,"SDL_ASSERTION_ABORT","","< Terminate the program.",195,N],[13,"SDL_ASSERTION_IGNORE","","< Ignore the assert.",195,N],[13,"SDL_ASSERTION_ALWAYS_IGNORE","","< Ignore the assert from now on.",195,N],[4,"SDL_errorcode","","",N,N],[13,"SDL_ENOMEM","","",196,N],[13,"SDL_EFREAD","","",196,N],[13,"SDL_EFWRITE","","",196,N],[13,"SDL_EFSEEK","","",196,N],[13,"SDL_UNSUPPORTED","","",196,N],[13,"SDL_LASTERROR","","",196,N],[4,"SDL_ThreadPriority","","The SDL thread priority.",N,N],[13,"SDL_THREAD_PRIORITY_LOW","","",197,N],[13,"SDL_THREAD_PRIORITY_NORMAL","","",197,N],[13,"SDL_THREAD_PRIORITY_HIGH","","",197,N],[13,"SDL_THREAD_PRIORITY_TIME_CRITICAL","","",197,N],[4,"SDL_AudioStatus","","",N,N],[13,"SDL_AUDIO_STOPPED","","",198,N],[13,"SDL_AUDIO_PLAYING","","",198,N],[13,"SDL_AUDIO_PAUSED","","",198,N],[4,"_bindgen_ty_1","","Pixel type.",N,N],[13,"SDL_PIXELTYPE_UNKNOWN","","",199,N],[13,"SDL_PIXELTYPE_INDEX1","","",199,N],[13,"SDL_PIXELTYPE_INDEX4","","",199,N],[13,"SDL_PIXELTYPE_INDEX8","","",199,N],[13,"SDL_PIXELTYPE_PACKED8","","",199,N],[13,"SDL_PIXELTYPE_PACKED16","","",199,N],[13,"SDL_PIXELTYPE_PACKED32","","",199,N],[13,"SDL_PIXELTYPE_ARRAYU8","","",199,N],[13,"SDL_PIXELTYPE_ARRAYU16","","",199,N],[13,"SDL_PIXELTYPE_ARRAYU32","","",199,N],[13,"SDL_PIXELTYPE_ARRAYF16","","",199,N],[13,"SDL_PIXELTYPE_ARRAYF32","","",199,N],[4,"_bindgen_ty_2","","Bitmap pixel order, high bit -> low bit.",N,N],[13,"SDL_BITMAPORDER_NONE","","",200,N],[13,"SDL_BITMAPORDER_4321","","",200,N],[13,"SDL_BITMAPORDER_1234","","",200,N],[4,"_bindgen_ty_3","","Packed component order, high bit -> low bit.",N,N],[13,"SDL_PACKEDORDER_NONE","","",201,N],[13,"SDL_PACKEDORDER_XRGB","","",201,N],[13,"SDL_PACKEDORDER_RGBX","","",201,N],[13,"SDL_PACKEDORDER_ARGB","","",201,N],[13,"SDL_PACKEDORDER_RGBA","","",201,N],[13,"SDL_PACKEDORDER_XBGR","","",201,N],[13,"SDL_PACKEDORDER_BGRX","","",201,N],[13,"SDL_PACKEDORDER_ABGR","","",201,N],[13,"SDL_PACKEDORDER_BGRA","","",201,N],[4,"_bindgen_ty_4","","Array component order, low byte -> high byte.",N,N],[13,"SDL_ARRAYORDER_NONE","","",202,N],[13,"SDL_ARRAYORDER_RGB","","",202,N],[13,"SDL_ARRAYORDER_RGBA","","",202,N],[13,"SDL_ARRAYORDER_ARGB","","",202,N],[13,"SDL_ARRAYORDER_BGR","","",202,N],[13,"SDL_ARRAYORDER_BGRA","","",202,N],[13,"SDL_ARRAYORDER_ABGR","","",202,N],[4,"_bindgen_ty_5","","Packed component layout.",N,N],[13,"SDL_PACKEDLAYOUT_NONE","","",203,N],[13,"SDL_PACKEDLAYOUT_332","","",203,N],[13,"SDL_PACKEDLAYOUT_4444","","",203,N],[13,"SDL_PACKEDLAYOUT_1555","","",203,N],[13,"SDL_PACKEDLAYOUT_5551","","",203,N],[13,"SDL_PACKEDLAYOUT_565","","",203,N],[13,"SDL_PACKEDLAYOUT_8888","","",203,N],[13,"SDL_PACKEDLAYOUT_2101010","","",203,N],[13,"SDL_PACKEDLAYOUT_1010102","","",203,N],[4,"_bindgen_ty_6","","",N,N],[13,"SDL_PIXELFORMAT_UNKNOWN","","",204,N],[13,"SDL_PIXELFORMAT_INDEX1LSB","","",204,N],[13,"SDL_PIXELFORMAT_INDEX1MSB","","",204,N],[13,"SDL_PIXELFORMAT_INDEX4LSB","","",204,N],[13,"SDL_PIXELFORMAT_INDEX4MSB","","",204,N],[13,"SDL_PIXELFORMAT_INDEX8","","",204,N],[13,"SDL_PIXELFORMAT_RGB332","","",204,N],[13,"SDL_PIXELFORMAT_RGB444","","",204,N],[13,"SDL_PIXELFORMAT_RGB555","","",204,N],[13,"SDL_PIXELFORMAT_BGR555","","",204,N],[13,"SDL_PIXELFORMAT_ARGB4444","","",204,N],[13,"SDL_PIXELFORMAT_RGBA4444","","",204,N],[13,"SDL_PIXELFORMAT_ABGR4444","","",204,N],[13,"SDL_PIXELFORMAT_BGRA4444","","",204,N],[13,"SDL_PIXELFORMAT_ARGB1555","","",204,N],[13,"SDL_PIXELFORMAT_RGBA5551","","",204,N],[13,"SDL_PIXELFORMAT_ABGR1555","","",204,N],[13,"SDL_PIXELFORMAT_BGRA5551","","",204,N],[13,"SDL_PIXELFORMAT_RGB565","","",204,N],[13,"SDL_PIXELFORMAT_BGR565","","",204,N],[13,"SDL_PIXELFORMAT_RGB24","","",204,N],[13,"SDL_PIXELFORMAT_BGR24","","",204,N],[13,"SDL_PIXELFORMAT_RGB888","","",204,N],[13,"SDL_PIXELFORMAT_RGBX8888","","",204,N],[13,"SDL_PIXELFORMAT_BGR888","","",204,N],[13,"SDL_PIXELFORMAT_BGRX8888","","",204,N],[13,"SDL_PIXELFORMAT_ARGB8888","","",204,N],[13,"SDL_PIXELFORMAT_RGBA8888","","",204,N],[13,"SDL_PIXELFORMAT_ABGR8888","","",204,N],[13,"SDL_PIXELFORMAT_BGRA8888","","",204,N],[13,"SDL_PIXELFORMAT_ARGB2101010","","",204,N],[13,"SDL_PIXELFORMAT_YV12","","< Planar mode: Y + V + U  (3 planes)",204,N],[13,"SDL_PIXELFORMAT_IYUV","","< Planar mode: Y + U + V  (3 planes)",204,N],[13,"SDL_PIXELFORMAT_YUY2","","< Packed mode: Y0+U0+Y1+V0 (1 plane)",204,N],[13,"SDL_PIXELFORMAT_UYVY","","< Packed mode: U0+Y0+V0+Y1 (1 plane)",204,N],[13,"SDL_PIXELFORMAT_YVYU","","< Packed mode: Y0+V0+Y1+U0 (1 plane)",204,N],[13,"SDL_PIXELFORMAT_NV12","","< Planar mode: Y + U/V interleaved  (2 planes)",204,N],[13,"SDL_PIXELFORMAT_NV21","","< Planar mode: Y + V/U interleaved  (2 planes)",204,N],[13,"SDL_PIXELFORMAT_EXTERNAL_OES","","< Android video texture format",204,N],[4,"SDL_BlendMode","","\\brief The blend mode used in SDL_RenderCopy() and drawing operations.",N,N],[13,"SDL_BLENDMODE_NONE","","< no blending dstRGBA = srcRGBA",205,N],[13,"SDL_BLENDMODE_BLEND","","< alpha blending dstRGB = (srcRGB * srcA) + (dstRGB * (1-srcA)) dstA = srcA + (dstA * (1-srcA))",205,N],[13,"SDL_BLENDMODE_ADD","","< additive blending dstRGB = (srcRGB * srcA) + dstRGB dstA = dstA",205,N],[13,"SDL_BLENDMODE_MOD","","< color modulate dstRGB = srcRGB * dstRGB dstA = dstA",205,N],[13,"SDL_BLENDMODE_INVALID","","",205,N],[4,"SDL_BlendOperation","","\\brief The blend operation used when combining source and destination pixel components",N,N],[13,"SDL_BLENDOPERATION_ADD","","< dst + src: supported by all renderers",206,N],[13,"SDL_BLENDOPERATION_SUBTRACT","","< dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES",206,N],[13,"SDL_BLENDOPERATION_REV_SUBTRACT","","< src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES",206,N],[13,"SDL_BLENDOPERATION_MINIMUM","","< min(dst, src) : supported by D3D11",206,N],[13,"SDL_BLENDOPERATION_MAXIMUM","","< max(dst, src) : supported by D3D11",206,N],[4,"SDL_BlendFactor","","\\brief The normalized factor used to multiply pixel components",N,N],[13,"SDL_BLENDFACTOR_ZERO","","< 0, 0, 0, 0",207,N],[13,"SDL_BLENDFACTOR_ONE","","< 1, 1, 1, 1",207,N],[13,"SDL_BLENDFACTOR_SRC_COLOR","","< srcR, srcG, srcB, srcA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR","","< 1-srcR, 1-srcG, 1-srcB, 1-srcA",207,N],[13,"SDL_BLENDFACTOR_SRC_ALPHA","","< srcA, srcA, srcA, srcA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA","","< 1-srcA, 1-srcA, 1-srcA, 1-srcA",207,N],[13,"SDL_BLENDFACTOR_DST_COLOR","","< dstR, dstG, dstB, dstA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR","","< 1-dstR, 1-dstG, 1-dstB, 1-dstA",207,N],[13,"SDL_BLENDFACTOR_DST_ALPHA","","< dstA, dstA, dstA, dstA",207,N],[13,"SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA","","< 1-dstA, 1-dstA, 1-dstA, 1-dstA",207,N],[4,"SDL_YUV_CONVERSION_MODE","","\\brief The formula used for converting between YUV and RGB",N,N],[13,"SDL_YUV_CONVERSION_JPEG","","< Full range JPEG",208,N],[13,"SDL_YUV_CONVERSION_BT601","","< BT.601 (the default)",208,N],[13,"SDL_YUV_CONVERSION_BT709","","< BT.709",208,N],[13,"SDL_YUV_CONVERSION_AUTOMATIC","","< BT.601 for SD content, BT.709 for HD content",208,N],[4,"SDL_WindowFlags","","\\brief The flags on a window",N,N],[13,"SDL_WINDOW_FULLSCREEN","","< fullscreen window",209,N],[13,"SDL_WINDOW_OPENGL","","< window usable with OpenGL context",209,N],[13,"SDL_WINDOW_SHOWN","","< window is visible",209,N],[13,"SDL_WINDOW_HIDDEN","","< window is not visible",209,N],[13,"SDL_WINDOW_BORDERLESS","","< no window decoration",209,N],[13,"SDL_WINDOW_RESIZABLE","","< window can be resized",209,N],[13,"SDL_WINDOW_MINIMIZED","","< window is minimized",209,N],[13,"SDL_WINDOW_MAXIMIZED","","< window is maximized",209,N],[13,"SDL_WINDOW_INPUT_GRABBED","","< window has grabbed input focus",209,N],[13,"SDL_WINDOW_INPUT_FOCUS","","< window has input focus",209,N],[13,"SDL_WINDOW_MOUSE_FOCUS","","< window has mouse focus",209,N],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",209,N],[13,"SDL_WINDOW_FOREIGN","","< window not created by SDL",209,N],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","< window should be created in high-DPI mode if supported. On macOS NSHighResolutionCapable must be set true in the application's Info.plist for this to have any effect.",209,N],[13,"SDL_WINDOW_MOUSE_CAPTURE","","< window has mouse captured (unrelated to INPUT_GRABBED)",209,N],[13,"SDL_WINDOW_ALWAYS_ON_TOP","","< window should always be above others",209,N],[13,"SDL_WINDOW_SKIP_TASKBAR","","< window should not be added to the taskbar",209,N],[13,"SDL_WINDOW_UTILITY","","< window should be treated as a utility window",209,N],[13,"SDL_WINDOW_TOOLTIP","","< window should be treated as a tooltip",209,N],[13,"SDL_WINDOW_POPUP_MENU","","< window should be treated as a popup menu",209,N],[13,"SDL_WINDOW_VULKAN","","< window usable for Vulkan surface",209,N],[4,"SDL_WindowEventID","","\\brief Event subtype for window events",N,N],[13,"SDL_WINDOWEVENT_NONE","","< Never used",210,N],[13,"SDL_WINDOWEVENT_SHOWN","","< Window has been shown",210,N],[13,"SDL_WINDOWEVENT_HIDDEN","","< Window has been hidden",210,N],[13,"SDL_WINDOWEVENT_EXPOSED","","< Window has been exposed and should be redrawn",210,N],[13,"SDL_WINDOWEVENT_MOVED","","< Window has been moved to data1, data2",210,N],[13,"SDL_WINDOWEVENT_RESIZED","","< Window has been resized to data1xdata2",210,N],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","< The window size has changed, either as a result of an API call or through the system or user changing the window size.",210,N],[13,"SDL_WINDOWEVENT_MINIMIZED","","< Window has been minimized",210,N],[13,"SDL_WINDOWEVENT_MAXIMIZED","","< Window has been maximized",210,N],[13,"SDL_WINDOWEVENT_RESTORED","","< Window has been restored to normal size and position",210,N],[13,"SDL_WINDOWEVENT_ENTER","","< Window has gained mouse focus",210,N],[13,"SDL_WINDOWEVENT_LEAVE","","< Window has lost mouse focus",210,N],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","< Window has gained keyboard focus",210,N],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","< Window has lost keyboard focus",210,N],[13,"SDL_WINDOWEVENT_CLOSE","","< The window manager requests that the window be closed",210,N],[13,"SDL_WINDOWEVENT_TAKE_FOCUS","","< Window is being offered a focus (should SetWindowInputFocus() on itself or a subwindow, or ignore)",210,N],[13,"SDL_WINDOWEVENT_HIT_TEST","","< Window had a hit test that wasn't SDL_HITTEST_NORMAL.",210,N],[4,"SDL_DisplayEventID","","\\brief Event subtype for display events",N,N],[13,"SDL_DISPLAYEVENT_NONE","","< Never used",211,N],[13,"SDL_DISPLAYEVENT_ORIENTATION","","< Display orientation has changed to data1",211,N],[4,"SDL_DisplayOrientation","","",N,N],[13,"SDL_ORIENTATION_UNKNOWN","","< The display orientation can't be determined",212,N],[13,"SDL_ORIENTATION_LANDSCAPE","","< The display is in landscape mode, with the right side up, relative to portrait mode",212,N],[13,"SDL_ORIENTATION_LANDSCAPE_FLIPPED","","< The display is in landscape mode, with the left side up, relative to portrait mode",212,N],[13,"SDL_ORIENTATION_PORTRAIT","","< The display is in portrait mode",212,N],[13,"SDL_ORIENTATION_PORTRAIT_FLIPPED","","< The display is in portrait mode, upside down",212,N],[4,"SDL_GLattr","","\\brief OpenGL configuration attributes",N,N],[13,"SDL_GL_RED_SIZE","","",213,N],[13,"SDL_GL_GREEN_SIZE","","",213,N],[13,"SDL_GL_BLUE_SIZE","","",213,N],[13,"SDL_GL_ALPHA_SIZE","","",213,N],[13,"SDL_GL_BUFFER_SIZE","","",213,N],[13,"SDL_GL_DOUBLEBUFFER","","",213,N],[13,"SDL_GL_DEPTH_SIZE","","",213,N],[13,"SDL_GL_STENCIL_SIZE","","",213,N],[13,"SDL_GL_ACCUM_RED_SIZE","","",213,N],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",213,N],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",213,N],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",213,N],[13,"SDL_GL_STEREO","","",213,N],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",213,N],[13,"SDL_GL_MULTISAMPLESAMPLES","","",213,N],[13,"SDL_GL_ACCELERATED_VISUAL","","",213,N],[13,"SDL_GL_RETAINED_BACKING","","",213,N],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",213,N],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",213,N],[13,"SDL_GL_CONTEXT_EGL","","",213,N],[13,"SDL_GL_CONTEXT_FLAGS","","",213,N],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",213,N],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",213,N],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",213,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR","","",213,N],[13,"SDL_GL_CONTEXT_RESET_NOTIFICATION","","",213,N],[13,"SDL_GL_CONTEXT_NO_ERROR","","",213,N],[4,"SDL_GLprofile","","",N,N],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",214,N],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",214,N],[13,"SDL_GL_CONTEXT_PROFILE_ES","","< GLX_CONTEXT_ES2_PROFILE_BIT_EXT",214,N],[4,"SDL_GLcontextFlag","","",N,N],[13,"SDL_GL_CONTEXT_DEBUG_FLAG","","",215,N],[13,"SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG","","",215,N],[13,"SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG","","",215,N],[13,"SDL_GL_CONTEXT_RESET_ISOLATION_FLAG","","",215,N],[4,"SDL_GLcontextReleaseFlag","","",N,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE","","",216,N],[13,"SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",216,N],[4,"SDL_GLContextResetNotification","","",N,N],[13,"SDL_GL_CONTEXT_RESET_NO_NOTIFICATION","","",217,N],[13,"SDL_GL_CONTEXT_RESET_LOSE_CONTEXT","","",217,N],[4,"SDL_HitTestResult","","\\brief Possible return values from the SDL_HitTest callback.",N,N],[13,"SDL_HITTEST_NORMAL","","< Region is normal. No special properties.",218,N],[13,"SDL_HITTEST_DRAGGABLE","","< Region can drag entire window.",218,N],[13,"SDL_HITTEST_RESIZE_TOPLEFT","","",218,N],[13,"SDL_HITTEST_RESIZE_TOP","","",218,N],[13,"SDL_HITTEST_RESIZE_TOPRIGHT","","",218,N],[13,"SDL_HITTEST_RESIZE_RIGHT","","",218,N],[13,"SDL_HITTEST_RESIZE_BOTTOMRIGHT","","",218,N],[13,"SDL_HITTEST_RESIZE_BOTTOM","","",218,N],[13,"SDL_HITTEST_RESIZE_BOTTOMLEFT","","",218,N],[13,"SDL_HITTEST_RESIZE_LEFT","","",218,N],[4,"SDL_Scancode","","\\brief The SDL keyboard scancode representation.",N,N],[13,"SDL_SCANCODE_UNKNOWN","","",219,N],[13,"SDL_SCANCODE_A","","",219,N],[13,"SDL_SCANCODE_B","","",219,N],[13,"SDL_SCANCODE_C","","",219,N],[13,"SDL_SCANCODE_D","","",219,N],[13,"SDL_SCANCODE_E","","",219,N],[13,"SDL_SCANCODE_F","","",219,N],[13,"SDL_SCANCODE_G","","",219,N],[13,"SDL_SCANCODE_H","","",219,N],[13,"SDL_SCANCODE_I","","",219,N],[13,"SDL_SCANCODE_J","","",219,N],[13,"SDL_SCANCODE_K","","",219,N],[13,"SDL_SCANCODE_L","","",219,N],[13,"SDL_SCANCODE_M","","",219,N],[13,"SDL_SCANCODE_N","","",219,N],[13,"SDL_SCANCODE_O","","",219,N],[13,"SDL_SCANCODE_P","","",219,N],[13,"SDL_SCANCODE_Q","","",219,N],[13,"SDL_SCANCODE_R","","",219,N],[13,"SDL_SCANCODE_S","","",219,N],[13,"SDL_SCANCODE_T","","",219,N],[13,"SDL_SCANCODE_U","","",219,N],[13,"SDL_SCANCODE_V","","",219,N],[13,"SDL_SCANCODE_W","","",219,N],[13,"SDL_SCANCODE_X","","",219,N],[13,"SDL_SCANCODE_Y","","",219,N],[13,"SDL_SCANCODE_Z","","",219,N],[13,"SDL_SCANCODE_1","","",219,N],[13,"SDL_SCANCODE_2","","",219,N],[13,"SDL_SCANCODE_3","","",219,N],[13,"SDL_SCANCODE_4","","",219,N],[13,"SDL_SCANCODE_5","","",219,N],[13,"SDL_SCANCODE_6","","",219,N],[13,"SDL_SCANCODE_7","","",219,N],[13,"SDL_SCANCODE_8","","",219,N],[13,"SDL_SCANCODE_9","","",219,N],[13,"SDL_SCANCODE_0","","",219,N],[13,"SDL_SCANCODE_RETURN","","",219,N],[13,"SDL_SCANCODE_ESCAPE","","",219,N],[13,"SDL_SCANCODE_BACKSPACE","","",219,N],[13,"SDL_SCANCODE_TAB","","",219,N],[13,"SDL_SCANCODE_SPACE","","",219,N],[13,"SDL_SCANCODE_MINUS","","",219,N],[13,"SDL_SCANCODE_EQUALS","","",219,N],[13,"SDL_SCANCODE_LEFTBRACKET","","",219,N],[13,"SDL_SCANCODE_RIGHTBRACKET","","",219,N],[13,"SDL_SCANCODE_BACKSLASH","","< Located at the lower left of the return key on ISO keyboards and at the right end of the QWERTY row on ANSI keyboards. Produces REVERSE SOLIDUS (backslash) and VERTICAL LINE in a US layout, REVERSE SOLIDUS and VERTICAL LINE in a UK Mac layout, NUMBER SIGN and TILDE in a UK Windows layout, DOLLAR SIGN and POUND SIGN in a Swiss German layout, NUMBER SIGN and APOSTROPHE in a German layout, GRAVE ACCENT and POUND SIGN in a French Mac layout, and ASTERISK and MICRO SIGN in a French Windows layout.",219,N],[13,"SDL_SCANCODE_NONUSHASH","","< ISO USB keyboards actually use this code instead of 49 for the same key, but all OSes I've seen treat the two codes identically. So, as an implementor, unless your keyboard generates both of those codes and your OS treats them differently, you should generate SDL_SCANCODE_BACKSLASH instead of this code. As a user, you should not rely on this code because SDL will never generate it with most (all?) keyboards.",219,N],[13,"SDL_SCANCODE_SEMICOLON","","",219,N],[13,"SDL_SCANCODE_APOSTROPHE","","",219,N],[13,"SDL_SCANCODE_GRAVE","","< Located in the top left corner (on both ANSI and ISO keyboards). Produces GRAVE ACCENT and TILDE in a US Windows layout and in US and UK Mac layouts on ANSI keyboards, GRAVE ACCENT and NOT SIGN in a UK Windows layout, SECTION SIGN and PLUS-MINUS SIGN in US and UK Mac layouts on ISO keyboards, SECTION SIGN and DEGREE SIGN in a Swiss German layout (Mac: only on ISO keyboards), CIRCUMFLEX ACCENT and DEGREE SIGN in a German layout (Mac: only on ISO keyboards), SUPERSCRIPT TWO and TILDE in a French Windows layout, COMMERCIAL AT and NUMBER SIGN in a French Mac layout on ISO keyboards, and LESS-THAN SIGN and GREATER-THAN SIGN in a Swiss German, German, or French Mac layout on ANSI keyboards.",219,N],[13,"SDL_SCANCODE_COMMA","","",219,N],[13,"SDL_SCANCODE_PERIOD","","",219,N],[13,"SDL_SCANCODE_SLASH","","",219,N],[13,"SDL_SCANCODE_CAPSLOCK","","",219,N],[13,"SDL_SCANCODE_F1","","",219,N],[13,"SDL_SCANCODE_F2","","",219,N],[13,"SDL_SCANCODE_F3","","",219,N],[13,"SDL_SCANCODE_F4","","",219,N],[13,"SDL_SCANCODE_F5","","",219,N],[13,"SDL_SCANCODE_F6","","",219,N],[13,"SDL_SCANCODE_F7","","",219,N],[13,"SDL_SCANCODE_F8","","",219,N],[13,"SDL_SCANCODE_F9","","",219,N],[13,"SDL_SCANCODE_F10","","",219,N],[13,"SDL_SCANCODE_F11","","",219,N],[13,"SDL_SCANCODE_F12","","",219,N],[13,"SDL_SCANCODE_PRINTSCREEN","","",219,N],[13,"SDL_SCANCODE_SCROLLLOCK","","",219,N],[13,"SDL_SCANCODE_PAUSE","","",219,N],[13,"SDL_SCANCODE_INSERT","","< insert on PC, help on some Mac keyboards (but does send code 73, not 117)",219,N],[13,"SDL_SCANCODE_HOME","","",219,N],[13,"SDL_SCANCODE_PAGEUP","","",219,N],[13,"SDL_SCANCODE_DELETE","","",219,N],[13,"SDL_SCANCODE_END","","",219,N],[13,"SDL_SCANCODE_PAGEDOWN","","",219,N],[13,"SDL_SCANCODE_RIGHT","","",219,N],[13,"SDL_SCANCODE_LEFT","","",219,N],[13,"SDL_SCANCODE_DOWN","","",219,N],[13,"SDL_SCANCODE_UP","","",219,N],[13,"SDL_SCANCODE_NUMLOCKCLEAR","","< num lock on PC, clear on Mac keyboards",219,N],[13,"SDL_SCANCODE_KP_DIVIDE","","",219,N],[13,"SDL_SCANCODE_KP_MULTIPLY","","",219,N],[13,"SDL_SCANCODE_KP_MINUS","","",219,N],[13,"SDL_SCANCODE_KP_PLUS","","",219,N],[13,"SDL_SCANCODE_KP_ENTER","","",219,N],[13,"SDL_SCANCODE_KP_1","","",219,N],[13,"SDL_SCANCODE_KP_2","","",219,N],[13,"SDL_SCANCODE_KP_3","","",219,N],[13,"SDL_SCANCODE_KP_4","","",219,N],[13,"SDL_SCANCODE_KP_5","","",219,N],[13,"SDL_SCANCODE_KP_6","","",219,N],[13,"SDL_SCANCODE_KP_7","","",219,N],[13,"SDL_SCANCODE_KP_8","","",219,N],[13,"SDL_SCANCODE_KP_9","","",219,N],[13,"SDL_SCANCODE_KP_0","","",219,N],[13,"SDL_SCANCODE_KP_PERIOD","","",219,N],[13,"SDL_SCANCODE_NONUSBACKSLASH","","< This is the additional key that ISO keyboards have over ANSI ones, located between left shift and Y. Produces GRAVE ACCENT and TILDE in a US or UK Mac layout, REVERSE SOLIDUS (backslash) and VERTICAL LINE in a US or UK Windows layout, and LESS-THAN SIGN and GREATER-THAN SIGN in a Swiss German, German, or French layout.",219,N],[13,"SDL_SCANCODE_APPLICATION","","< windows contextual menu, compose",219,N],[13,"SDL_SCANCODE_POWER","","< The USB document says this is a status flag, not a physical key - but some Mac keyboards do have a power key.",219,N],[13,"SDL_SCANCODE_KP_EQUALS","","",219,N],[13,"SDL_SCANCODE_F13","","",219,N],[13,"SDL_SCANCODE_F14","","",219,N],[13,"SDL_SCANCODE_F15","","",219,N],[13,"SDL_SCANCODE_F16","","",219,N],[13,"SDL_SCANCODE_F17","","",219,N],[13,"SDL_SCANCODE_F18","","",219,N],[13,"SDL_SCANCODE_F19","","",219,N],[13,"SDL_SCANCODE_F20","","",219,N],[13,"SDL_SCANCODE_F21","","",219,N],[13,"SDL_SCANCODE_F22","","",219,N],[13,"SDL_SCANCODE_F23","","",219,N],[13,"SDL_SCANCODE_F24","","",219,N],[13,"SDL_SCANCODE_EXECUTE","","",219,N],[13,"SDL_SCANCODE_HELP","","",219,N],[13,"SDL_SCANCODE_MENU","","",219,N],[13,"SDL_SCANCODE_SELECT","","",219,N],[13,"SDL_SCANCODE_STOP","","",219,N],[13,"SDL_SCANCODE_AGAIN","","< redo",219,N],[13,"SDL_SCANCODE_UNDO","","",219,N],[13,"SDL_SCANCODE_CUT","","",219,N],[13,"SDL_SCANCODE_COPY","","",219,N],[13,"SDL_SCANCODE_PASTE","","",219,N],[13,"SDL_SCANCODE_FIND","","",219,N],[13,"SDL_SCANCODE_MUTE","","",219,N],[13,"SDL_SCANCODE_VOLUMEUP","","",219,N],[13,"SDL_SCANCODE_VOLUMEDOWN","","",219,N],[13,"SDL_SCANCODE_KP_COMMA","","",219,N],[13,"SDL_SCANCODE_KP_EQUALSAS400","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL1","","< used on Asian keyboards, see footnotes in USB doc",219,N],[13,"SDL_SCANCODE_INTERNATIONAL2","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL3","","< Yen",219,N],[13,"SDL_SCANCODE_INTERNATIONAL4","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL5","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL6","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL7","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL8","","",219,N],[13,"SDL_SCANCODE_INTERNATIONAL9","","",219,N],[13,"SDL_SCANCODE_LANG1","","< Hangul/English toggle",219,N],[13,"SDL_SCANCODE_LANG2","","< Hanja conversion",219,N],[13,"SDL_SCANCODE_LANG3","","< Katakana",219,N],[13,"SDL_SCANCODE_LANG4","","< Hiragana",219,N],[13,"SDL_SCANCODE_LANG5","","< Zenkaku/Hankaku",219,N],[13,"SDL_SCANCODE_LANG6","","< reserved",219,N],[13,"SDL_SCANCODE_LANG7","","< reserved",219,N],[13,"SDL_SCANCODE_LANG8","","< reserved",219,N],[13,"SDL_SCANCODE_LANG9","","< reserved",219,N],[13,"SDL_SCANCODE_ALTERASE","","< Erase-Eaze",219,N],[13,"SDL_SCANCODE_SYSREQ","","",219,N],[13,"SDL_SCANCODE_CANCEL","","",219,N],[13,"SDL_SCANCODE_CLEAR","","",219,N],[13,"SDL_SCANCODE_PRIOR","","",219,N],[13,"SDL_SCANCODE_RETURN2","","",219,N],[13,"SDL_SCANCODE_SEPARATOR","","",219,N],[13,"SDL_SCANCODE_OUT","","",219,N],[13,"SDL_SCANCODE_OPER","","",219,N],[13,"SDL_SCANCODE_CLEARAGAIN","","",219,N],[13,"SDL_SCANCODE_CRSEL","","",219,N],[13,"SDL_SCANCODE_EXSEL","","",219,N],[13,"SDL_SCANCODE_KP_00","","",219,N],[13,"SDL_SCANCODE_KP_000","","",219,N],[13,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",219,N],[13,"SDL_SCANCODE_DECIMALSEPARATOR","","",219,N],[13,"SDL_SCANCODE_CURRENCYUNIT","","",219,N],[13,"SDL_SCANCODE_CURRENCYSUBUNIT","","",219,N],[13,"SDL_SCANCODE_KP_LEFTPAREN","","",219,N],[13,"SDL_SCANCODE_KP_RIGHTPAREN","","",219,N],[13,"SDL_SCANCODE_KP_LEFTBRACE","","",219,N],[13,"SDL_SCANCODE_KP_RIGHTBRACE","","",219,N],[13,"SDL_SCANCODE_KP_TAB","","",219,N],[13,"SDL_SCANCODE_KP_BACKSPACE","","",219,N],[13,"SDL_SCANCODE_KP_A","","",219,N],[13,"SDL_SCANCODE_KP_B","","",219,N],[13,"SDL_SCANCODE_KP_C","","",219,N],[13,"SDL_SCANCODE_KP_D","","",219,N],[13,"SDL_SCANCODE_KP_E","","",219,N],[13,"SDL_SCANCODE_KP_F","","",219,N],[13,"SDL_SCANCODE_KP_XOR","","",219,N],[13,"SDL_SCANCODE_KP_POWER","","",219,N],[13,"SDL_SCANCODE_KP_PERCENT","","",219,N],[13,"SDL_SCANCODE_KP_LESS","","",219,N],[13,"SDL_SCANCODE_KP_GREATER","","",219,N],[13,"SDL_SCANCODE_KP_AMPERSAND","","",219,N],[13,"SDL_SCANCODE_KP_DBLAMPERSAND","","",219,N],[13,"SDL_SCANCODE_KP_VERTICALBAR","","",219,N],[13,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",219,N],[13,"SDL_SCANCODE_KP_COLON","","",219,N],[13,"SDL_SCANCODE_KP_HASH","","",219,N],[13,"SDL_SCANCODE_KP_SPACE","","",219,N],[13,"SDL_SCANCODE_KP_AT","","",219,N],[13,"SDL_SCANCODE_KP_EXCLAM","","",219,N],[13,"SDL_SCANCODE_KP_MEMSTORE","","",219,N],[13,"SDL_SCANCODE_KP_MEMRECALL","","",219,N],[13,"SDL_SCANCODE_KP_MEMCLEAR","","",219,N],[13,"SDL_SCANCODE_KP_MEMADD","","",219,N],[13,"SDL_SCANCODE_KP_MEMSUBTRACT","","",219,N],[13,"SDL_SCANCODE_KP_MEMMULTIPLY","","",219,N],[13,"SDL_SCANCODE_KP_MEMDIVIDE","","",219,N],[13,"SDL_SCANCODE_KP_PLUSMINUS","","",219,N],[13,"SDL_SCANCODE_KP_CLEAR","","",219,N],[13,"SDL_SCANCODE_KP_CLEARENTRY","","",219,N],[13,"SDL_SCANCODE_KP_BINARY","","",219,N],[13,"SDL_SCANCODE_KP_OCTAL","","",219,N],[13,"SDL_SCANCODE_KP_DECIMAL","","",219,N],[13,"SDL_SCANCODE_KP_HEXADECIMAL","","",219,N],[13,"SDL_SCANCODE_LCTRL","","",219,N],[13,"SDL_SCANCODE_LSHIFT","","",219,N],[13,"SDL_SCANCODE_LALT","","< alt, option",219,N],[13,"SDL_SCANCODE_LGUI","","< windows, command (apple), meta",219,N],[13,"SDL_SCANCODE_RCTRL","","",219,N],[13,"SDL_SCANCODE_RSHIFT","","",219,N],[13,"SDL_SCANCODE_RALT","","< alt gr, option",219,N],[13,"SDL_SCANCODE_RGUI","","< windows, command (apple), meta",219,N],[13,"SDL_SCANCODE_MODE","","< I'm not sure if this is really not covered by any of the above, but since there's a special KMOD_MODE for it I'm adding it here",219,N],[13,"SDL_SCANCODE_AUDIONEXT","","",219,N],[13,"SDL_SCANCODE_AUDIOPREV","","",219,N],[13,"SDL_SCANCODE_AUDIOSTOP","","",219,N],[13,"SDL_SCANCODE_AUDIOPLAY","","",219,N],[13,"SDL_SCANCODE_AUDIOMUTE","","",219,N],[13,"SDL_SCANCODE_MEDIASELECT","","",219,N],[13,"SDL_SCANCODE_WWW","","",219,N],[13,"SDL_SCANCODE_MAIL","","",219,N],[13,"SDL_SCANCODE_CALCULATOR","","",219,N],[13,"SDL_SCANCODE_COMPUTER","","",219,N],[13,"SDL_SCANCODE_AC_SEARCH","","",219,N],[13,"SDL_SCANCODE_AC_HOME","","",219,N],[13,"SDL_SCANCODE_AC_BACK","","",219,N],[13,"SDL_SCANCODE_AC_FORWARD","","",219,N],[13,"SDL_SCANCODE_AC_STOP","","",219,N],[13,"SDL_SCANCODE_AC_REFRESH","","",219,N],[13,"SDL_SCANCODE_AC_BOOKMARKS","","",219,N],[13,"SDL_SCANCODE_BRIGHTNESSDOWN","","",219,N],[13,"SDL_SCANCODE_BRIGHTNESSUP","","",219,N],[13,"SDL_SCANCODE_DISPLAYSWITCH","","< display mirroring/dual display switch, video mode switch",219,N],[13,"SDL_SCANCODE_KBDILLUMTOGGLE","","",219,N],[13,"SDL_SCANCODE_KBDILLUMDOWN","","",219,N],[13,"SDL_SCANCODE_KBDILLUMUP","","",219,N],[13,"SDL_SCANCODE_EJECT","","",219,N],[13,"SDL_SCANCODE_SLEEP","","",219,N],[13,"SDL_SCANCODE_APP1","","",219,N],[13,"SDL_SCANCODE_APP2","","",219,N],[13,"SDL_SCANCODE_AUDIOREWIND","","",219,N],[13,"SDL_SCANCODE_AUDIOFASTFORWARD","","",219,N],[13,"SDL_NUM_SCANCODES","","< not a key, just marks the number of scancodes for array bounds",219,N],[4,"_bindgen_ty_7","","",N,N],[13,"SDLK_UNKNOWN","","",220,N],[13,"SDLK_RETURN","","",220,N],[13,"SDLK_ESCAPE","","",220,N],[13,"SDLK_BACKSPACE","","",220,N],[13,"SDLK_TAB","","",220,N],[13,"SDLK_SPACE","","",220,N],[13,"SDLK_EXCLAIM","","",220,N],[13,"SDLK_QUOTEDBL","","",220,N],[13,"SDLK_HASH","","",220,N],[13,"SDLK_PERCENT","","",220,N],[13,"SDLK_DOLLAR","","",220,N],[13,"SDLK_AMPERSAND","","",220,N],[13,"SDLK_QUOTE","","",220,N],[13,"SDLK_LEFTPAREN","","",220,N],[13,"SDLK_RIGHTPAREN","","",220,N],[13,"SDLK_ASTERISK","","",220,N],[13,"SDLK_PLUS","","",220,N],[13,"SDLK_COMMA","","",220,N],[13,"SDLK_MINUS","","",220,N],[13,"SDLK_PERIOD","","",220,N],[13,"SDLK_SLASH","","",220,N],[13,"SDLK_0","","",220,N],[13,"SDLK_1","","",220,N],[13,"SDLK_2","","",220,N],[13,"SDLK_3","","",220,N],[13,"SDLK_4","","",220,N],[13,"SDLK_5","","",220,N],[13,"SDLK_6","","",220,N],[13,"SDLK_7","","",220,N],[13,"SDLK_8","","",220,N],[13,"SDLK_9","","",220,N],[13,"SDLK_COLON","","",220,N],[13,"SDLK_SEMICOLON","","",220,N],[13,"SDLK_LESS","","",220,N],[13,"SDLK_EQUALS","","",220,N],[13,"SDLK_GREATER","","",220,N],[13,"SDLK_QUESTION","","",220,N],[13,"SDLK_AT","","",220,N],[13,"SDLK_LEFTBRACKET","","",220,N],[13,"SDLK_BACKSLASH","","",220,N],[13,"SDLK_RIGHTBRACKET","","",220,N],[13,"SDLK_CARET","","",220,N],[13,"SDLK_UNDERSCORE","","",220,N],[13,"SDLK_BACKQUOTE","","",220,N],[13,"SDLK_a","","",220,N],[13,"SDLK_b","","",220,N],[13,"SDLK_c","","",220,N],[13,"SDLK_d","","",220,N],[13,"SDLK_e","","",220,N],[13,"SDLK_f","","",220,N],[13,"SDLK_g","","",220,N],[13,"SDLK_h","","",220,N],[13,"SDLK_i","","",220,N],[13,"SDLK_j","","",220,N],[13,"SDLK_k","","",220,N],[13,"SDLK_l","","",220,N],[13,"SDLK_m","","",220,N],[13,"SDLK_n","","",220,N],[13,"SDLK_o","","",220,N],[13,"SDLK_p","","",220,N],[13,"SDLK_q","","",220,N],[13,"SDLK_r","","",220,N],[13,"SDLK_s","","",220,N],[13,"SDLK_t","","",220,N],[13,"SDLK_u","","",220,N],[13,"SDLK_v","","",220,N],[13,"SDLK_w","","",220,N],[13,"SDLK_x","","",220,N],[13,"SDLK_y","","",220,N],[13,"SDLK_z","","",220,N],[13,"SDLK_CAPSLOCK","","",220,N],[13,"SDLK_F1","","",220,N],[13,"SDLK_F2","","",220,N],[13,"SDLK_F3","","",220,N],[13,"SDLK_F4","","",220,N],[13,"SDLK_F5","","",220,N],[13,"SDLK_F6","","",220,N],[13,"SDLK_F7","","",220,N],[13,"SDLK_F8","","",220,N],[13,"SDLK_F9","","",220,N],[13,"SDLK_F10","","",220,N],[13,"SDLK_F11","","",220,N],[13,"SDLK_F12","","",220,N],[13,"SDLK_PRINTSCREEN","","",220,N],[13,"SDLK_SCROLLLOCK","","",220,N],[13,"SDLK_PAUSE","","",220,N],[13,"SDLK_INSERT","","",220,N],[13,"SDLK_HOME","","",220,N],[13,"SDLK_PAGEUP","","",220,N],[13,"SDLK_DELETE","","",220,N],[13,"SDLK_END","","",220,N],[13,"SDLK_PAGEDOWN","","",220,N],[13,"SDLK_RIGHT","","",220,N],[13,"SDLK_LEFT","","",220,N],[13,"SDLK_DOWN","","",220,N],[13,"SDLK_UP","","",220,N],[13,"SDLK_NUMLOCKCLEAR","","",220,N],[13,"SDLK_KP_DIVIDE","","",220,N],[13,"SDLK_KP_MULTIPLY","","",220,N],[13,"SDLK_KP_MINUS","","",220,N],[13,"SDLK_KP_PLUS","","",220,N],[13,"SDLK_KP_ENTER","","",220,N],[13,"SDLK_KP_1","","",220,N],[13,"SDLK_KP_2","","",220,N],[13,"SDLK_KP_3","","",220,N],[13,"SDLK_KP_4","","",220,N],[13,"SDLK_KP_5","","",220,N],[13,"SDLK_KP_6","","",220,N],[13,"SDLK_KP_7","","",220,N],[13,"SDLK_KP_8","","",220,N],[13,"SDLK_KP_9","","",220,N],[13,"SDLK_KP_0","","",220,N],[13,"SDLK_KP_PERIOD","","",220,N],[13,"SDLK_APPLICATION","","",220,N],[13,"SDLK_POWER","","",220,N],[13,"SDLK_KP_EQUALS","","",220,N],[13,"SDLK_F13","","",220,N],[13,"SDLK_F14","","",220,N],[13,"SDLK_F15","","",220,N],[13,"SDLK_F16","","",220,N],[13,"SDLK_F17","","",220,N],[13,"SDLK_F18","","",220,N],[13,"SDLK_F19","","",220,N],[13,"SDLK_F20","","",220,N],[13,"SDLK_F21","","",220,N],[13,"SDLK_F22","","",220,N],[13,"SDLK_F23","","",220,N],[13,"SDLK_F24","","",220,N],[13,"SDLK_EXECUTE","","",220,N],[13,"SDLK_HELP","","",220,N],[13,"SDLK_MENU","","",220,N],[13,"SDLK_SELECT","","",220,N],[13,"SDLK_STOP","","",220,N],[13,"SDLK_AGAIN","","",220,N],[13,"SDLK_UNDO","","",220,N],[13,"SDLK_CUT","","",220,N],[13,"SDLK_COPY","","",220,N],[13,"SDLK_PASTE","","",220,N],[13,"SDLK_FIND","","",220,N],[13,"SDLK_MUTE","","",220,N],[13,"SDLK_VOLUMEUP","","",220,N],[13,"SDLK_VOLUMEDOWN","","",220,N],[13,"SDLK_KP_COMMA","","",220,N],[13,"SDLK_KP_EQUALSAS400","","",220,N],[13,"SDLK_ALTERASE","","",220,N],[13,"SDLK_SYSREQ","","",220,N],[13,"SDLK_CANCEL","","",220,N],[13,"SDLK_CLEAR","","",220,N],[13,"SDLK_PRIOR","","",220,N],[13,"SDLK_RETURN2","","",220,N],[13,"SDLK_SEPARATOR","","",220,N],[13,"SDLK_OUT","","",220,N],[13,"SDLK_OPER","","",220,N],[13,"SDLK_CLEARAGAIN","","",220,N],[13,"SDLK_CRSEL","","",220,N],[13,"SDLK_EXSEL","","",220,N],[13,"SDLK_KP_00","","",220,N],[13,"SDLK_KP_000","","",220,N],[13,"SDLK_THOUSANDSSEPARATOR","","",220,N],[13,"SDLK_DECIMALSEPARATOR","","",220,N],[13,"SDLK_CURRENCYUNIT","","",220,N],[13,"SDLK_CURRENCYSUBUNIT","","",220,N],[13,"SDLK_KP_LEFTPAREN","","",220,N],[13,"SDLK_KP_RIGHTPAREN","","",220,N],[13,"SDLK_KP_LEFTBRACE","","",220,N],[13,"SDLK_KP_RIGHTBRACE","","",220,N],[13,"SDLK_KP_TAB","","",220,N],[13,"SDLK_KP_BACKSPACE","","",220,N],[13,"SDLK_KP_A","","",220,N],[13,"SDLK_KP_B","","",220,N],[13,"SDLK_KP_C","","",220,N],[13,"SDLK_KP_D","","",220,N],[13,"SDLK_KP_E","","",220,N],[13,"SDLK_KP_F","","",220,N],[13,"SDLK_KP_XOR","","",220,N],[13,"SDLK_KP_POWER","","",220,N],[13,"SDLK_KP_PERCENT","","",220,N],[13,"SDLK_KP_LESS","","",220,N],[13,"SDLK_KP_GREATER","","",220,N],[13,"SDLK_KP_AMPERSAND","","",220,N],[13,"SDLK_KP_DBLAMPERSAND","","",220,N],[13,"SDLK_KP_VERTICALBAR","","",220,N],[13,"SDLK_KP_DBLVERTICALBAR","","",220,N],[13,"SDLK_KP_COLON","","",220,N],[13,"SDLK_KP_HASH","","",220,N],[13,"SDLK_KP_SPACE","","",220,N],[13,"SDLK_KP_AT","","",220,N],[13,"SDLK_KP_EXCLAM","","",220,N],[13,"SDLK_KP_MEMSTORE","","",220,N],[13,"SDLK_KP_MEMRECALL","","",220,N],[13,"SDLK_KP_MEMCLEAR","","",220,N],[13,"SDLK_KP_MEMADD","","",220,N],[13,"SDLK_KP_MEMSUBTRACT","","",220,N],[13,"SDLK_KP_MEMMULTIPLY","","",220,N],[13,"SDLK_KP_MEMDIVIDE","","",220,N],[13,"SDLK_KP_PLUSMINUS","","",220,N],[13,"SDLK_KP_CLEAR","","",220,N],[13,"SDLK_KP_CLEARENTRY","","",220,N],[13,"SDLK_KP_BINARY","","",220,N],[13,"SDLK_KP_OCTAL","","",220,N],[13,"SDLK_KP_DECIMAL","","",220,N],[13,"SDLK_KP_HEXADECIMAL","","",220,N],[13,"SDLK_LCTRL","","",220,N],[13,"SDLK_LSHIFT","","",220,N],[13,"SDLK_LALT","","",220,N],[13,"SDLK_LGUI","","",220,N],[13,"SDLK_RCTRL","","",220,N],[13,"SDLK_RSHIFT","","",220,N],[13,"SDLK_RALT","","",220,N],[13,"SDLK_RGUI","","",220,N],[13,"SDLK_MODE","","",220,N],[13,"SDLK_AUDIONEXT","","",220,N],[13,"SDLK_AUDIOPREV","","",220,N],[13,"SDLK_AUDIOSTOP","","",220,N],[13,"SDLK_AUDIOPLAY","","",220,N],[13,"SDLK_AUDIOMUTE","","",220,N],[13,"SDLK_MEDIASELECT","","",220,N],[13,"SDLK_WWW","","",220,N],[13,"SDLK_MAIL","","",220,N],[13,"SDLK_CALCULATOR","","",220,N],[13,"SDLK_COMPUTER","","",220,N],[13,"SDLK_AC_SEARCH","","",220,N],[13,"SDLK_AC_HOME","","",220,N],[13,"SDLK_AC_BACK","","",220,N],[13,"SDLK_AC_FORWARD","","",220,N],[13,"SDLK_AC_STOP","","",220,N],[13,"SDLK_AC_REFRESH","","",220,N],[13,"SDLK_AC_BOOKMARKS","","",220,N],[13,"SDLK_BRIGHTNESSDOWN","","",220,N],[13,"SDLK_BRIGHTNESSUP","","",220,N],[13,"SDLK_DISPLAYSWITCH","","",220,N],[13,"SDLK_KBDILLUMTOGGLE","","",220,N],[13,"SDLK_KBDILLUMDOWN","","",220,N],[13,"SDLK_KBDILLUMUP","","",220,N],[13,"SDLK_EJECT","","",220,N],[13,"SDLK_SLEEP","","",220,N],[13,"SDLK_APP1","","",220,N],[13,"SDLK_APP2","","",220,N],[13,"SDLK_AUDIOREWIND","","",220,N],[13,"SDLK_AUDIOFASTFORWARD","","",220,N],[4,"SDL_Keymod","","\\brief Enumeration of valid key mods (possibly OR'd together).",N,N],[13,"KMOD_NONE","","",221,N],[13,"KMOD_LSHIFT","","",221,N],[13,"KMOD_RSHIFT","","",221,N],[13,"KMOD_LCTRL","","",221,N],[13,"KMOD_RCTRL","","",221,N],[13,"KMOD_LALT","","",221,N],[13,"KMOD_RALT","","",221,N],[13,"KMOD_LGUI","","",221,N],[13,"KMOD_RGUI","","",221,N],[13,"KMOD_NUM","","",221,N],[13,"KMOD_CAPS","","",221,N],[13,"KMOD_MODE","","",221,N],[13,"KMOD_RESERVED","","",221,N],[4,"SDL_SystemCursor","","\\brief Cursor types for SDL_CreateSystemCursor().",N,N],[13,"SDL_SYSTEM_CURSOR_ARROW","","< Arrow",222,N],[13,"SDL_SYSTEM_CURSOR_IBEAM","","< I-beam",222,N],[13,"SDL_SYSTEM_CURSOR_WAIT","","< Wait",222,N],[13,"SDL_SYSTEM_CURSOR_CROSSHAIR","","< Crosshair",222,N],[13,"SDL_SYSTEM_CURSOR_WAITARROW","","< Small wait cursor (or Wait if not available)",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENWSE","","< Double arrow pointing northwest and southeast",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENESW","","< Double arrow pointing northeast and southwest",222,N],[13,"SDL_SYSTEM_CURSOR_SIZEWE","","< Double arrow pointing west and east",222,N],[13,"SDL_SYSTEM_CURSOR_SIZENS","","< Double arrow pointing north and south",222,N],[13,"SDL_SYSTEM_CURSOR_SIZEALL","","< Four pointed arrow pointing north, south, east, and west",222,N],[13,"SDL_SYSTEM_CURSOR_NO","","< Slashed circle or crossbones",222,N],[13,"SDL_SYSTEM_CURSOR_HAND","","< Hand",222,N],[13,"SDL_NUM_SYSTEM_CURSORS","","",222,N],[4,"SDL_MouseWheelDirection","","\\brief Scroll direction types for the Scroll event",N,N],[13,"SDL_MOUSEWHEEL_NORMAL","","< The scroll direction is normal",223,N],[13,"SDL_MOUSEWHEEL_FLIPPED","","< The scroll direction is flipped / natural",223,N],[4,"SDL_JoystickType","","",N,N],[13,"SDL_JOYSTICK_TYPE_UNKNOWN","","",224,N],[13,"SDL_JOYSTICK_TYPE_GAMECONTROLLER","","",224,N],[13,"SDL_JOYSTICK_TYPE_WHEEL","","",224,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_STICK","","",224,N],[13,"SDL_JOYSTICK_TYPE_FLIGHT_STICK","","",224,N],[13,"SDL_JOYSTICK_TYPE_DANCE_PAD","","",224,N],[13,"SDL_JOYSTICK_TYPE_GUITAR","","",224,N],[13,"SDL_JOYSTICK_TYPE_DRUM_KIT","","",224,N],[13,"SDL_JOYSTICK_TYPE_ARCADE_PAD","","",224,N],[13,"SDL_JOYSTICK_TYPE_THROTTLE","","",224,N],[4,"SDL_JoystickPowerLevel","","",N,N],[13,"SDL_JOYSTICK_POWER_UNKNOWN","","",225,N],[13,"SDL_JOYSTICK_POWER_EMPTY","","",225,N],[13,"SDL_JOYSTICK_POWER_LOW","","",225,N],[13,"SDL_JOYSTICK_POWER_MEDIUM","","",225,N],[13,"SDL_JOYSTICK_POWER_FULL","","",225,N],[13,"SDL_JOYSTICK_POWER_WIRED","","",225,N],[13,"SDL_JOYSTICK_POWER_MAX","","",225,N],[4,"SDL_GameControllerBindType","","",N,N],[13,"SDL_CONTROLLER_BINDTYPE_NONE","","",226,N],[13,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",226,N],[13,"SDL_CONTROLLER_BINDTYPE_AXIS","","",226,N],[13,"SDL_CONTROLLER_BINDTYPE_HAT","","",226,N],[4,"SDL_GameControllerAxis","","The list of axes available from a controller",N,N],[13,"SDL_CONTROLLER_AXIS_INVALID","","",227,N],[13,"SDL_CONTROLLER_AXIS_LEFTX","","",227,N],[13,"SDL_CONTROLLER_AXIS_LEFTY","","",227,N],[13,"SDL_CONTROLLER_AXIS_RIGHTX","","",227,N],[13,"SDL_CONTROLLER_AXIS_RIGHTY","","",227,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",227,N],[13,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",227,N],[13,"SDL_CONTROLLER_AXIS_MAX","","",227,N],[4,"SDL_GameControllerButton","","The list of buttons available from a controller",N,N],[13,"SDL_CONTROLLER_BUTTON_INVALID","","",228,N],[13,"SDL_CONTROLLER_BUTTON_A","","",228,N],[13,"SDL_CONTROLLER_BUTTON_B","","",228,N],[13,"SDL_CONTROLLER_BUTTON_X","","",228,N],[13,"SDL_CONTROLLER_BUTTON_Y","","",228,N],[13,"SDL_CONTROLLER_BUTTON_BACK","","",228,N],[13,"SDL_CONTROLLER_BUTTON_GUIDE","","",228,N],[13,"SDL_CONTROLLER_BUTTON_START","","",228,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",228,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",228,N],[13,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",228,N],[13,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",228,N],[13,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",228,N],[13,"SDL_CONTROLLER_BUTTON_MAX","","",228,N],[4,"SDL_EventType","","\\brief The types of events that can be delivered.",N,N],[13,"SDL_FIRSTEVENT","","< Unused (do not remove)",229,N],[13,"SDL_QUIT","","< User-requested quit",229,N],[13,"SDL_APP_TERMINATING","","< The application is being terminated by the OS Called on iOS in applicationWillTerminate() Called on Android in onDestroy()",229,N],[13,"SDL_APP_LOWMEMORY","","< The application is low on memory, free memory if possible. Called on iOS in applicationDidReceiveMemoryWarning() Called on Android in onLowMemory()",229,N],[13,"SDL_APP_WILLENTERBACKGROUND","","< The application is about to enter the background Called on iOS in applicationWillResignActive() Called on Android in onPause()",229,N],[13,"SDL_APP_DIDENTERBACKGROUND","","< The application did enter the background and may not get CPU for some time Called on iOS in applicationDidEnterBackground() Called on Android in onPause()",229,N],[13,"SDL_APP_WILLENTERFOREGROUND","","< The application is about to enter the foreground Called on iOS in applicationWillEnterForeground() Called on Android in onResume()",229,N],[13,"SDL_APP_DIDENTERFOREGROUND","","< The application is now interactive Called on iOS in applicationDidBecomeActive() Called on Android in onResume()",229,N],[13,"SDL_DISPLAYEVENT","","< Display state change",229,N],[13,"SDL_WINDOWEVENT","","< Window state change",229,N],[13,"SDL_SYSWMEVENT","","< System specific event",229,N],[13,"SDL_KEYDOWN","","< Key pressed",229,N],[13,"SDL_KEYUP","","< Key released",229,N],[13,"SDL_TEXTEDITING","","< Keyboard text editing (composition)",229,N],[13,"SDL_TEXTINPUT","","< Keyboard text input",229,N],[13,"SDL_KEYMAPCHANGED","","< Keymap changed due to a system event such as an input language or keyboard layout change.",229,N],[13,"SDL_MOUSEMOTION","","< Mouse moved",229,N],[13,"SDL_MOUSEBUTTONDOWN","","< Mouse button pressed",229,N],[13,"SDL_MOUSEBUTTONUP","","< Mouse button released",229,N],[13,"SDL_MOUSEWHEEL","","< Mouse wheel motion",229,N],[13,"SDL_JOYAXISMOTION","","< Joystick axis motion",229,N],[13,"SDL_JOYBALLMOTION","","< Joystick trackball motion",229,N],[13,"SDL_JOYHATMOTION","","< Joystick hat position change",229,N],[13,"SDL_JOYBUTTONDOWN","","< Joystick button pressed",229,N],[13,"SDL_JOYBUTTONUP","","< Joystick button released",229,N],[13,"SDL_JOYDEVICEADDED","","< A new joystick has been inserted into the system",229,N],[13,"SDL_JOYDEVICEREMOVED","","< An opened joystick has been removed",229,N],[13,"SDL_CONTROLLERAXISMOTION","","< Game controller axis motion",229,N],[13,"SDL_CONTROLLERBUTTONDOWN","","< Game controller button pressed",229,N],[13,"SDL_CONTROLLERBUTTONUP","","< Game controller button released",229,N],[13,"SDL_CONTROLLERDEVICEADDED","","< A new Game controller has been inserted into the system",229,N],[13,"SDL_CONTROLLERDEVICEREMOVED","","< An opened Game controller has been removed",229,N],[13,"SDL_CONTROLLERDEVICEREMAPPED","","< The controller mapping was updated",229,N],[13,"SDL_FINGERDOWN","","",229,N],[13,"SDL_FINGERUP","","",229,N],[13,"SDL_FINGERMOTION","","",229,N],[13,"SDL_DOLLARGESTURE","","",229,N],[13,"SDL_DOLLARRECORD","","",229,N],[13,"SDL_MULTIGESTURE","","",229,N],[13,"SDL_CLIPBOARDUPDATE","","< The clipboard changed",229,N],[13,"SDL_DROPFILE","","< The system requests a file open",229,N],[13,"SDL_DROPTEXT","","< text/plain drag-and-drop event",229,N],[13,"SDL_DROPBEGIN","","< A new set of drops is beginning (NULL filename)",229,N],[13,"SDL_DROPCOMPLETE","","< Current set of drops is now complete (NULL filename)",229,N],[13,"SDL_AUDIODEVICEADDED","","< A new audio device is available",229,N],[13,"SDL_AUDIODEVICEREMOVED","","< An audio device has been removed.",229,N],[13,"SDL_SENSORUPDATE","","< A sensor was updated",229,N],[13,"SDL_RENDER_TARGETS_RESET","","< The render targets have been reset and their contents need to be updated",229,N],[13,"SDL_RENDER_DEVICE_RESET","","< The device has been reset and all textures need to be recreated",229,N],[13,"SDL_USEREVENT","","Events ::SDL_USEREVENT through ::SDL_LASTEVENT are for your use, and should be allocated with SDL_RegisterEvents()",229,N],[13,"SDL_LASTEVENT","","This last event is only for bounding internal arrays",229,N],[4,"SDL_eventaction","","",N,N],[13,"SDL_ADDEVENT","","",230,N],[13,"SDL_PEEKEVENT","","",230,N],[13,"SDL_GETEVENT","","",230,N],[4,"SDL_HintPriority","","\\brief  An enumeration of hint priorities",N,N],[13,"SDL_HINT_DEFAULT","","",231,N],[13,"SDL_HINT_NORMAL","","",231,N],[13,"SDL_HINT_OVERRIDE","","",231,N],[4,"_bindgen_ty_8","","\\brief The predefined log categories",N,N],[13,"SDL_LOG_CATEGORY_APPLICATION","","",232,N],[13,"SDL_LOG_CATEGORY_ERROR","","",232,N],[13,"SDL_LOG_CATEGORY_ASSERT","","",232,N],[13,"SDL_LOG_CATEGORY_SYSTEM","","",232,N],[13,"SDL_LOG_CATEGORY_AUDIO","","",232,N],[13,"SDL_LOG_CATEGORY_VIDEO","","",232,N],[13,"SDL_LOG_CATEGORY_RENDER","","",232,N],[13,"SDL_LOG_CATEGORY_INPUT","","",232,N],[13,"SDL_LOG_CATEGORY_TEST","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED1","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED2","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED3","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED4","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED5","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED6","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED7","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED8","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED9","","",232,N],[13,"SDL_LOG_CATEGORY_RESERVED10","","",232,N],[13,"SDL_LOG_CATEGORY_CUSTOM","","",232,N],[4,"SDL_LogPriority","","\\brief The predefined log priorities",N,N],[13,"SDL_LOG_PRIORITY_VERBOSE","","",233,N],[13,"SDL_LOG_PRIORITY_DEBUG","","",233,N],[13,"SDL_LOG_PRIORITY_INFO","","",233,N],[13,"SDL_LOG_PRIORITY_WARN","","",233,N],[13,"SDL_LOG_PRIORITY_ERROR","","",233,N],[13,"SDL_LOG_PRIORITY_CRITICAL","","",233,N],[13,"SDL_NUM_LOG_PRIORITIES","","",233,N],[4,"SDL_MessageBoxFlags","","\\brief SDL_MessageBox flags. If supported will display warning icon, etc.",N,N],[13,"SDL_MESSAGEBOX_ERROR","","< error dialog",234,N],[13,"SDL_MESSAGEBOX_WARNING","","< warning dialog",234,N],[13,"SDL_MESSAGEBOX_INFORMATION","","< informational dialog",234,N],[4,"SDL_MessageBoxButtonFlags","","\\brief Flags for SDL_MessageBoxButtonData.",N,N],[13,"SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","","< Marks the default button when return is hit",235,N],[13,"SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","","< Marks the default button when escape is hit",235,N],[4,"SDL_MessageBoxColorType","","",N,N],[13,"SDL_MESSAGEBOX_COLOR_BACKGROUND","","",236,N],[13,"SDL_MESSAGEBOX_COLOR_TEXT","","",236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","","",236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","","",236,N],[13,"SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","","",236,N],[13,"SDL_MESSAGEBOX_COLOR_MAX","","",236,N],[4,"SDL_PowerState","","\\brief The basic state for the system's power supply.",N,N],[13,"SDL_POWERSTATE_UNKNOWN","","< cannot determine power status",237,N],[13,"SDL_POWERSTATE_ON_BATTERY","","< Not plugged in, running on the battery",237,N],[13,"SDL_POWERSTATE_NO_BATTERY","","< Plugged in, no battery available",237,N],[13,"SDL_POWERSTATE_CHARGING","","< Plugged in, charging battery",237,N],[13,"SDL_POWERSTATE_CHARGED","","< Plugged in, battery charged",237,N],[4,"SDL_RendererFlags","","\\brief Flags used when creating a rendering context",N,N],[13,"SDL_RENDERER_SOFTWARE","","< The renderer is a software fallback",238,N],[13,"SDL_RENDERER_ACCELERATED","","< The renderer uses hardware acceleration",238,N],[13,"SDL_RENDERER_PRESENTVSYNC","","< Present is synchronized with the refresh rate",238,N],[13,"SDL_RENDERER_TARGETTEXTURE","","< The renderer supports rendering to texture",238,N],[4,"SDL_TextureAccess","","\\brief The access pattern allowed for a texture.",N,N],[13,"SDL_TEXTUREACCESS_STATIC","","< Changes rarely, not lockable",239,N],[13,"SDL_TEXTUREACCESS_STREAMING","","< Changes frequently, lockable",239,N],[13,"SDL_TEXTUREACCESS_TARGET","","< Texture can be used as a render target",239,N],[4,"SDL_TextureModulate","","\\brief The texture channel modulation used in SDL_RenderCopy().",N,N],[13,"SDL_TEXTUREMODULATE_NONE","","< No modulation",240,N],[13,"SDL_TEXTUREMODULATE_COLOR","","< srcC = srcC * color",240,N],[13,"SDL_TEXTUREMODULATE_ALPHA","","< srcA = srcA * alpha",240,N],[4,"SDL_RendererFlip","","\\brief Flip constants for SDL_RenderCopyEx",N,N],[13,"SDL_FLIP_NONE","","< Do not flip",241,N],[13,"SDL_FLIP_HORIZONTAL","","< flip horizontally",241,N],[13,"SDL_FLIP_VERTICAL","","< flip vertically",241,N],[4,"SDL_SensorType","","",N,N],[13,"SDL_SENSOR_INVALID","","< Returned for an invalid sensor",242,N],[13,"SDL_SENSOR_UNKNOWN","","< Unknown sensor type",242,N],[13,"SDL_SENSOR_ACCEL","","< Accelerometer",242,N],[13,"SDL_SENSOR_GYRO","","< Gyroscope",242,N],[4,"WindowShapeMode","","\\brief An enum denoting the specific type of contents present in an SDL_WindowShapeParams union.",N,N],[13,"ShapeModeDefault","","\\brief The default mode, a binarized alpha cutoff of 1.",243,N],[13,"ShapeModeBinarizeAlpha","","\\brief A binarized alpha cutoff with a given integer value.",243,N],[13,"ShapeModeReverseBinarizeAlpha","","\\brief A binarized alpha cutoff with a given integer value, but with the opposite comparison.",243,N],[13,"ShapeModeColorKey","","\\brief A color key is applied.",243,N],[4,"XOrientation","","",N,N],[13,"XOMOrientation_LTR_TTB","","",244,N],[13,"XOMOrientation_RTL_TTB","","",244,N],[13,"XOMOrientation_TTB_LTR","","",244,N],[13,"XOMOrientation_TTB_RTL","","",244,N],[13,"XOMOrientation_Context","","",244,N],[4,"XIMCaretDirection","","",N,N],[13,"XIMForwardChar","","",245,N],[13,"XIMBackwardChar","","",245,N],[13,"XIMForwardWord","","",245,N],[13,"XIMBackwardWord","","",245,N],[13,"XIMCaretUp","","",245,N],[13,"XIMCaretDown","","",245,N],[13,"XIMNextLine","","",245,N],[13,"XIMPreviousLine","","",245,N],[13,"XIMLineStart","","",245,N],[13,"XIMLineEnd","","",245,N],[13,"XIMAbsolutePosition","","",245,N],[13,"XIMDontChange","","",245,N],[4,"XIMCaretStyle","","",N,N],[13,"XIMIsInvisible","","",246,N],[13,"XIMIsPrimary","","",246,N],[13,"XIMIsSecondary","","",246,N],[4,"XIMStatusDataType","","",N,N],[13,"XIMTextType","","",247,N],[13,"XIMBitmapType","","",247,N],[4,"SDL_SYSWM_TYPE","","These are the various supported windowing subsystems",N,N],[13,"SDL_SYSWM_UNKNOWN","","",248,N],[13,"SDL_SYSWM_WINDOWS","","",248,N],[13,"SDL_SYSWM_X11","","",248,N],[13,"SDL_SYSWM_DIRECTFB","","",248,N],[13,"SDL_SYSWM_COCOA","","",248,N],[13,"SDL_SYSWM_UIKIT","","",248,N],[13,"SDL_SYSWM_WAYLAND","","",248,N],[13,"SDL_SYSWM_MIR","","",248,N],[13,"SDL_SYSWM_WINRT","","",248,N],[13,"SDL_SYSWM_ANDROID","","",248,N],[13,"SDL_SYSWM_VIVANTE","","",248,N],[13,"SDL_SYSWM_OS2","","",248,N],[5,"SDL_GetPlatform","","\\brief Gets the name of the platform.",N,N],[5,"SDL_malloc","","",N,N],[5,"SDL_calloc","","",N,N],[5,"SDL_realloc","","",N,N],[5,"SDL_free","","",N,N],[5,"SDL_GetMemoryFunctions","","\\brief Get the current set of SDL memory functions",N,N],[5,"SDL_SetMemoryFunctions","","\\brief Replace SDL's memory allocation functions with a custom set",N,N],[5,"SDL_GetNumAllocations","","\\brief Get the number of outstanding (unfreed) allocations",N,N],[5,"SDL_getenv","","",N,N],[5,"SDL_setenv","","",N,N],[5,"SDL_qsort","","",N,N],[5,"SDL_abs","","",N,N],[5,"SDL_isdigit","","",N,N],[5,"SDL_isspace","","",N,N],[5,"SDL_toupper","","",N,N],[5,"SDL_tolower","","",N,N],[5,"SDL_memset","","",N,N],[5,"SDL_memcpy","","",N,N],[5,"SDL_memmove","","",N,N],[5,"SDL_memcmp","","",N,N],[5,"SDL_wcsdup","","",N,N],[5,"SDL_wcslen","","",N,N],[5,"SDL_wcslcpy","","",N,N],[5,"SDL_wcslcat","","",N,N],[5,"SDL_wcscmp","","",N,N],[5,"SDL_strlen","","",N,N],[5,"SDL_strlcpy","","",N,N],[5,"SDL_utf8strlcpy","","",N,N],[5,"SDL_strlcat","","",N,N],[5,"SDL_strdup","","",N,N],[5,"SDL_strrev","","",N,N],[5,"SDL_strupr","","",N,N],[5,"SDL_strlwr","","",N,N],[5,"SDL_strchr","","",N,N],[5,"SDL_strrchr","","",N,N],[5,"SDL_strstr","","",N,N],[5,"SDL_utf8strlen","","",N,N],[5,"SDL_itoa","","",N,N],[5,"SDL_uitoa","","",N,N],[5,"SDL_ltoa","","",N,N],[5,"SDL_ultoa","","",N,N],[5,"SDL_lltoa","","",N,N],[5,"SDL_ulltoa","","",N,N],[5,"SDL_atoi","","",N,N],[5,"SDL_atof","","",N,N],[5,"SDL_strtol","","",N,N],[5,"SDL_strtoul","","",N,N],[5,"SDL_strtoll","","",N,N],[5,"SDL_strtoull","","",N,N],[5,"SDL_strtod","","",N,N],[5,"SDL_strcmp","","",N,N],[5,"SDL_strncmp","","",N,N],[5,"SDL_strcasecmp","","",N,N],[5,"SDL_strncasecmp","","",N,N],[5,"SDL_sscanf","","",N,N],[5,"SDL_vsscanf","","",N,N],[5,"SDL_snprintf","","",N,N],[5,"SDL_vsnprintf","","",N,N],[5,"SDL_acos","","",N,N],[5,"SDL_acosf","","",N,N],[5,"SDL_asin","","",N,N],[5,"SDL_asinf","","",N,N],[5,"SDL_atan","","",N,N],[5,"SDL_atanf","","",N,N],[5,"SDL_atan2","","",N,N],[5,"SDL_atan2f","","",N,N],[5,"SDL_ceil","","",N,N],[5,"SDL_ceilf","","",N,N],[5,"SDL_copysign","","",N,N],[5,"SDL_copysignf","","",N,N],[5,"SDL_cos","","",N,N],[5,"SDL_cosf","","",N,N],[5,"SDL_exp","","",N,N],[5,"SDL_expf","","",N,N],[5,"SDL_fabs","","",N,N],[5,"SDL_fabsf","","",N,N],[5,"SDL_floor","","",N,N],[5,"SDL_floorf","","",N,N],[5,"SDL_fmod","","",N,N],[5,"SDL_fmodf","","",N,N],[5,"SDL_log","","",N,N],[5,"SDL_logf","","",N,N],[5,"SDL_log10","","",N,N],[5,"SDL_log10f","","",N,N],[5,"SDL_pow","","",N,N],[5,"SDL_powf","","",N,N],[5,"SDL_scalbn","","",N,N],[5,"SDL_scalbnf","","",N,N],[5,"SDL_sin","","",N,N],[5,"SDL_sinf","","",N,N],[5,"SDL_sqrt","","",N,N],[5,"SDL_sqrtf","","",N,N],[5,"SDL_tan","","",N,N],[5,"SDL_tanf","","",N,N],[5,"SDL_iconv_open","","",N,N],[5,"SDL_iconv_close","","",N,N],[5,"SDL_iconv","","",N,N],[5,"SDL_iconv_string","","This function converts a string between encodings in one pass, returning a string that must be freed with SDL_free() or NULL on error.",N,N],[5,"SDL_main","","The prototype for the application's main() function",N,N],[5,"SDL_SetMainReady","","This is called by the real SDL main function to let the rest of the library know that initialization was done properly.",N,N],[5,"SDL_ReportAssertion","","",N,N],[5,"SDL_SetAssertionHandler","","\\brief Set an application-defined assertion handler.",N,N],[5,"SDL_GetDefaultAssertionHandler","","\\brief Get the default assertion handler.",N,N],[5,"SDL_GetAssertionHandler","","\\brief Get the current assertion handler.",N,N],[5,"SDL_GetAssertionReport","","\\brief Get a list of all assertion failures.",N,N],[5,"SDL_ResetAssertionReport","","\\brief Reset the list of all assertion failures.",N,N],[5,"SDL_AtomicTryLock","","\\brief Try to lock a spin lock by setting it to a non-zero value.",N,N],[5,"SDL_AtomicLock","","\\brief Lock a spin lock by setting it to a non-zero value.",N,N],[5,"SDL_AtomicUnlock","","\\brief Unlock a spin lock by setting it to 0. Always returns immediately",N,N],[5,"SDL_MemoryBarrierReleaseFunction","","Memory barriers are designed to prevent reads and writes from being reordered by the compiler and being seen out of order on multi-core CPUs.",N,N],[5,"SDL_MemoryBarrierAcquireFunction","","",N,N],[5,"SDL_AtomicCAS","","\\brief Set an atomic variable to a new value if it is currently an old value.",N,N],[5,"SDL_AtomicSet","","\\brief Set an atomic variable to a value.",N,N],[5,"SDL_AtomicGet","","\\brief Get the value of an atomic variable",N,N],[5,"SDL_AtomicAdd","","\\brief Add to an atomic variable.",N,N],[5,"SDL_AtomicCASPtr","","\\brief Set a pointer to a new value if it is currently an old value.",N,N],[5,"SDL_AtomicSetPtr","","\\brief Set a pointer to a value atomically.",N,N],[5,"SDL_AtomicGetPtr","","\\brief Get the value of a pointer atomically.",N,N],[5,"SDL_SetError","","",N,N],[5,"SDL_GetError","","",N,N],[5,"SDL_ClearError","","",N,N],[5,"SDL_Error","","",N,N],[5,"SDL_CreateMutex","","Create a mutex, initialized unlocked.",N,N],[5,"SDL_LockMutex","","",N,N],[5,"SDL_TryLockMutex","","Try to lock the mutex",N,N],[5,"SDL_UnlockMutex","","",N,N],[5,"SDL_DestroyMutex","","Destroy a mutex.",N,N],[5,"SDL_CreateSemaphore","","Create a semaphore, initialized with value, returns NULL on failure.",N,N],[5,"SDL_DestroySemaphore","","Destroy a semaphore.",N,N],[5,"SDL_SemWait","","This function suspends the calling thread until the semaphore pointed to by \\c sem has a positive count. It then atomically decreases the semaphore count.",N,N],[5,"SDL_SemTryWait","","Non-blocking variant of SDL_SemWait().",N,N],[5,"SDL_SemWaitTimeout","","Variant of SDL_SemWait() with a timeout in milliseconds.",N,N],[5,"SDL_SemPost","","Atomically increases the semaphore's count (not blocking).",N,N],[5,"SDL_SemValue","","Returns the current count of the semaphore.",N,N],[5,"SDL_CreateCond","","Create a condition variable.",N,N],[5,"SDL_DestroyCond","","Destroy a condition variable.",N,N],[5,"SDL_CondSignal","","Restart one of the threads that are waiting on the condition variable.",N,N],[5,"SDL_CondBroadcast","","Restart all threads that are waiting on the condition variable.",N,N],[5,"SDL_CondWait","","Wait on the condition variable, unlocking the provided mutex.",N,N],[5,"SDL_CondWaitTimeout","","Waits for at most \\c ms milliseconds, and returns 0 if the condition variable is signaled, ::SDL_MUTEX_TIMEDOUT if the condition is not signaled in the allotted time, and -1 on error.",N,N],[5,"SDL_CreateThread","","Create a thread with a default stack size.",N,N],[5,"SDL_CreateThreadWithStackSize","","Create a thread.",N,N],[5,"SDL_GetThreadName","","Get the thread name, as it was specified in SDL_CreateThread(). This function returns a pointer to a UTF-8 string that names the specified thread, or NULL if it doesn't have a name. This is internal memory, not to be free()'d by the caller, and remains valid until the specified thread is cleaned up by SDL_WaitThread().",N,N],[5,"SDL_ThreadID","","Get the thread identifier for the current thread.",N,N],[5,"SDL_GetThreadID","","Get the thread identifier for the specified thread.",N,N],[5,"SDL_SetThreadPriority","","Set the priority for the current thread",N,N],[5,"SDL_WaitThread","","Wait for a thread to finish. Threads that haven't been detached will remain (as a \"zombie\") until this function cleans them up. Not doing so is a resource leak.",N,N],[5,"SDL_DetachThread","","A thread may be \"detached\" to signify that it should not remain until another thread has called SDL_WaitThread() on it. Detaching a thread is useful for long-running threads that nothing needs to synchronize with or further manage. When a detached thread is done, it simply goes away.",N,N],[5,"SDL_TLSCreate","","\\brief Create an identifier that is globally visible to all threads but refers to data that is thread-specific.",N,N],[5,"SDL_TLSGet","","\\brief Get the value associated with a thread local storage ID for the current thread.",N,N],[5,"SDL_TLSSet","","\\brief Set the value associated with a thread local storage ID for the current thread.",N,N],[5,"SDL_RWFromFile","","",N,N],[5,"SDL_RWFromFP","","",N,N],[5,"SDL_RWFromMem","","",N,N],[5,"SDL_RWFromConstMem","","",N,N],[5,"SDL_AllocRW","","",N,N],[5,"SDL_FreeRW","","",N,N],[5,"SDL_LoadFile_RW","","Load all the data from an SDL data stream.",N,N],[5,"SDL_ReadU8","","",N,N],[5,"SDL_ReadLE16","","",N,N],[5,"SDL_ReadBE16","","",N,N],[5,"SDL_ReadLE32","","",N,N],[5,"SDL_ReadBE32","","",N,N],[5,"SDL_ReadLE64","","",N,N],[5,"SDL_ReadBE64","","",N,N],[5,"SDL_WriteU8","","",N,N],[5,"SDL_WriteLE16","","",N,N],[5,"SDL_WriteBE16","","",N,N],[5,"SDL_WriteLE32","","",N,N],[5,"SDL_WriteBE32","","",N,N],[5,"SDL_WriteLE64","","",N,N],[5,"SDL_WriteBE64","","",N,N],[5,"SDL_GetNumAudioDrivers","","",N,N],[5,"SDL_GetAudioDriver","","",N,N],[5,"SDL_AudioInit","","",N,N],[5,"SDL_AudioQuit","","",N,N],[5,"SDL_GetCurrentAudioDriver","","This function returns the name of the current audio driver, or NULL if no driver has been initialized.",N,N],[5,"SDL_OpenAudio","","This function opens the audio device with the desired parameters, and returns 0 if successful, placing the actual hardware parameters in the structure pointed to by \\c obtained.  If \\c obtained is NULL, the audio data passed to the callback function will be guaranteed to be in the requested format, and will be automatically converted to the hardware audio format if necessary.  This function returns -1 if it failed to open the audio device, or couldn't set up the audio thread.",N,N],[5,"SDL_GetNumAudioDevices","","Get the number of available devices exposed by the current driver. Only valid after a successfully initializing the audio subsystem. Returns -1 if an explicit list of devices can't be determined; this is not an error. For example, if SDL is set up to talk to a remote audio server, it can't list every one available on the Internet, but it will still allow a specific host to be specified to SDL_OpenAudioDevice().",N,N],[5,"SDL_GetAudioDeviceName","","Get the human-readable name of a specific audio device. Must be a value between 0 and (number of audio devices-1). Only valid after a successfully initializing the audio subsystem. The values returned by this function reflect the latest call to SDL_GetNumAudioDevices(); recall that function to redetect available hardware.",N,N],[5,"SDL_OpenAudioDevice","","Open a specific audio device. Passing in a device name of NULL requests the most reasonable default (and is equivalent to calling SDL_OpenAudio()).",N,N],[5,"SDL_GetAudioStatus","","",N,N],[5,"SDL_GetAudioDeviceStatus","","",N,N],[5,"SDL_PauseAudio","","",N,N],[5,"SDL_PauseAudioDevice","","",N,N],[5,"SDL_LoadWAV_RW","","This function loads a WAVE from the data source, automatically freeing that source if \\c freesrc is non-zero.  For example, to load a WAVE file, you could do: \\code     SDL_LoadWAV_RW(SDL_RWFromFile(\"sample.wav\", \"rb\"), 1, ...); \\endcode",N,N],[5,"SDL_FreeWAV","","This function frees data previously allocated with SDL_LoadWAV_RW()",N,N],[5,"SDL_BuildAudioCVT","","This function takes a source format and rate and a destination format and rate, and initializes the \\c cvt structure with information needed by SDL_ConvertAudio() to convert a buffer of audio data from one format to the other. An unsupported format causes an error and -1 will be returned.",N,N],[5,"SDL_ConvertAudio","","Once you have initialized the \\c cvt structure using SDL_BuildAudioCVT(), created an audio buffer \\c cvt->buf, and filled it with \\c cvt->len bytes of audio data in the source format, this function will convert it in-place to the desired format.",N,N],[5,"SDL_NewAudioStream","","Create a new audio stream",N,N],[5,"SDL_AudioStreamPut","","Add data to be converted/resampled to the stream",N,N],[5,"SDL_AudioStreamGet","","Get converted/resampled data from the stream",N,N],[5,"SDL_AudioStreamAvailable","","Get the number of converted/resampled bytes available. The stream may be buffering data behind the scenes until it has enough to resample correctly, so this number might be lower than what you expect, or even be zero. Add more data or flush the stream if you need the data now.",N,N],[5,"SDL_AudioStreamFlush","","Tell the stream that you're done sending data, and anything being buffered  should be converted/resampled and made available immediately.",N,N],[5,"SDL_AudioStreamClear","","Clear any pending data in the stream without converting it",N,N],[5,"SDL_FreeAudioStream","","Free an audio stream",N,N],[5,"SDL_MixAudio","","This takes two audio buffers of the playing audio format and mixes them, performing addition, volume adjustment, and overflow clipping. The volume ranges from 0 - 128, and should be set to ::SDL_MIX_MAXVOLUME for full audio volume.  Note this does not change hardware volume. This is provided for convenience -- you can mix your own audio data.",N,N],[5,"SDL_MixAudioFormat","","This works like SDL_MixAudio(), but you specify the audio format instead of using the format of audio device 1. Thus it can be used when no audio device is open at all.",N,N],[5,"SDL_QueueAudio","","Queue more audio on non-callback devices.",N,N],[5,"SDL_DequeueAudio","","Dequeue more audio on non-callback devices.",N,N],[5,"SDL_GetQueuedAudioSize","","Get the number of bytes of still-queued audio.",N,N],[5,"SDL_ClearQueuedAudio","","Drop any queued audio data. For playback devices, this is any queued data still waiting to be submitted to the hardware. For capture devices, this is any data that was queued by the device that hasn't yet been dequeued by the application.",N,N],[5,"SDL_LockAudio","","",N,N],[5,"SDL_LockAudioDevice","","",N,N],[5,"SDL_UnlockAudio","","",N,N],[5,"SDL_UnlockAudioDevice","","",N,N],[5,"SDL_CloseAudio","","This function shuts down audio processing and closes the audio device.",N,N],[5,"SDL_CloseAudioDevice","","",N,N],[5,"SDL_SetClipboardText","","\\brief Put UTF-8 text into the clipboard",N,N],[5,"SDL_GetClipboardText","","\\brief Get UTF-8 text from the clipboard, which must be freed with SDL_free()",N,N],[5,"SDL_HasClipboardText","","\\brief Returns a flag indicating whether the clipboard exists and contains a text string that is non-empty",N,N],[5,"__ctype_get_mb_cur_max","","",N,N],[5,"atof","","",N,N],[5,"atoi","","",N,N],[5,"atol","","",N,N],[5,"atoll","","",N,N],[5,"strtod","","",N,N],[5,"strtof","","",N,N],[5,"strtold","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"strtoq","","",N,N],[5,"strtouq","","",N,N],[5,"strtoll","","",N,N],[5,"strtoull","","",N,N],[5,"l64a","","",N,N],[5,"a64l","","",N,N],[5,"select","","",N,N],[5,"pselect","","",N,N],[5,"random","","",N,N],[5,"srandom","","",N,N],[5,"initstate","","",N,N],[5,"setstate","","",N,N],[5,"random_r","","",N,N],[5,"srandom_r","","",N,N],[5,"initstate_r","","",N,N],[5,"setstate_r","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"rand_r","","",N,N],[5,"drand48","","",N,N],[5,"erand48","","",N,N],[5,"lrand48","","",N,N],[5,"nrand48","","",N,N],[5,"mrand48","","",N,N],[5,"jrand48","","",N,N],[5,"srand48","","",N,N],[5,"seed48","","",N,N],[5,"lcong48","","",N,N],[5,"drand48_r","","",N,N],[5,"erand48_r","","",N,N],[5,"lrand48_r","","",N,N],[5,"nrand48_r","","",N,N],[5,"mrand48_r","","",N,N],[5,"jrand48_r","","",N,N],[5,"srand48_r","","",N,N],[5,"seed48_r","","",N,N],[5,"lcong48_r","","",N,N],[5,"malloc","","",N,N],[5,"calloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"alloca","","",N,N],[5,"valloc","","",N,N],[5,"posix_memalign","","",N,N],[5,"aligned_alloc","","",N,N],[5,"abort","","",N,N],[5,"atexit","","",N,N],[5,"at_quick_exit","","",N,N],[5,"on_exit","","",N,N],[5,"exit","","",N,N],[5,"quick_exit","","",N,N],[5,"_Exit","","",N,N],[5,"getenv","","",N,N],[5,"putenv","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"clearenv","","",N,N],[5,"mktemp","","",N,N],[5,"mkstemp","","",N,N],[5,"mkstemps","","",N,N],[5,"mkdtemp","","",N,N],[5,"system","","",N,N],[5,"realpath","","",N,N],[5,"bsearch","","",N,N],[5,"qsort","","",N,N],[5,"abs","","",N,N],[5,"labs","","",N,N],[5,"llabs","","",N,N],[5,"div","","",N,N],[5,"ldiv","","",N,N],[5,"lldiv","","",N,N],[5,"ecvt","","",N,N],[5,"fcvt","","",N,N],[5,"gcvt","","",N,N],[5,"qecvt","","",N,N],[5,"qfcvt","","",N,N],[5,"qgcvt","","",N,N],[5,"ecvt_r","","",N,N],[5,"fcvt_r","","",N,N],[5,"qecvt_r","","",N,N],[5,"qfcvt_r","","",N,N],[5,"mblen","","",N,N],[5,"mbtowc","","",N,N],[5,"wctomb","","",N,N],[5,"mbstowcs","","",N,N],[5,"wcstombs","","",N,N],[5,"rpmatch","","",N,N],[5,"getsubopt","","",N,N],[5,"getloadavg","","",N,N],[5,"_mm_sfence","","",N,N],[5,"_mm_getcsr","","",N,N],[5,"_mm_setcsr","","",N,N],[5,"_mm_clflush","","",N,N],[5,"_mm_lfence","","",N,N],[5,"_mm_mfence","","",N,N],[5,"_mm_pause","","",N,N],[5,"SDL_GetCPUCount","","This function returns the number of CPU cores available.",N,N],[5,"SDL_GetCPUCacheLineSize","","This function returns the L1 cache line size of the CPU",N,N],[5,"SDL_HasRDTSC","","This function returns true if the CPU has the RDTSC instruction.",N,N],[5,"SDL_HasAltiVec","","This function returns true if the CPU has AltiVec features.",N,N],[5,"SDL_HasMMX","","This function returns true if the CPU has MMX features.",N,N],[5,"SDL_Has3DNow","","This function returns true if the CPU has 3DNow! features.",N,N],[5,"SDL_HasSSE","","This function returns true if the CPU has SSE features.",N,N],[5,"SDL_HasSSE2","","This function returns true if the CPU has SSE2 features.",N,N],[5,"SDL_HasSSE3","","This function returns true if the CPU has SSE3 features.",N,N],[5,"SDL_HasSSE41","","This function returns true if the CPU has SSE4.1 features.",N,N],[5,"SDL_HasSSE42","","This function returns true if the CPU has SSE4.2 features.",N,N],[5,"SDL_HasAVX","","This function returns true if the CPU has AVX features.",N,N],[5,"SDL_HasAVX2","","This function returns true if the CPU has AVX2 features.",N,N],[5,"SDL_HasAVX512F","","This function returns true if the CPU has AVX-512F (foundation) features.",N,N],[5,"SDL_HasNEON","","This function returns true if the CPU has NEON (ARM SIMD) features.",N,N],[5,"SDL_GetSystemRAM","","This function returns the amount of RAM configured in the system, in MB.",N,N],[5,"SDL_GetPixelFormatName","","\\brief Get the human readable name of a pixel format",N,N],[5,"SDL_PixelFormatEnumToMasks","","\\brief Convert one of the enumerated pixel formats to a bpp and RGBA masks.",N,N],[5,"SDL_MasksToPixelFormatEnum","","\\brief Convert a bpp and RGBA masks to an enumerated pixel format.",N,N],[5,"SDL_AllocFormat","","\\brief Create an SDL_PixelFormat structure from a pixel format enum.",N,N],[5,"SDL_FreeFormat","","\\brief Free an SDL_PixelFormat structure.",N,N],[5,"SDL_AllocPalette","","\\brief Create a palette structure with the specified number of color        entries.",N,N],[5,"SDL_SetPixelFormatPalette","","\\brief Set the palette for a pixel format structure.",N,N],[5,"SDL_SetPaletteColors","","\\brief Set a range of colors in a palette.",N,N],[5,"SDL_FreePalette","","\\brief Free a palette created with SDL_AllocPalette().",N,N],[5,"SDL_MapRGB","","\\brief Maps an RGB triple to an opaque pixel value for a given pixel format.",N,N],[5,"SDL_MapRGBA","","\\brief Maps an RGBA quadruple to a pixel value for a given pixel format.",N,N],[5,"SDL_GetRGB","","\\brief Get the RGB components from a pixel of the specified format.",N,N],[5,"SDL_GetRGBA","","\\brief Get the RGBA components from a pixel of the specified format.",N,N],[5,"SDL_CalculateGammaRamp","","\\brief Calculate a 256 entry gamma ramp for a gamma value.",N,N],[5,"SDL_HasIntersection","","\\brief Determine whether two rectangles intersect.",N,N],[5,"SDL_IntersectRect","","\\brief Calculate the intersection of two rectangles.",N,N],[5,"SDL_UnionRect","","\\brief Calculate the union of two rectangles.",N,N],[5,"SDL_EnclosePoints","","\\brief Calculate a minimal rectangle enclosing a set of points",N,N],[5,"SDL_IntersectRectAndLine","","\\brief Calculate the intersection of a rectangle and line segment.",N,N],[5,"SDL_ComposeCustomBlendMode","","\\brief Create a custom blend mode, which may or may not be supported by a given renderer",N,N],[5,"SDL_CreateRGBSurface","","Allocate and free an RGB surface.",N,N],[5,"SDL_CreateRGBSurfaceWithFormat","","",N,N],[5,"SDL_CreateRGBSurfaceFrom","","",N,N],[5,"SDL_CreateRGBSurfaceWithFormatFrom","","",N,N],[5,"SDL_FreeSurface","","",N,N],[5,"SDL_SetSurfacePalette","","\\brief Set the palette used by a surface.",N,N],[5,"SDL_LockSurface","","\\brief Sets up a surface for directly accessing the pixels.",N,N],[5,"SDL_UnlockSurface","","\\sa SDL_LockSurface()",N,N],[5,"SDL_LoadBMP_RW","","Load a surface from a seekable SDL data stream (memory or file).",N,N],[5,"SDL_SaveBMP_RW","","Save a surface to a seekable SDL data stream (memory or file).",N,N],[5,"SDL_SetSurfaceRLE","","\\brief Sets the RLE acceleration hint for a surface.",N,N],[5,"SDL_SetColorKey","","\\brief Sets the color key (transparent pixel) in a blittable surface.",N,N],[5,"SDL_HasColorKey","","\\brief Returns whether the surface has a color key",N,N],[5,"SDL_GetColorKey","","\\brief Gets the color key (transparent pixel) in a blittable surface.",N,N],[5,"SDL_SetSurfaceColorMod","","\\brief Set an additional color value used in blit operations.",N,N],[5,"SDL_GetSurfaceColorMod","","\\brief Get the additional color value used in blit operations.",N,N],[5,"SDL_SetSurfaceAlphaMod","","\\brief Set an additional alpha value used in blit operations.",N,N],[5,"SDL_GetSurfaceAlphaMod","","\\brief Get the additional alpha value used in blit operations.",N,N],[5,"SDL_SetSurfaceBlendMode","","\\brief Set the blend mode used for blit operations.",N,N],[5,"SDL_GetSurfaceBlendMode","","\\brief Get the blend mode used for blit operations.",N,N],[5,"SDL_SetClipRect","","Sets the clipping rectangle for the destination surface in a blit.",N,N],[5,"SDL_GetClipRect","","Gets the clipping rectangle for the destination surface in a blit.",N,N],[5,"SDL_DuplicateSurface","","",N,N],[5,"SDL_ConvertSurface","","Creates a new surface of the specified format, and then copies and maps the given surface to it so the blit of the converted surface will be as fast as possible.  If this function fails, it returns NULL.",N,N],[5,"SDL_ConvertSurfaceFormat","","",N,N],[5,"SDL_ConvertPixels","","\\brief Copy a block of pixels of one format to another format",N,N],[5,"SDL_FillRect","","Performs a fast fill of the given rectangle with \\c color.",N,N],[5,"SDL_FillRects","","",N,N],[5,"SDL_UpperBlit","","This is the public blit function, SDL_BlitSurface(), and it performs rectangle validation and clipping before passing it to SDL_LowerBlit()",N,N],[5,"SDL_LowerBlit","","This is a semi-private blit function and it performs low-level surface blitting only.",N,N],[5,"SDL_SoftStretch","","\\brief Perform a fast, low quality, stretch blit between two surfaces of the        same pixel format.",N,N],[5,"SDL_UpperBlitScaled","","This is the public scaled blit function, SDL_BlitScaled(), and it performs rectangle validation and clipping before passing it to SDL_LowerBlitScaled()",N,N],[5,"SDL_LowerBlitScaled","","This is a semi-private blit function and it performs low-level surface scaled blitting only.",N,N],[5,"SDL_SetYUVConversionMode","","\\brief Set the YUV conversion mode",N,N],[5,"SDL_GetYUVConversionMode","","\\brief Get the YUV conversion mode",N,N],[5,"SDL_GetYUVConversionModeForResolution","","\\brief Get the YUV conversion mode, returning the correct mode for the resolution when the current conversion mode is SDL_YUV_CONVERSION_AUTOMATIC",N,N],[5,"SDL_GetNumVideoDrivers","","\\brief Get the number of video drivers compiled into SDL",N,N],[5,"SDL_GetVideoDriver","","\\brief Get the name of a built in video driver.",N,N],[5,"SDL_VideoInit","","\\brief Initialize the video subsystem, optionally specifying a video driver.",N,N],[5,"SDL_VideoQuit","","\\brief Shuts down the video subsystem.",N,N],[5,"SDL_GetCurrentVideoDriver","","\\brief Returns the name of the currently initialized video driver.",N,N],[5,"SDL_GetNumVideoDisplays","","\\brief Returns the number of available video displays.",N,N],[5,"SDL_GetDisplayName","","\\brief Get the name of a display in UTF-8 encoding",N,N],[5,"SDL_GetDisplayBounds","","\\brief Get the desktop area represented by a display, with the primary        display located at 0,0",N,N],[5,"SDL_GetDisplayUsableBounds","","\\brief Get the usable desktop area represented by a display, with the        primary display located at 0,0",N,N],[5,"SDL_GetDisplayDPI","","\\brief Get the dots/pixels-per-inch for a display",N,N],[5,"SDL_GetDisplayOrientation","","\\brief Get the orientation of a display",N,N],[5,"SDL_GetNumDisplayModes","","\\brief Returns the number of available display modes.",N,N],[5,"SDL_GetDisplayMode","","\\brief Fill in information about a specific display mode.",N,N],[5,"SDL_GetDesktopDisplayMode","","\\brief Fill in information about the desktop display mode.",N,N],[5,"SDL_GetCurrentDisplayMode","","\\brief Fill in information about the current display mode.",N,N],[5,"SDL_GetClosestDisplayMode","","\\brief Get the closest match to the requested display mode.",N,N],[5,"SDL_GetWindowDisplayIndex","","\\brief Get the display index associated with a window.",N,N],[5,"SDL_SetWindowDisplayMode","","\\brief Set the display mode used when a fullscreen window is visible.",N,N],[5,"SDL_GetWindowDisplayMode","","\\brief Fill in information about the display mode used when a fullscreen        window is visible.",N,N],[5,"SDL_GetWindowPixelFormat","","\\brief Get the pixel format associated with the window.",N,N],[5,"SDL_CreateWindow","","\\brief Create a window with the specified position, dimensions, and flags.",N,N],[5,"SDL_CreateWindowFrom","","\\brief Create an SDL window from an existing native window.",N,N],[5,"SDL_GetWindowID","","\\brief Get the numeric ID of a window, for logging purposes.",N,N],[5,"SDL_GetWindowFromID","","\\brief Get a window from a stored ID, or NULL if it doesn't exist.",N,N],[5,"SDL_GetWindowFlags","","\\brief Get the window flags.",N,N],[5,"SDL_SetWindowTitle","","\\brief Set the title of a window, in UTF-8 format.",N,N],[5,"SDL_GetWindowTitle","","\\brief Get the title of a window, in UTF-8 format.",N,N],[5,"SDL_SetWindowIcon","","\\brief Set the icon for a window.",N,N],[5,"SDL_SetWindowData","","\\brief Associate an arbitrary named pointer with a window.",N,N],[5,"SDL_GetWindowData","","\\brief Retrieve the data pointer associated with a window.",N,N],[5,"SDL_SetWindowPosition","","\\brief Set the position of a window.",N,N],[5,"SDL_GetWindowPosition","","\\brief Get the position of a window.",N,N],[5,"SDL_SetWindowSize","","\\brief Set the size of a window's client area.",N,N],[5,"SDL_GetWindowSize","","\\brief Get the size of a window's client area.",N,N],[5,"SDL_GetWindowBordersSize","","\\brief Get the size of a window's borders (decorations) around the client area.",N,N],[5,"SDL_SetWindowMinimumSize","","\\brief Set the minimum size of a window's client area.",N,N],[5,"SDL_GetWindowMinimumSize","","\\brief Get the minimum size of a window's client area.",N,N],[5,"SDL_SetWindowMaximumSize","","\\brief Set the maximum size of a window's client area.",N,N],[5,"SDL_GetWindowMaximumSize","","\\brief Get the maximum size of a window's client area.",N,N],[5,"SDL_SetWindowBordered","","\\brief Set the border state of a window.",N,N],[5,"SDL_SetWindowResizable","","\\brief Set the user-resizable state of a window.",N,N],[5,"SDL_ShowWindow","","\\brief Show a window.",N,N],[5,"SDL_HideWindow","","\\brief Hide a window.",N,N],[5,"SDL_RaiseWindow","","\\brief Raise a window above other windows and set the input focus.",N,N],[5,"SDL_MaximizeWindow","","\\brief Make a window as large as possible.",N,N],[5,"SDL_MinimizeWindow","","\\brief Minimize a window to an iconic representation.",N,N],[5,"SDL_RestoreWindow","","\\brief Restore the size and position of a minimized or maximized window.",N,N],[5,"SDL_SetWindowFullscreen","","\\brief Set a window's fullscreen state.",N,N],[5,"SDL_GetWindowSurface","","\\brief Get the SDL surface associated with the window.",N,N],[5,"SDL_UpdateWindowSurface","","\\brief Copy the window surface to the screen.",N,N],[5,"SDL_UpdateWindowSurfaceRects","","\\brief Copy a number of rectangles on the window surface to the screen.",N,N],[5,"SDL_SetWindowGrab","","\\brief Set a window's input grab mode.",N,N],[5,"SDL_GetWindowGrab","","\\brief Get a window's input grab mode.",N,N],[5,"SDL_GetGrabbedWindow","","\\brief Get the window that currently has an input grab enabled.",N,N],[5,"SDL_SetWindowBrightness","","\\brief Set the brightness (gamma correction) for a window.",N,N],[5,"SDL_GetWindowBrightness","","\\brief Get the brightness (gamma correction) for a window.",N,N],[5,"SDL_SetWindowOpacity","","\\brief Set the opacity for a window",N,N],[5,"SDL_GetWindowOpacity","","\\brief Get the opacity of a window.",N,N],[5,"SDL_SetWindowModalFor","","\\brief Sets the window as a modal for another window (TODO: reconsider this function and/or its name)",N,N],[5,"SDL_SetWindowInputFocus","","\\brief Explicitly sets input focus to the window.",N,N],[5,"SDL_SetWindowGammaRamp","","\\brief Set the gamma ramp for a window.",N,N],[5,"SDL_GetWindowGammaRamp","","\\brief Get the gamma ramp for a window.",N,N],[5,"SDL_SetWindowHitTest","","\\brief Provide a callback that decides if a window region has special properties.",N,N],[5,"SDL_DestroyWindow","","\\brief Destroy a window.",N,N],[5,"SDL_IsScreenSaverEnabled","","\\brief Returns whether the screensaver is currently enabled (default off).",N,N],[5,"SDL_EnableScreenSaver","","\\brief Allow the screen to be blanked by a screensaver",N,N],[5,"SDL_DisableScreenSaver","","\\brief Prevent the screen from being blanked by a screensaver",N,N],[5,"SDL_GL_LoadLibrary","","\\brief Dynamically load an OpenGL library.",N,N],[5,"SDL_GL_GetProcAddress","","\\brief Get the address of an OpenGL function.",N,N],[5,"SDL_GL_UnloadLibrary","","\\brief Unload the OpenGL library previously loaded by SDL_GL_LoadLibrary().",N,N],[5,"SDL_GL_ExtensionSupported","","\\brief Return true if an OpenGL extension is supported for the current context.",N,N],[5,"SDL_GL_ResetAttributes","","\\brief Reset all previously set OpenGL context attributes to their default values",N,N],[5,"SDL_GL_SetAttribute","","\\brief Set an OpenGL window attribute before window creation.",N,N],[5,"SDL_GL_GetAttribute","","\\brief Get the actual value for an attribute from the current context.",N,N],[5,"SDL_GL_CreateContext","","\\brief Create an OpenGL context for use with an OpenGL window, and make it        current.",N,N],[5,"SDL_GL_MakeCurrent","","\\brief Set up an OpenGL context for rendering into an OpenGL window.",N,N],[5,"SDL_GL_GetCurrentWindow","","\\brief Get the currently active OpenGL window.",N,N],[5,"SDL_GL_GetCurrentContext","","\\brief Get the currently active OpenGL context.",N,N],[5,"SDL_GL_GetDrawableSize","","\\brief Get the size of a window's underlying drawable in pixels (for use         with glViewport).",N,N],[5,"SDL_GL_SetSwapInterval","","\\brief Set the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_GetSwapInterval","","\\brief Get the swap interval for the current OpenGL context.",N,N],[5,"SDL_GL_SwapWindow","","\\brief Swap the OpenGL buffers for a window, if double-buffering is supported.",N,N],[5,"SDL_GL_DeleteContext","","\\brief Delete an OpenGL context.",N,N],[5,"SDL_GetKeyboardFocus","","\\brief Get the window which currently has keyboard focus.",N,N],[5,"SDL_GetKeyboardState","","\\brief Get a snapshot of the current state of the keyboard.",N,N],[5,"SDL_GetModState","","\\brief Get the current key modifier state for the keyboard.",N,N],[5,"SDL_SetModState","","\\brief Set the current key modifier state for the keyboard.",N,N],[5,"SDL_GetKeyFromScancode","","\\brief Get the key code corresponding to the given scancode according        to the current keyboard layout.",N,N],[5,"SDL_GetScancodeFromKey","","\\brief Get the scancode corresponding to the given key code according to the        current keyboard layout.",N,N],[5,"SDL_GetScancodeName","","\\brief Get a human-readable name for a scancode.",N,N],[5,"SDL_GetScancodeFromName","","\\brief Get a scancode from a human-readable name",N,N],[5,"SDL_GetKeyName","","\\brief Get a human-readable name for a key.",N,N],[5,"SDL_GetKeyFromName","","\\brief Get a key code from a human-readable name",N,N],[5,"SDL_StartTextInput","","\\brief Start accepting Unicode text input events.        This function will show the on-screen keyboard if supported.",N,N],[5,"SDL_IsTextInputActive","","\\brief Return whether or not Unicode text input events are enabled.",N,N],[5,"SDL_StopTextInput","","\\brief Stop receiving any text input events.        This function will hide the on-screen keyboard if supported.",N,N],[5,"SDL_SetTextInputRect","","\\brief Set the rectangle used to type Unicode text inputs.        This is used as a hint for IME and on-screen keyboard placement.",N,N],[5,"SDL_HasScreenKeyboardSupport","","\\brief Returns whether the platform has some screen keyboard support.",N,N],[5,"SDL_IsScreenKeyboardShown","","\\brief Returns whether the screen keyboard is shown for given window.",N,N],[5,"SDL_GetMouseFocus","","\\brief Get the window which currently has mouse focus.",N,N],[5,"SDL_GetMouseState","","\\brief Retrieve the current state of the mouse.",N,N],[5,"SDL_GetGlobalMouseState","","\\brief Get the current state of the mouse, in relation to the desktop",N,N],[5,"SDL_GetRelativeMouseState","","\\brief Retrieve the relative state of the mouse.",N,N],[5,"SDL_WarpMouseInWindow","","\\brief Moves the mouse to the given position within the window.",N,N],[5,"SDL_WarpMouseGlobal","","\\brief Moves the mouse to the given position in global screen space.",N,N],[5,"SDL_SetRelativeMouseMode","","\\brief Set relative mouse mode.",N,N],[5,"SDL_CaptureMouse","","\\brief Capture the mouse, to track input outside an SDL window.",N,N],[5,"SDL_GetRelativeMouseMode","","\\brief Query whether relative mouse mode is enabled.",N,N],[5,"SDL_CreateCursor","","\\brief Create a cursor, using the specified bitmap data and        mask (in MSB format).",N,N],[5,"SDL_CreateColorCursor","","\\brief Create a color cursor.",N,N],[5,"SDL_CreateSystemCursor","","\\brief Create a system cursor.",N,N],[5,"SDL_SetCursor","","\\brief Set the active cursor.",N,N],[5,"SDL_GetCursor","","\\brief Return the active cursor.",N,N],[5,"SDL_GetDefaultCursor","","\\brief Return the default cursor.",N,N],[5,"SDL_FreeCursor","","\\brief Frees a cursor created with SDL_CreateCursor() or similar functions.",N,N],[5,"SDL_ShowCursor","","\\brief Toggle whether or not the cursor is shown.",N,N],[5,"SDL_LockJoysticks","","Locking for multi-threaded access to the joystick API",N,N],[5,"SDL_UnlockJoysticks","","",N,N],[5,"SDL_NumJoysticks","","Count the number of joysticks attached to the system right now",N,N],[5,"SDL_JoystickNameForIndex","","Get the implementation dependent name of a joystick. This can be called before any joysticks are opened. If no name can be found, this function returns NULL.",N,N],[5,"SDL_JoystickGetDevicePlayerIndex","","Get the player index of a joystick, or -1 if it's not available This can be called before any joysticks are opened.",N,N],[5,"SDL_JoystickGetDeviceGUID","","Return the GUID for the joystick at this index This can be called before any joysticks are opened.",N,N],[5,"SDL_JoystickGetDeviceVendor","","Get the USB vendor ID of a joystick, if available. This can be called before any joysticks are opened. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceProduct","","Get the USB product ID of a joystick, if available. This can be called before any joysticks are opened. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceProductVersion","","Get the product version of a joystick, if available. This can be called before any joysticks are opened. If the product version isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetDeviceType","","Get the type of a joystick, if available. This can be called before any joysticks are opened.",N,N],[5,"SDL_JoystickGetDeviceInstanceID","","Get the instance ID of a joystick. This can be called before any joysticks are opened. If the index is out of range, this function will return -1.",N,N],[5,"SDL_JoystickOpen","","Open a joystick for use. The index passed as an argument refers to the N'th joystick on the system. This index is not the value which will identify this joystick in future joystick events.  The joystick's instance id (::SDL_JoystickID) will be used there instead.",N,N],[5,"SDL_JoystickFromInstanceID","","Return the SDL_Joystick associated with an instance id.",N,N],[5,"SDL_JoystickName","","Return the name for this currently opened joystick. If no name can be found, this function returns NULL.",N,N],[5,"SDL_JoystickGetPlayerIndex","","Get the player index of an opened joystick, or -1 if it's not available",N,N],[5,"SDL_JoystickGetGUID","","Return the GUID for this opened joystick",N,N],[5,"SDL_JoystickGetVendor","","Get the USB vendor ID of an opened joystick, if available. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetProduct","","Get the USB product ID of an opened joystick, if available. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetProductVersion","","Get the product version of an opened joystick, if available. If the product version isn't available this function returns 0.",N,N],[5,"SDL_JoystickGetType","","Get the type of an opened joystick.",N,N],[5,"SDL_JoystickGetGUIDString","","Return a string representation for this guid. pszGUID must point to at least 33 bytes (32 for the string plus a NULL terminator).",N,N],[5,"SDL_JoystickGetGUIDFromString","","Convert a string into a joystick guid",N,N],[5,"SDL_JoystickGetAttached","","Returns SDL_TRUE if the joystick has been opened and currently connected, or SDL_FALSE if it has not.",N,N],[5,"SDL_JoystickInstanceID","","Get the instance ID of an opened joystick or -1 if the joystick is invalid.",N,N],[5,"SDL_JoystickNumAxes","","Get the number of general axis controls on a joystick.",N,N],[5,"SDL_JoystickNumBalls","","Get the number of trackballs on a joystick.",N,N],[5,"SDL_JoystickNumHats","","Get the number of POV hats on a joystick.",N,N],[5,"SDL_JoystickNumButtons","","Get the number of buttons on a joystick.",N,N],[5,"SDL_JoystickUpdate","","Update the current state of the open joysticks.",N,N],[5,"SDL_JoystickEventState","","Enable/disable joystick event polling.",N,N],[5,"SDL_JoystickGetAxis","","Get the current state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetAxisInitialState","","Get the initial state of an axis control on a joystick.",N,N],[5,"SDL_JoystickGetHat","","Get the current state of a POV hat on a joystick.",N,N],[5,"SDL_JoystickGetBall","","Get the ball axis change since the last poll.",N,N],[5,"SDL_JoystickGetButton","","Get the current state of a button on a joystick.",N,N],[5,"SDL_JoystickRumble","","Trigger a rumble effect Each call to this function cancels any previous rumble effect, and calling it with 0 intensity stops any rumbling.",N,N],[5,"SDL_JoystickClose","","Close a joystick previously opened with SDL_JoystickOpen().",N,N],[5,"SDL_JoystickCurrentPowerLevel","","Return the battery level of this joystick",N,N],[5,"SDL_GameControllerAddMappingsFromRW","","Load a set of mappings from a seekable SDL data stream (memory or file), filtered by the current SDL_GetPlatform()  A community sourced database of controllers is available at https://raw.github.com/gabomdq/SDL_GameControllerDB/master/gamecontrollerdb.txt",N,N],[5,"SDL_GameControllerAddMapping","","Add or update an existing mapping configuration",N,N],[5,"SDL_GameControllerNumMappings","","Get the number of mappings installed",N,N],[5,"SDL_GameControllerMappingForIndex","","Get the mapping at a particular index.",N,N],[5,"SDL_GameControllerMappingForGUID","","Get a mapping string for a GUID",N,N],[5,"SDL_GameControllerMapping","","Get a mapping string for an open GameController",N,N],[5,"SDL_IsGameController","","Is the joystick on this index supported by the game controller interface?",N,N],[5,"SDL_GameControllerNameForIndex","","Get the implementation dependent name of a game controller. This can be called before any controllers are opened. If no name can be found, this function returns NULL.",N,N],[5,"SDL_GameControllerMappingForDeviceIndex","","Get the mapping of a game controller. This can be called before any controllers are opened.",N,N],[5,"SDL_GameControllerOpen","","Open a game controller for use. The index passed as an argument refers to the N'th game controller on the system. This index is not the value which will identify this controller in future controller events.  The joystick's instance id (::SDL_JoystickID) will be used there instead.",N,N],[5,"SDL_GameControllerFromInstanceID","","Return the SDL_GameController associated with an instance id.",N,N],[5,"SDL_GameControllerName","","Return the name for this currently opened controller",N,N],[5,"SDL_GameControllerGetPlayerIndex","","Get the player index of an opened game controller, or -1 if it's not available",N,N],[5,"SDL_GameControllerGetVendor","","Get the USB vendor ID of an opened controller, if available. If the vendor ID isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetProduct","","Get the USB product ID of an opened controller, if available. If the product ID isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetProductVersion","","Get the product version of an opened controller, if available. If the product version isn't available this function returns 0.",N,N],[5,"SDL_GameControllerGetAttached","","Returns SDL_TRUE if the controller has been opened and currently connected, or SDL_FALSE if it has not.",N,N],[5,"SDL_GameControllerGetJoystick","","Get the underlying joystick object used by a controller",N,N],[5,"SDL_GameControllerEventState","","Enable/disable controller event polling.",N,N],[5,"SDL_GameControllerUpdate","","Update the current state of the open game controllers.",N,N],[5,"SDL_GameControllerGetAxisFromString","","turn this string into a axis mapping",N,N],[5,"SDL_GameControllerGetStringForAxis","","turn this axis enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForAxis","","Get the SDL joystick layer binding for this controller button mapping",N,N],[5,"SDL_GameControllerGetAxis","","Get the current state of an axis control on a game controller.",N,N],[5,"SDL_GameControllerGetButtonFromString","","turn this string into a button mapping",N,N],[5,"SDL_GameControllerGetStringForButton","","turn this button enum into a string mapping",N,N],[5,"SDL_GameControllerGetBindForButton","","Get the SDL joystick layer binding for this controller button mapping",N,N],[5,"SDL_GameControllerGetButton","","Get the current state of a button on a game controller.",N,N],[5,"SDL_GameControllerRumble","","Trigger a rumble effect Each call to this function cancels any previous rumble effect, and calling it with 0 intensity stops any rumbling.",N,N],[5,"SDL_GameControllerClose","","Close a controller previously opened with SDL_GameControllerOpen().",N,N],[5,"SDL_GetNumTouchDevices","","\\brief Get the number of registered touch devices.",N,N],[5,"SDL_GetTouchDevice","","\\brief Get the touch ID with the given index, or 0 if the index is invalid.",N,N],[5,"SDL_GetNumTouchFingers","","\\brief Get the number of active fingers for a given touch device.",N,N],[5,"SDL_GetTouchFinger","","\\brief Get the finger object of the given touch, with the given index.",N,N],[5,"SDL_RecordGesture","","\\brief Begin Recording a gesture on the specified touch, or all touches (-1)",N,N],[5,"SDL_SaveAllDollarTemplates","","\\brief Save all currently loaded Dollar Gesture templates",N,N],[5,"SDL_SaveDollarTemplate","","\\brief Save a currently loaded Dollar Gesture template",N,N],[5,"SDL_LoadDollarTemplates","","\\brief Load Dollar Gesture templates from a file",N,N],[5,"SDL_PumpEvents","","Pumps the event loop, gathering events from the input devices.",N,N],[5,"SDL_PeepEvents","","Checks the event queue for messages and optionally returns them.",N,N],[5,"SDL_HasEvent","","Checks to see if certain event types are in the event queue.",N,N],[5,"SDL_HasEvents","","",N,N],[5,"SDL_FlushEvent","","This function clears events from the event queue This function only affects currently queued events. If you want to make sure that all pending OS events are flushed, you can call SDL_PumpEvents() on the main thread immediately before the flush call.",N,N],[5,"SDL_FlushEvents","","",N,N],[5,"SDL_PollEvent","","\\brief Polls for currently pending events.",N,N],[5,"SDL_WaitEvent","","\\brief Waits indefinitely for the next available event.",N,N],[5,"SDL_WaitEventTimeout","","\\brief Waits until the specified timeout (in milliseconds) for the next        available event.",N,N],[5,"SDL_PushEvent","","\\brief Add an event to the event queue.",N,N],[5,"SDL_SetEventFilter","","Sets up a filter to process all events before they change internal state and are posted to the internal event queue.",N,N],[5,"SDL_GetEventFilter","","Return the current event filter - can be used to \"chain\" filters. If there is no event filter set, this function returns SDL_FALSE.",N,N],[5,"SDL_AddEventWatch","","Add a function which is called when an event is added to the queue.",N,N],[5,"SDL_DelEventWatch","","Remove an event watch function added with SDL_AddEventWatch()",N,N],[5,"SDL_FilterEvents","","Run the filter function on the current event queue, removing any events for which the filter returns 0.",N,N],[5,"SDL_EventState","","This function allows you to set the state of processing certain events. - If \\c state is set to ::SDL_IGNORE, that event will be automatically   dropped from the event queue and will not be filtered. - If \\c state is set to ::SDL_ENABLE, that event will be processed   normally. - If \\c state is set to ::SDL_QUERY, SDL_EventState() will return the   current processing state of the specified event.",N,N],[5,"SDL_RegisterEvents","","This function allocates a set of user-defined events, and returns the beginning event number for that set of events.",N,N],[5,"SDL_GetBasePath","","\\brief Get the path where the application resides.",N,N],[5,"SDL_GetPrefPath","","\\brief Get the user-and-app-specific path where files can be written.",N,N],[5,"SDL_NumHaptics","","\\brief Count the number of haptic devices attached to the system.",N,N],[5,"SDL_HapticName","","\\brief Get the implementation dependent name of a haptic device.",N,N],[5,"SDL_HapticOpen","","\\brief Opens a haptic device for use.",N,N],[5,"SDL_HapticOpened","","\\brief Checks if the haptic device at index has been opened.",N,N],[5,"SDL_HapticIndex","","\\brief Gets the index of a haptic device.",N,N],[5,"SDL_MouseIsHaptic","","\\brief Gets whether or not the current mouse has haptic capabilities.",N,N],[5,"SDL_HapticOpenFromMouse","","\\brief Tries to open a haptic device from the current mouse.",N,N],[5,"SDL_JoystickIsHaptic","","\\brief Checks to see if a joystick has haptic features.",N,N],[5,"SDL_HapticOpenFromJoystick","","\\brief Opens a haptic device for use from a joystick device.",N,N],[5,"SDL_HapticClose","","\\brief Closes a haptic device previously opened with SDL_HapticOpen().",N,N],[5,"SDL_HapticNumEffects","","\\brief Returns the number of effects a haptic device can store.",N,N],[5,"SDL_HapticNumEffectsPlaying","","\\brief Returns the number of effects a haptic device can play at the same        time.",N,N],[5,"SDL_HapticQuery","","\\brief Gets the haptic device's supported features in bitwise manner.",N,N],[5,"SDL_HapticNumAxes","","\\brief Gets the number of haptic axes the device has.",N,N],[5,"SDL_HapticEffectSupported","","\\brief Checks to see if effect is supported by haptic.",N,N],[5,"SDL_HapticNewEffect","","\\brief Creates a new haptic effect on the device.",N,N],[5,"SDL_HapticUpdateEffect","","\\brief Updates the properties of an effect.",N,N],[5,"SDL_HapticRunEffect","","\\brief Runs the haptic effect on its associated haptic device.",N,N],[5,"SDL_HapticStopEffect","","\\brief Stops the haptic effect on its associated haptic device.",N,N],[5,"SDL_HapticDestroyEffect","","\\brief Destroys a haptic effect on the device.",N,N],[5,"SDL_HapticGetEffectStatus","","\\brief Gets the status of the current effect on the haptic device.",N,N],[5,"SDL_HapticSetGain","","\\brief Sets the global gain of the device.",N,N],[5,"SDL_HapticSetAutocenter","","\\brief Sets the global autocenter of the device.",N,N],[5,"SDL_HapticPause","","\\brief Pauses a haptic device.",N,N],[5,"SDL_HapticUnpause","","\\brief Unpauses a haptic device.",N,N],[5,"SDL_HapticStopAll","","\\brief Stops all the currently playing effects on a haptic device.",N,N],[5,"SDL_HapticRumbleSupported","","\\brief Checks to see if rumble is supported on a haptic device.",N,N],[5,"SDL_HapticRumbleInit","","\\brief Initializes the haptic device for simple rumble playback.",N,N],[5,"SDL_HapticRumblePlay","","\\brief Runs simple rumble on a haptic device",N,N],[5,"SDL_HapticRumbleStop","","\\brief Stops the simple rumble on a haptic device.",N,N],[5,"SDL_SetHintWithPriority","","\\brief Set a hint with a specific priority",N,N],[5,"SDL_SetHint","","\\brief Set a hint with normal priority",N,N],[5,"SDL_GetHint","","\\brief Get a hint",N,N],[5,"SDL_GetHintBoolean","","\\brief Get a hint",N,N],[5,"SDL_AddHintCallback","","\\brief Add a function to watch a particular hint",N,N],[5,"SDL_DelHintCallback","","\\brief Remove a function watching a particular hint",N,N],[5,"SDL_ClearHints","","\\brief  Clear all hints",N,N],[5,"SDL_LoadObject","","This function dynamically loads a shared object and returns a pointer to the object handle (or NULL if there was an error). The 'sofile' parameter is a system dependent name of the object file.",N,N],[5,"SDL_LoadFunction","","Given an object handle, this function looks up the address of the named function in the shared object and returns it.  This address is no longer valid after calling SDL_UnloadObject().",N,N],[5,"SDL_UnloadObject","","Unload a shared object from memory.",N,N],[5,"SDL_LogSetAllPriority","","\\brief Set the priority of all log categories",N,N],[5,"SDL_LogSetPriority","","\\brief Set the priority of a particular log category",N,N],[5,"SDL_LogGetPriority","","\\brief Get the priority of a particular log category",N,N],[5,"SDL_LogResetPriorities","","\\brief Reset all priorities to default.",N,N],[5,"SDL_Log","","\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION and SDL_LOG_PRIORITY_INFO",N,N],[5,"SDL_LogVerbose","","\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE",N,N],[5,"SDL_LogDebug","","\\brief Log a message with SDL_LOG_PRIORITY_DEBUG",N,N],[5,"SDL_LogInfo","","\\brief Log a message with SDL_LOG_PRIORITY_INFO",N,N],[5,"SDL_LogWarn","","\\brief Log a message with SDL_LOG_PRIORITY_WARN",N,N],[5,"SDL_LogError","","\\brief Log a message with SDL_LOG_PRIORITY_ERROR",N,N],[5,"SDL_LogCritical","","\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL",N,N],[5,"SDL_LogMessage","","\\brief Log a message with the specified category and priority.",N,N],[5,"SDL_LogMessageV","","\\brief Log a message with the specified category and priority.",N,N],[5,"SDL_LogGetOutputFunction","","\\brief Get the current log output function.",N,N],[5,"SDL_LogSetOutputFunction","","\\brief This function allows you to replace the default log output function with one of your own.",N,N],[5,"SDL_ShowMessageBox","","\\brief Create a modal message box.",N,N],[5,"SDL_ShowSimpleMessageBox","","\\brief Create a simple modal message box",N,N],[5,"SDL_GetPowerInfo","","\\brief Get the current power supply details.",N,N],[5,"SDL_GetNumRenderDrivers","","\\brief Get the number of 2D rendering drivers available for the current        display.",N,N],[5,"SDL_GetRenderDriverInfo","","\\brief Get information about a specific 2D rendering driver for the current        display.",N,N],[5,"SDL_CreateWindowAndRenderer","","\\brief Create a window and default renderer",N,N],[5,"SDL_CreateRenderer","","\\brief Create a 2D rendering context for a window.",N,N],[5,"SDL_CreateSoftwareRenderer","","\\brief Create a 2D software rendering context for a surface.",N,N],[5,"SDL_GetRenderer","","\\brief Get the renderer associated with a window.",N,N],[5,"SDL_GetRendererInfo","","\\brief Get information about a rendering context.",N,N],[5,"SDL_GetRendererOutputSize","","\\brief Get the output size in pixels of a rendering context.",N,N],[5,"SDL_CreateTexture","","\\brief Create a texture for a rendering context.",N,N],[5,"SDL_CreateTextureFromSurface","","\\brief Create a texture from an existing surface.",N,N],[5,"SDL_QueryTexture","","\\brief Query the attributes of a texture",N,N],[5,"SDL_SetTextureColorMod","","\\brief Set an additional color value used in render copy operations.",N,N],[5,"SDL_GetTextureColorMod","","\\brief Get the additional color value used in render copy operations.",N,N],[5,"SDL_SetTextureAlphaMod","","\\brief Set an additional alpha value used in render copy operations.",N,N],[5,"SDL_GetTextureAlphaMod","","\\brief Get the additional alpha value used in render copy operations.",N,N],[5,"SDL_SetTextureBlendMode","","\\brief Set the blend mode used for texture copy operations.",N,N],[5,"SDL_GetTextureBlendMode","","\\brief Get the blend mode used for texture copy operations.",N,N],[5,"SDL_UpdateTexture","","\\brief Update the given texture rectangle with new pixel data.",N,N],[5,"SDL_UpdateYUVTexture","","\\brief Update a rectangle within a planar YV12 or IYUV texture with new pixel data.",N,N],[5,"SDL_LockTexture","","\\brief Lock a portion of the texture for write-only pixel access.",N,N],[5,"SDL_UnlockTexture","","\\brief Unlock a texture, uploading the changes to video memory, if needed.",N,N],[5,"SDL_RenderTargetSupported","","\\brief Determines whether a window supports the use of render targets",N,N],[5,"SDL_SetRenderTarget","","\\brief Set a texture as the current rendering target.",N,N],[5,"SDL_GetRenderTarget","","\\brief Get the current render target or NULL for the default render target.",N,N],[5,"SDL_RenderSetLogicalSize","","\\brief Set device independent resolution for rendering",N,N],[5,"SDL_RenderGetLogicalSize","","\\brief Get device independent resolution for rendering",N,N],[5,"SDL_RenderSetIntegerScale","","\\brief Set whether to force integer scales for resolution-independent rendering",N,N],[5,"SDL_RenderGetIntegerScale","","\\brief Get whether integer scales are forced for resolution-independent rendering",N,N],[5,"SDL_RenderSetViewport","","\\brief Set the drawing area for rendering on the current target.",N,N],[5,"SDL_RenderGetViewport","","\\brief Get the drawing area for the current target.",N,N],[5,"SDL_RenderSetClipRect","","\\brief Set the clip rectangle for the current target.",N,N],[5,"SDL_RenderGetClipRect","","\\brief Get the clip rectangle for the current target.",N,N],[5,"SDL_RenderIsClipEnabled","","\\brief Get whether clipping is enabled on the given renderer.",N,N],[5,"SDL_RenderSetScale","","\\brief Set the drawing scale for rendering on the current target.",N,N],[5,"SDL_RenderGetScale","","\\brief Get the drawing scale for the current target.",N,N],[5,"SDL_SetRenderDrawColor","","\\brief Set the color used for drawing operations (Rect, Line and Clear).",N,N],[5,"SDL_GetRenderDrawColor","","\\brief Get the color used for drawing operations (Rect, Line and Clear).",N,N],[5,"SDL_SetRenderDrawBlendMode","","\\brief Set the blend mode used for drawing operations (Fill and Line).",N,N],[5,"SDL_GetRenderDrawBlendMode","","\\brief Get the blend mode used for drawing operations.",N,N],[5,"SDL_RenderClear","","\\brief Clear the current rendering target with the drawing color",N,N],[5,"SDL_RenderDrawPoint","","\\brief Draw a point on the current rendering target.",N,N],[5,"SDL_RenderDrawPoints","","\\brief Draw multiple points on the current rendering target.",N,N],[5,"SDL_RenderDrawLine","","\\brief Draw a line on the current rendering target.",N,N],[5,"SDL_RenderDrawLines","","\\brief Draw a series of connected lines on the current rendering target.",N,N],[5,"SDL_RenderDrawRect","","\\brief Draw a rectangle on the current rendering target.",N,N],[5,"SDL_RenderDrawRects","","\\brief Draw some number of rectangles on the current rendering target.",N,N],[5,"SDL_RenderFillRect","","\\brief Fill a rectangle on the current rendering target with the drawing color.",N,N],[5,"SDL_RenderFillRects","","\\brief Fill some number of rectangles on the current rendering target with the drawing color.",N,N],[5,"SDL_RenderCopy","","\\brief Copy a portion of the texture to the current rendering target.",N,N],[5,"SDL_RenderCopyEx","","\\brief Copy a portion of the source texture to the current rendering target, rotating it by angle around the given center",N,N],[5,"SDL_RenderReadPixels","","\\brief Read pixels from the current rendering target.",N,N],[5,"SDL_RenderPresent","","\\brief Update the screen with rendering performed.",N,N],[5,"SDL_DestroyTexture","","\\brief Destroy the specified texture.",N,N],[5,"SDL_DestroyRenderer","","\\brief Destroy the rendering context for a window and free associated        textures.",N,N],[5,"SDL_GL_BindTexture","","\\brief Bind the texture to the current OpenGL/ES/ES2 context for use with        OpenGL instructions.",N,N],[5,"SDL_GL_UnbindTexture","","\\brief Unbind a texture from the current OpenGL/ES/ES2 context.",N,N],[5,"SDL_RenderGetMetalLayer","","\\brief Get the CAMetalLayer associated with the given Metal renderer",N,N],[5,"SDL_RenderGetMetalCommandEncoder","","\\brief Get the Metal command encoder for the current frame",N,N],[5,"SDL_NumSensors","","\\brief Count the number of sensors attached to the system right now",N,N],[5,"SDL_SensorGetDeviceName","","\\brief Get the implementation dependent name of a sensor.",N,N],[5,"SDL_SensorGetDeviceType","","\\brief Get the type of a sensor.",N,N],[5,"SDL_SensorGetDeviceNonPortableType","","\\brief Get the platform dependent type of a sensor.",N,N],[5,"SDL_SensorGetDeviceInstanceID","","\\brief Get the instance ID of a sensor.",N,N],[5,"SDL_SensorOpen","","\\brief Open a sensor for use.",N,N],[5,"SDL_SensorFromInstanceID","","Return the SDL_Sensor associated with an instance id.",N,N],[5,"SDL_SensorGetName","","\\brief Get the implementation dependent name of a sensor.",N,N],[5,"SDL_SensorGetType","","\\brief Get the type of a sensor.",N,N],[5,"SDL_SensorGetNonPortableType","","\\brief Get the platform dependent type of a sensor.",N,N],[5,"SDL_SensorGetInstanceID","","\\brief Get the instance ID of a sensor.",N,N],[5,"SDL_SensorGetData","","Get the current state of an opened sensor.",N,N],[5,"SDL_SensorClose","","Close a sensor previously opened with SDL_SensorOpen()",N,N],[5,"SDL_SensorUpdate","","Update the current state of the open sensors.",N,N],[5,"SDL_CreateShapedWindow","","\\brief Create a window that can be shaped with the specified position, dimensions, and flags.",N,N],[5,"SDL_IsShapedWindow","","\\brief Return whether the given window is a shaped window.",N,N],[5,"SDL_SetWindowShape","","\\brief Set the shape and parameters of a shaped window.",N,N],[5,"SDL_GetShapedWindowMode","","\\brief Get the shape parameters of a shaped window.",N,N],[5,"SDL_LinuxSetThreadPriority","","\\brief Sets the UNIX nice value for a thread, using setpriority() if possible, and RealtimeKit if available.",N,N],[5,"SDL_IsTablet","","\\brief Return true if the current device is a tablet.",N,N],[5,"SDL_GetTicks","","\\brief Get the number of milliseconds since the SDL library initialization.",N,N],[5,"SDL_GetPerformanceCounter","","\\brief Get the current value of the high resolution counter",N,N],[5,"SDL_GetPerformanceFrequency","","\\brief Get the count per second of the high resolution counter",N,N],[5,"SDL_Delay","","\\brief Wait a specified number of milliseconds before returning.",N,N],[5,"SDL_AddTimer","","\\brief Add a new timer to the pool of timers already running.",N,N],[5,"SDL_RemoveTimer","","\\brief Remove a timer knowing its ID.",N,N],[5,"SDL_GetVersion","","\\brief Get the version of SDL that is linked against your program.",N,N],[5,"SDL_GetRevision","","\\brief Get the code revision of SDL that is linked against your program.",N,N],[5,"SDL_GetRevisionNumber","","\\brief Get the revision number of SDL that is linked against your program.",N,N],[5,"SDL_Init","","This function initializes  the subsystems specified by \\c flags",N,N],[5,"SDL_InitSubSystem","","This function initializes specific SDL subsystems",N,N],[5,"SDL_QuitSubSystem","","This function cleans up specific SDL subsystems",N,N],[5,"SDL_WasInit","","This function returns a mask of the specified subsystems which have previously been initialized.",N,N],[5,"SDL_Quit","","This function cleans up all initialized subsystems. You should call it upon all exit conditions.",N,N],[5,"_Xmblen","","",N,N],[7,"_Xdebug","","",N,N],[5,"XLoadQueryFont","","",N,N],[5,"XQueryFont","","",N,N],[5,"XGetMotionEvents","","",N,N],[5,"XDeleteModifiermapEntry","","",N,N],[5,"XGetModifierMapping","","",N,N],[5,"XInsertModifiermapEntry","","",N,N],[5,"XNewModifiermap","","",N,N],[5,"XCreateImage","","",N,N],[5,"XInitImage","","",N,N],[5,"XGetImage","","",N,N],[5,"XGetSubImage","","",N,N],[5,"XOpenDisplay","","",N,N],[5,"XrmInitialize","","",N,N],[5,"XFetchBytes","","",N,N],[5,"XFetchBuffer","","",N,N],[5,"XGetAtomName","","",N,N],[5,"XGetAtomNames","","",N,N],[5,"XGetDefault","","",N,N],[5,"XDisplayName","","",N,N],[5,"XKeysymToString","","",N,N],[5,"XSynchronize","","",N,N],[5,"XSetAfterFunction","","",N,N],[5,"XInternAtom","","",N,N],[5,"XInternAtoms","","",N,N],[5,"XCopyColormapAndFree","","",N,N],[5,"XCreateColormap","","",N,N],[5,"XCreatePixmapCursor","","",N,N],[5,"XCreateGlyphCursor","","",N,N],[5,"XCreateFontCursor","","",N,N],[5,"XLoadFont","","",N,N],[5,"XCreateGC","","",N,N],[5,"XGContextFromGC","","",N,N],[5,"XFlushGC","","",N,N],[5,"XCreatePixmap","","",N,N],[5,"XCreateBitmapFromData","","",N,N],[5,"XCreatePixmapFromBitmapData","","",N,N],[5,"XCreateSimpleWindow","","",N,N],[5,"XGetSelectionOwner","","",N,N],[5,"XCreateWindow","","",N,N],[5,"XListInstalledColormaps","","",N,N],[5,"XListFonts","","",N,N],[5,"XListFontsWithInfo","","",N,N],[5,"XGetFontPath","","",N,N],[5,"XListExtensions","","",N,N],[5,"XListProperties","","",N,N],[5,"XListHosts","","",N,N],[5,"XKeycodeToKeysym","","",N,N],[5,"XLookupKeysym","","",N,N],[5,"XGetKeyboardMapping","","",N,N],[5,"XStringToKeysym","","",N,N],[5,"XMaxRequestSize","","",N,N],[5,"XExtendedMaxRequestSize","","",N,N],[5,"XResourceManagerString","","",N,N],[5,"XScreenResourceString","","",N,N],[5,"XDisplayMotionBufferSize","","",N,N],[5,"XVisualIDFromVisual","","",N,N],[5,"XInitThreads","","",N,N],[5,"XLockDisplay","","",N,N],[5,"XUnlockDisplay","","",N,N],[5,"XInitExtension","","",N,N],[5,"XAddExtension","","",N,N],[5,"XFindOnExtensionList","","",N,N],[5,"XEHeadOfExtensionList","","",N,N],[5,"XRootWindow","","",N,N],[5,"XDefaultRootWindow","","",N,N],[5,"XRootWindowOfScreen","","",N,N],[5,"XDefaultVisual","","",N,N],[5,"XDefaultVisualOfScreen","","",N,N],[5,"XDefaultGC","","",N,N],[5,"XDefaultGCOfScreen","","",N,N],[5,"XBlackPixel","","",N,N],[5,"XWhitePixel","","",N,N],[5,"XAllPlanes","","",N,N],[5,"XBlackPixelOfScreen","","",N,N],[5,"XWhitePixelOfScreen","","",N,N],[5,"XNextRequest","","",N,N],[5,"XLastKnownRequestProcessed","","",N,N],[5,"XServerVendor","","",N,N],[5,"XDisplayString","","",N,N],[5,"XDefaultColormap","","",N,N],[5,"XDefaultColormapOfScreen","","",N,N],[5,"XDisplayOfScreen","","",N,N],[5,"XScreenOfDisplay","","",N,N],[5,"XDefaultScreenOfDisplay","","",N,N],[5,"XEventMaskOfScreen","","",N,N],[5,"XScreenNumberOfScreen","","",N,N],[5,"XSetErrorHandler","","",N,N],[5,"XSetIOErrorHandler","","",N,N],[5,"XListPixmapFormats","","",N,N],[5,"XListDepths","","",N,N],[5,"XReconfigureWMWindow","","",N,N],[5,"XGetWMProtocols","","",N,N],[5,"XSetWMProtocols","","",N,N],[5,"XIconifyWindow","","",N,N],[5,"XWithdrawWindow","","",N,N],[5,"XGetCommand","","",N,N],[5,"XGetWMColormapWindows","","",N,N],[5,"XSetWMColormapWindows","","",N,N],[5,"XFreeStringList","","",N,N],[5,"XSetTransientForHint","","",N,N],[5,"XActivateScreenSaver","","",N,N],[5,"XAddHost","","",N,N],[5,"XAddHosts","","",N,N],[5,"XAddToExtensionList","","",N,N],[5,"XAddToSaveSet","","",N,N],[5,"XAllocColor","","",N,N],[5,"XAllocColorCells","","",N,N],[5,"XAllocColorPlanes","","",N,N],[5,"XAllocNamedColor","","",N,N],[5,"XAllowEvents","","",N,N],[5,"XAutoRepeatOff","","",N,N],[5,"XAutoRepeatOn","","",N,N],[5,"XBell","","",N,N],[5,"XBitmapBitOrder","","",N,N],[5,"XBitmapPad","","",N,N],[5,"XBitmapUnit","","",N,N],[5,"XCellsOfScreen","","",N,N],[5,"XChangeActivePointerGrab","","",N,N],[5,"XChangeGC","","",N,N],[5,"XChangeKeyboardControl","","",N,N],[5,"XChangeKeyboardMapping","","",N,N],[5,"XChangePointerControl","","",N,N],[5,"XChangeProperty","","",N,N],[5,"XChangeSaveSet","","",N,N],[5,"XChangeWindowAttributes","","",N,N],[5,"XCheckIfEvent","","",N,N],[5,"XCheckMaskEvent","","",N,N],[5,"XCheckTypedEvent","","",N,N],[5,"XCheckTypedWindowEvent","","",N,N],[5,"XCheckWindowEvent","","",N,N],[5,"XCirculateSubwindows","","",N,N],[5,"XCirculateSubwindowsDown","","",N,N],[5,"XCirculateSubwindowsUp","","",N,N],[5,"XClearArea","","",N,N],[5,"XClearWindow","","",N,N],[5,"XCloseDisplay","","",N,N],[5,"XConfigureWindow","","",N,N],[5,"XConnectionNumber","","",N,N],[5,"XConvertSelection","","",N,N],[5,"XCopyArea","","",N,N],[5,"XCopyGC","","",N,N],[5,"XCopyPlane","","",N,N],[5,"XDefaultDepth","","",N,N],[5,"XDefaultDepthOfScreen","","",N,N],[5,"XDefaultScreen","","",N,N],[5,"XDefineCursor","","",N,N],[5,"XDeleteProperty","","",N,N],[5,"XDestroyWindow","","",N,N],[5,"XDestroySubwindows","","",N,N],[5,"XDoesBackingStore","","",N,N],[5,"XDoesSaveUnders","","",N,N],[5,"XDisableAccessControl","","",N,N],[5,"XDisplayCells","","",N,N],[5,"XDisplayHeight","","",N,N],[5,"XDisplayHeightMM","","",N,N],[5,"XDisplayKeycodes","","",N,N],[5,"XDisplayPlanes","","",N,N],[5,"XDisplayWidth","","",N,N],[5,"XDisplayWidthMM","","",N,N],[5,"XDrawArc","","",N,N],[5,"XDrawArcs","","",N,N],[5,"XDrawImageString","","",N,N],[5,"XDrawImageString16","","",N,N],[5,"XDrawLine","","",N,N],[5,"XDrawLines","","",N,N],[5,"XDrawPoint","","",N,N],[5,"XDrawPoints","","",N,N],[5,"XDrawRectangle","","",N,N],[5,"XDrawRectangles","","",N,N],[5,"XDrawSegments","","",N,N],[5,"XDrawString","","",N,N],[5,"XDrawString16","","",N,N],[5,"XDrawText","","",N,N],[5,"XDrawText16","","",N,N],[5,"XEnableAccessControl","","",N,N],[5,"XEventsQueued","","",N,N],[5,"XFetchName","","",N,N],[5,"XFillArc","","",N,N],[5,"XFillArcs","","",N,N],[5,"XFillPolygon","","",N,N],[5,"XFillRectangle","","",N,N],[5,"XFillRectangles","","",N,N],[5,"XFlush","","",N,N],[5,"XForceScreenSaver","","",N,N],[5,"XFree","","",N,N],[5,"XFreeColormap","","",N,N],[5,"XFreeColors","","",N,N],[5,"XFreeCursor","","",N,N],[5,"XFreeExtensionList","","",N,N],[5,"XFreeFont","","",N,N],[5,"XFreeFontInfo","","",N,N],[5,"XFreeFontNames","","",N,N],[5,"XFreeFontPath","","",N,N],[5,"XFreeGC","","",N,N],[5,"XFreeModifiermap","","",N,N],[5,"XFreePixmap","","",N,N],[5,"XGeometry","","",N,N],[5,"XGetErrorDatabaseText","","",N,N],[5,"XGetErrorText","","",N,N],[5,"XGetFontProperty","","",N,N],[5,"XGetGCValues","","",N,N],[5,"XGetGeometry","","",N,N],[5,"XGetIconName","","",N,N],[5,"XGetInputFocus","","",N,N],[5,"XGetKeyboardControl","","",N,N],[5,"XGetPointerControl","","",N,N],[5,"XGetPointerMapping","","",N,N],[5,"XGetScreenSaver","","",N,N],[5,"XGetTransientForHint","","",N,N],[5,"XGetWindowProperty","","",N,N],[5,"XGetWindowAttributes","","",N,N],[5,"XGrabButton","","",N,N],[5,"XGrabKey","","",N,N],[5,"XGrabKeyboard","","",N,N],[5,"XGrabPointer","","",N,N],[5,"XGrabServer","","",N,N],[5,"XHeightMMOfScreen","","",N,N],[5,"XHeightOfScreen","","",N,N],[5,"XIfEvent","","",N,N],[5,"XImageByteOrder","","",N,N],[5,"XInstallColormap","","",N,N],[5,"XKeysymToKeycode","","",N,N],[5,"XKillClient","","",N,N],[5,"XLookupColor","","",N,N],[5,"XLowerWindow","","",N,N],[5,"XMapRaised","","",N,N],[5,"XMapSubwindows","","",N,N],[5,"XMapWindow","","",N,N],[5,"XMaskEvent","","",N,N],[5,"XMaxCmapsOfScreen","","",N,N],[5,"XMinCmapsOfScreen","","",N,N],[5,"XMoveResizeWindow","","",N,N],[5,"XMoveWindow","","",N,N],[5,"XNextEvent","","",N,N],[5,"XNoOp","","",N,N],[5,"XParseColor","","",N,N],[5,"XParseGeometry","","",N,N],[5,"XPeekEvent","","",N,N],[5,"XPeekIfEvent","","",N,N],[5,"XPending","","",N,N],[5,"XPlanesOfScreen","","",N,N],[5,"XProtocolRevision","","",N,N],[5,"XProtocolVersion","","",N,N],[5,"XPutBackEvent","","",N,N],[5,"XPutImage","","",N,N],[5,"XQLength","","",N,N],[5,"XQueryBestCursor","","",N,N],[5,"XQueryBestSize","","",N,N],[5,"XQueryBestStipple","","",N,N],[5,"XQueryBestTile","","",N,N],[5,"XQueryColor","","",N,N],[5,"XQueryColors","","",N,N],[5,"XQueryExtension","","",N,N],[5,"XQueryKeymap","","",N,N],[5,"XQueryPointer","","",N,N],[5,"XQueryTextExtents","","",N,N],[5,"XQueryTextExtents16","","",N,N],[5,"XQueryTree","","",N,N],[5,"XRaiseWindow","","",N,N],[5,"XReadBitmapFile","","",N,N],[5,"XReadBitmapFileData","","",N,N],[5,"XRebindKeysym","","",N,N],[5,"XRecolorCursor","","",N,N],[5,"XRefreshKeyboardMapping","","",N,N],[5,"XRemoveFromSaveSet","","",N,N],[5,"XRemoveHost","","",N,N],[5,"XRemoveHosts","","",N,N],[5,"XReparentWindow","","",N,N],[5,"XResetScreenSaver","","",N,N],[5,"XResizeWindow","","",N,N],[5,"XRestackWindows","","",N,N],[5,"XRotateBuffers","","",N,N],[5,"XRotateWindowProperties","","",N,N],[5,"XScreenCount","","",N,N],[5,"XSelectInput","","",N,N],[5,"XSendEvent","","",N,N],[5,"XSetAccessControl","","",N,N],[5,"XSetArcMode","","",N,N],[5,"XSetBackground","","",N,N],[5,"XSetClipMask","","",N,N],[5,"XSetClipOrigin","","",N,N],[5,"XSetClipRectangles","","",N,N],[5,"XSetCloseDownMode","","",N,N],[5,"XSetCommand","","",N,N],[5,"XSetDashes","","",N,N],[5,"XSetFillRule","","",N,N],[5,"XSetFillStyle","","",N,N],[5,"XSetFont","","",N,N],[5,"XSetFontPath","","",N,N],[5,"XSetForeground","","",N,N],[5,"XSetFunction","","",N,N],[5,"XSetGraphicsExposures","","",N,N],[5,"XSetIconName","","",N,N],[5,"XSetInputFocus","","",N,N],[5,"XSetLineAttributes","","",N,N],[5,"XSetModifierMapping","","",N,N],[5,"XSetPlaneMask","","",N,N],[5,"XSetPointerMapping","","",N,N],[5,"XSetScreenSaver","","",N,N],[5,"XSetSelectionOwner","","",N,N],[5,"XSetState","","",N,N],[5,"XSetStipple","","",N,N],[5,"XSetSubwindowMode","","",N,N],[5,"XSetTSOrigin","","",N,N],[5,"XSetTile","","",N,N],[5,"XSetWindowBackground","","",N,N],[5,"XSetWindowBackgroundPixmap","","",N,N],[5,"XSetWindowBorder","","",N,N],[5,"XSetWindowBorderPixmap","","",N,N],[5,"XSetWindowBorderWidth","","",N,N],[5,"XSetWindowColormap","","",N,N],[5,"XStoreBuffer","","",N,N],[5,"XStoreBytes","","",N,N],[5,"XStoreColor","","",N,N],[5,"XStoreColors","","",N,N],[5,"XStoreName","","",N,N],[5,"XStoreNamedColor","","",N,N],[5,"XSync","","",N,N],[5,"XTextExtents","","",N,N],[5,"XTextExtents16","","",N,N],[5,"XTextWidth","","",N,N],[5,"XTextWidth16","","",N,N],[5,"XTranslateCoordinates","","",N,N],[5,"XUndefineCursor","","",N,N],[5,"XUngrabButton","","",N,N],[5,"XUngrabKey","","",N,N],[5,"XUngrabKeyboard","","",N,N],[5,"XUngrabPointer","","",N,N],[5,"XUngrabServer","","",N,N],[5,"XUninstallColormap","","",N,N],[5,"XUnloadFont","","",N,N],[5,"XUnmapSubwindows","","",N,N],[5,"XUnmapWindow","","",N,N],[5,"XVendorRelease","","",N,N],[5,"XWarpPointer","","",N,N],[5,"XWidthMMOfScreen","","",N,N],[5,"XWidthOfScreen","","",N,N],[5,"XWindowEvent","","",N,N],[5,"XWriteBitmapFile","","",N,N],[5,"XSupportsLocale","","",N,N],[5,"XSetLocaleModifiers","","",N,N],[5,"XOpenOM","","",N,N],[5,"XCloseOM","","",N,N],[5,"XSetOMValues","","",N,N],[5,"XGetOMValues","","",N,N],[5,"XDisplayOfOM","","",N,N],[5,"XLocaleOfOM","","",N,N],[5,"XCreateOC","","",N,N],[5,"XDestroyOC","","",N,N],[5,"XOMOfOC","","",N,N],[5,"XSetOCValues","","",N,N],[5,"XGetOCValues","","",N,N],[5,"XCreateFontSet","","",N,N],[5,"XFreeFontSet","","",N,N],[5,"XFontsOfFontSet","","",N,N],[5,"XBaseFontNameListOfFontSet","","",N,N],[5,"XLocaleOfFontSet","","",N,N],[5,"XContextDependentDrawing","","",N,N],[5,"XDirectionalDependentDrawing","","",N,N],[5,"XContextualDrawing","","",N,N],[5,"XExtentsOfFontSet","","",N,N],[5,"XmbTextEscapement","","",N,N],[5,"XwcTextEscapement","","",N,N],[5,"Xutf8TextEscapement","","",N,N],[5,"XmbTextExtents","","",N,N],[5,"XwcTextExtents","","",N,N],[5,"Xutf8TextExtents","","",N,N],[5,"XmbTextPerCharExtents","","",N,N],[5,"XwcTextPerCharExtents","","",N,N],[5,"Xutf8TextPerCharExtents","","",N,N],[5,"XmbDrawText","","",N,N],[5,"XwcDrawText","","",N,N],[5,"Xutf8DrawText","","",N,N],[5,"XmbDrawString","","",N,N],[5,"XwcDrawString","","",N,N],[5,"Xutf8DrawString","","",N,N],[5,"XmbDrawImageString","","",N,N],[5,"XwcDrawImageString","","",N,N],[5,"Xutf8DrawImageString","","",N,N],[5,"XOpenIM","","",N,N],[5,"XCloseIM","","",N,N],[5,"XGetIMValues","","",N,N],[5,"XSetIMValues","","",N,N],[5,"XDisplayOfIM","","",N,N],[5,"XLocaleOfIM","","",N,N],[5,"XCreateIC","","",N,N],[5,"XDestroyIC","","",N,N],[5,"XSetICFocus","","",N,N],[5,"XUnsetICFocus","","",N,N],[5,"XwcResetIC","","",N,N],[5,"XmbResetIC","","",N,N],[5,"Xutf8ResetIC","","",N,N],[5,"XSetICValues","","",N,N],[5,"XGetICValues","","",N,N],[5,"XIMOfIC","","",N,N],[5,"XFilterEvent","","",N,N],[5,"XmbLookupString","","",N,N],[5,"XwcLookupString","","",N,N],[5,"Xutf8LookupString","","",N,N],[5,"XVaCreateNestedList","","",N,N],[5,"XRegisterIMInstantiateCallback","","",N,N],[5,"XUnregisterIMInstantiateCallback","","",N,N],[5,"XInternalConnectionNumbers","","",N,N],[5,"XProcessInternalConnection","","",N,N],[5,"XAddConnectionWatch","","",N,N],[5,"XRemoveConnectionWatch","","",N,N],[5,"XSetAuthorization","","",N,N],[5,"_Xmbtowc","","",N,N],[5,"_Xwctomb","","",N,N],[5,"XGetEventData","","",N,N],[5,"XFreeEventData","","",N,N],[5,"SDL_GetWindowWMInfo","","\\brief This function allows access to driver-dependent window information.",N,N],[5,"SDL_Vulkan_LoadLibrary","","\\brief Dynamically load a Vulkan loader library.",N,N],[5,"SDL_Vulkan_GetVkGetInstanceProcAddr","","\\brief Get the address of the \\c vkGetInstanceProcAddr function.",N,N],[5,"SDL_Vulkan_UnloadLibrary","","\\brief Unload the Vulkan loader library previously loaded by        \\c SDL_Vulkan_LoadLibrary().",N,N],[5,"SDL_Vulkan_GetInstanceExtensions","","\\brief Get the names of the Vulkan instance extensions needed to create        a surface with \\c SDL_Vulkan_CreateSurface().",N,N],[5,"SDL_Vulkan_CreateSurface","","\\brief Create a Vulkan rendering surface for a window.",N,N],[5,"SDL_Vulkan_GetDrawableSize","","\\brief Get the size of a window's underlying drawable in pixels (for use         with setting viewport, scissor & etc).",N,N],[0,"mixer","","",N,N],[3,"Mix_Chunk","sdl2_sys::mixer","",N,N],[12,"allocated","","",249,N],[12,"abuf","","",249,N],[12,"alen","","",249,N],[12,"volume","","",249,N],[3,"_Mix_Music","","",N,N],[5,"Mix_Linked_Version","","",N,N],[5,"Mix_Init","","",N,N],[5,"Mix_Quit","","",N,N],[5,"Mix_OpenAudio","","",N,N],[5,"Mix_OpenAudioDevice","","",N,N],[5,"Mix_AllocateChannels","","",N,N],[5,"Mix_QuerySpec","","",N,N],[5,"Mix_LoadWAV_RW","","",N,N],[5,"Mix_LoadMUS","","",N,N],[5,"Mix_LoadMUS_RW","","",N,N],[5,"Mix_LoadMUSType_RW","","",N,N],[5,"Mix_QuickLoad_WAV","","",N,N],[5,"Mix_QuickLoad_RAW","","",N,N],[5,"Mix_FreeChunk","","",N,N],[5,"Mix_FreeMusic","","",N,N],[5,"Mix_GetNumChunkDecoders","","",N,N],[5,"Mix_GetChunkDecoder","","",N,N],[5,"Mix_HasChunkDecoder","","",N,N],[5,"Mix_GetNumMusicDecoders","","",N,N],[5,"Mix_GetMusicDecoder","","",N,N],[5,"Mix_HasMusicDecoder","","",N,N],[5,"Mix_GetMusicType","","",N,N],[5,"Mix_SetPostMix","","",N,N],[5,"Mix_HookMusic","","",N,N],[5,"Mix_HookMusicFinished","","",N,N],[5,"Mix_GetMusicHookData","","",N,N],[5,"Mix_ChannelFinished","","",N,N],[5,"Mix_RegisterEffect","","",N,N],[5,"Mix_UnregisterEffect","","",N,N],[5,"Mix_UnregisterAllEffects","","",N,N],[5,"Mix_SetPanning","","",N,N],[5,"Mix_SetPosition","","",N,N],[5,"Mix_SetDistance","","",N,N],[5,"Mix_SetReverseStereo","","",N,N],[5,"Mix_ReserveChannels","","",N,N],[5,"Mix_GroupChannel","","",N,N],[5,"Mix_GroupChannels","","",N,N],[5,"Mix_GroupAvailable","","",N,N],[5,"Mix_GroupCount","","",N,N],[5,"Mix_GroupOldest","","",N,N],[5,"Mix_GroupNewer","","",N,N],[5,"Mix_PlayChannelTimed","","",N,N],[5,"Mix_PlayMusic","","",N,N],[5,"Mix_FadeInMusic","","",N,N],[5,"Mix_FadeInMusicPos","","",N,N],[5,"Mix_FadeInChannelTimed","","",N,N],[5,"Mix_Volume","","",N,N],[5,"Mix_VolumeChunk","","",N,N],[5,"Mix_VolumeMusic","","",N,N],[5,"Mix_HaltChannel","","",N,N],[5,"Mix_HaltGroup","","",N,N],[5,"Mix_HaltMusic","","",N,N],[5,"Mix_ExpireChannel","","",N,N],[5,"Mix_FadeOutChannel","","",N,N],[5,"Mix_FadeOutGroup","","",N,N],[5,"Mix_FadeOutMusic","","",N,N],[5,"Mix_FadingMusic","","",N,N],[5,"Mix_FadingChannel","","",N,N],[5,"Mix_Pause","","",N,N],[5,"Mix_Resume","","",N,N],[5,"Mix_Paused","","",N,N],[5,"Mix_PauseMusic","","",N,N],[5,"Mix_ResumeMusic","","",N,N],[5,"Mix_RewindMusic","","",N,N],[5,"Mix_PausedMusic","","",N,N],[5,"Mix_SetMusicPosition","","",N,N],[5,"Mix_Playing","","",N,N],[5,"Mix_PlayingMusic","","",N,N],[5,"Mix_SetMusicCMD","","",N,N],[5,"Mix_SetSynchroValue","","",N,N],[5,"Mix_GetSynchroValue","","",N,N],[5,"Mix_SetSoundFonts","","",N,N],[5,"Mix_GetSoundFonts","","",N,N],[5,"Mix_EachSoundFont","","",N,N],[5,"Mix_GetChunk","","",N,N],[5,"Mix_CloseAudio","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"Uint8","","",N,N],[6,"Sint16","","",N,N],[6,"Uint16","","",N,N],[6,"Uint32","","",N,N],[6,"Sint64","","",N,N],[6,"MIX_InitFlags","","",N,N],[6,"Mix_Fading","","",N,N],[6,"Mix_MusicType","","",N,N],[6,"Mix_Music","","",N,N],[6,"Mix_EffectFunc_t","","",N,N],[6,"Mix_EffectDone_t","","",N,N],[17,"MIX_MAJOR_VERSION","","",N,N],[17,"MIX_MINOR_VERSION","","",N,N],[17,"MIX_PATCHLEVEL","","",N,N],[17,"MIX_CHANNELS","","",N,N],[17,"MIX_DEFAULT_FREQUENCY","","",N,N],[17,"MIX_DEFAULT_FORMAT","","",N,N],[17,"MIX_DEFAULT_CHANNELS","","",N,N],[17,"MIX_MAX_VOLUME","","",N,N],[17,"MIX_CHANNEL_POST","","",N,N],[17,"MIX_EFFECTSMAXSPEED","","",N,N],[17,"MIX_InitFlags_MIX_INIT_FLAC","","",N,N],[17,"MIX_InitFlags_MIX_INIT_MOD","","",N,N],[17,"MIX_InitFlags_MIX_INIT_MP3","","",N,N],[17,"MIX_InitFlags_MIX_INIT_OGG","","",N,N],[17,"MIX_InitFlags_MIX_INIT_MID","","",N,N],[17,"Mix_Fading_MIX_NO_FADING","","",N,N],[17,"Mix_Fading_MIX_FADING_OUT","","",N,N],[17,"Mix_Fading_MIX_FADING_IN","","",N,N],[17,"Mix_MusicType_MUS_NONE","","",N,N],[17,"Mix_MusicType_MUS_CMD","","",N,N],[17,"Mix_MusicType_MUS_WAV","","",N,N],[17,"Mix_MusicType_MUS_MOD","","",N,N],[17,"Mix_MusicType_MUS_MID","","",N,N],[17,"Mix_MusicType_MUS_OGG","","",N,N],[17,"Mix_MusicType_MUS_MP3","","",N,N],[17,"Mix_MusicType_MUS_MP3_MAD_UNUSED","","",N,N],[17,"Mix_MusicType_MUS_FLAC","","",N,N],[17,"Mix_MusicType_MUS_MODPLUG_UNUSED","","",N,N],[0,"image","sdl2_sys","",N,N],[5,"IMG_Linked_Version","sdl2_sys::image","",N,N],[5,"IMG_Init","","",N,N],[5,"IMG_Quit","","",N,N],[5,"IMG_LoadTyped_RW","","",N,N],[5,"IMG_Load","","",N,N],[5,"IMG_Load_RW","","",N,N],[5,"IMG_LoadTexture","","",N,N],[5,"IMG_LoadTexture_RW","","",N,N],[5,"IMG_LoadTextureTyped_RW","","",N,N],[5,"IMG_isICO","","",N,N],[5,"IMG_isCUR","","",N,N],[5,"IMG_isBMP","","",N,N],[5,"IMG_isGIF","","",N,N],[5,"IMG_isJPG","","",N,N],[5,"IMG_isLBM","","",N,N],[5,"IMG_isPCX","","",N,N],[5,"IMG_isPNG","","",N,N],[5,"IMG_isPNM","","",N,N],[5,"IMG_isSVG","","",N,N],[5,"IMG_isTIF","","",N,N],[5,"IMG_isXCF","","",N,N],[5,"IMG_isXPM","","",N,N],[5,"IMG_isXV","","",N,N],[5,"IMG_isWEBP","","",N,N],[5,"IMG_LoadICO_RW","","",N,N],[5,"IMG_LoadCUR_RW","","",N,N],[5,"IMG_LoadBMP_RW","","",N,N],[5,"IMG_LoadGIF_RW","","",N,N],[5,"IMG_LoadJPG_RW","","",N,N],[5,"IMG_LoadLBM_RW","","",N,N],[5,"IMG_LoadPCX_RW","","",N,N],[5,"IMG_LoadPNG_RW","","",N,N],[5,"IMG_LoadPNM_RW","","",N,N],[5,"IMG_LoadSVG_RW","","",N,N],[5,"IMG_LoadTGA_RW","","",N,N],[5,"IMG_LoadTIF_RW","","",N,N],[5,"IMG_LoadXCF_RW","","",N,N],[5,"IMG_LoadXPM_RW","","",N,N],[5,"IMG_LoadXV_RW","","",N,N],[5,"IMG_LoadWEBP_RW","","",N,N],[5,"IMG_ReadXPMFromArray","","",N,N],[5,"IMG_SavePNG","","",N,N],[5,"IMG_SavePNG_RW","","",N,N],[5,"IMG_SaveJPG","","",N,N],[5,"IMG_SaveJPG_RW","","",N,N],[6,"__uint8_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"Uint8","","",N,N],[6,"Uint32","","",N,N],[6,"Sint64","","",N,N],[6,"IMG_InitFlags","","",N,N],[17,"IMG_InitFlags_IMG_INIT_JPG","","",N,N],[17,"IMG_InitFlags_IMG_INIT_PNG","","",N,N],[17,"IMG_InitFlags_IMG_INIT_TIF","","",N,N],[17,"IMG_InitFlags_IMG_INIT_WEBP","","",N,N],[0,"ttf","sdl2_sys","",N,N],[3,"_TTF_Font","sdl2_sys::ttf","",N,N],[5,"TTF_Linked_Version","","",N,N],[5,"TTF_ByteSwappedUNICODE","","",N,N],[5,"TTF_Init","","",N,N],[5,"TTF_OpenFont","","",N,N],[5,"TTF_OpenFontIndex","","",N,N],[5,"TTF_OpenFontRW","","",N,N],[5,"TTF_OpenFontIndexRW","","",N,N],[5,"TTF_GetFontStyle","","",N,N],[5,"TTF_SetFontStyle","","",N,N],[5,"TTF_GetFontOutline","","",N,N],[5,"TTF_SetFontOutline","","",N,N],[5,"TTF_GetFontHinting","","",N,N],[5,"TTF_SetFontHinting","","",N,N],[5,"TTF_FontHeight","","",N,N],[5,"TTF_FontAscent","","",N,N],[5,"TTF_FontDescent","","",N,N],[5,"TTF_FontLineSkip","","",N,N],[5,"TTF_GetFontKerning","","",N,N],[5,"TTF_SetFontKerning","","",N,N],[5,"TTF_FontFaces","","",N,N],[5,"TTF_FontFaceIsFixedWidth","","",N,N],[5,"TTF_FontFaceFamilyName","","",N,N],[5,"TTF_FontFaceStyleName","","",N,N],[5,"TTF_GlyphIsProvided","","",N,N],[5,"TTF_GlyphMetrics","","",N,N],[5,"TTF_SizeText","","",N,N],[5,"TTF_SizeUTF8","","",N,N],[5,"TTF_SizeUNICODE","","",N,N],[5,"TTF_RenderText_Solid","","",N,N],[5,"TTF_RenderUTF8_Solid","","",N,N],[5,"TTF_RenderUNICODE_Solid","","",N,N],[5,"TTF_RenderGlyph_Solid","","",N,N],[5,"TTF_RenderText_Shaded","","",N,N],[5,"TTF_RenderUTF8_Shaded","","",N,N],[5,"TTF_RenderUNICODE_Shaded","","",N,N],[5,"TTF_RenderGlyph_Shaded","","",N,N],[5,"TTF_RenderText_Blended","","",N,N],[5,"TTF_RenderUTF8_Blended","","",N,N],[5,"TTF_RenderUNICODE_Blended","","",N,N],[5,"TTF_RenderText_Blended_Wrapped","","",N,N],[5,"TTF_RenderUTF8_Blended_Wrapped","","",N,N],[5,"TTF_RenderUNICODE_Blended_Wrapped","","",N,N],[5,"TTF_RenderGlyph_Blended","","",N,N],[5,"TTF_CloseFont","","",N,N],[5,"TTF_Quit","","",N,N],[5,"TTF_WasInit","","",N,N],[5,"TTF_GetFontKerningSize","","",N,N],[5,"TTF_GetFontKerningSizeGlyphs","","",N,N],[6,"__uint8_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"Uint8","","",N,N],[6,"Uint16","","",N,N],[6,"Uint32","","",N,N],[6,"Sint64","","",N,N],[6,"TTF_Font","","",N,N],[17,"TTF_MAJOR_VERSION","","",N,N],[17,"TTF_MINOR_VERSION","","",N,N],[17,"TTF_PATCHLEVEL","","",N,N],[17,"TTF_STYLE_NORMAL","","",N,N],[17,"TTF_STYLE_BOLD","","",N,N],[17,"TTF_STYLE_ITALIC","","",N,N],[17,"TTF_STYLE_UNDERLINE","","",N,N],[17,"TTF_STYLE_STRIKETHROUGH","","",N,N],[17,"TTF_HINTING_NORMAL","","",N,N],[17,"TTF_HINTING_LIGHT","","",N,N],[17,"TTF_HINTING_MONO","","",N,N],[17,"TTF_HINTING_NONE","","",N,N],[0,"gfx","sdl2_sys","",N,N],[0,"primitives","sdl2_sys::gfx","",N,N],[5,"pixelColor","sdl2_sys::gfx::primitives","",N,N],[5,"pixelRGBA","","",N,N],[5,"hlineColor","","",N,N],[5,"hlineRGBA","","",N,N],[5,"vlineColor","","",N,N],[5,"vlineRGBA","","",N,N],[5,"rectangleColor","","",N,N],[5,"rectangleRGBA","","",N,N],[5,"roundedRectangleColor","","",N,N],[5,"roundedRectangleRGBA","","",N,N],[5,"boxColor","","",N,N],[5,"boxRGBA","","",N,N],[5,"roundedBoxColor","","",N,N],[5,"roundedBoxRGBA","","",N,N],[5,"lineColor","","",N,N],[5,"lineRGBA","","",N,N],[5,"aalineColor","","",N,N],[5,"aalineRGBA","","",N,N],[5,"thickLineColor","","",N,N],[5,"thickLineRGBA","","",N,N],[5,"circleColor","","",N,N],[5,"circleRGBA","","",N,N],[5,"arcColor","","",N,N],[5,"arcRGBA","","",N,N],[5,"aacircleColor","","",N,N],[5,"aacircleRGBA","","",N,N],[5,"filledCircleColor","","",N,N],[5,"filledCircleRGBA","","",N,N],[5,"ellipseColor","","",N,N],[5,"ellipseRGBA","","",N,N],[5,"aaellipseColor","","",N,N],[5,"aaellipseRGBA","","",N,N],[5,"filledEllipseColor","","",N,N],[5,"filledEllipseRGBA","","",N,N],[5,"pieColor","","",N,N],[5,"pieRGBA","","",N,N],[5,"filledPieColor","","",N,N],[5,"filledPieRGBA","","",N,N],[5,"trigonColor","","",N,N],[5,"trigonRGBA","","",N,N],[5,"aatrigonColor","","",N,N],[5,"aatrigonRGBA","","",N,N],[5,"filledTrigonColor","","",N,N],[5,"filledTrigonRGBA","","",N,N],[5,"polygonColor","","",N,N],[5,"polygonRGBA","","",N,N],[5,"aapolygonColor","","",N,N],[5,"aapolygonRGBA","","",N,N],[5,"filledPolygonColor","","",N,N],[5,"filledPolygonRGBA","","",N,N],[5,"texturedPolygon","","",N,N],[5,"bezierColor","","",N,N],[5,"bezierRGBA","","",N,N],[5,"gfxPrimitivesSetFont","","",N,N],[5,"gfxPrimitivesSetFontRotation","","",N,N],[5,"characterColor","","",N,N],[5,"characterRGBA","","",N,N],[5,"stringColor","","",N,N],[5,"stringRGBA","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"Uint8","","",N,N],[6,"Sint16","","",N,N],[6,"Uint32","","",N,N],[0,"framerate","sdl2_sys::gfx","",N,N],[3,"FPSmanager","sdl2_sys::gfx::framerate","",N,N],[12,"framecount","","",250,N],[12,"rateticks","","",250,N],[12,"baseticks","","",250,N],[12,"lastticks","","",250,N],[12,"rate","","",250,N],[5,"SDL_initFramerate","","",N,N],[5,"SDL_setFramerate","","",N,N],[5,"SDL_getFramerate","","",N,N],[5,"SDL_getFramecount","","",N,N],[5,"SDL_framerateDelay","","",N,N],[6,"__uint32_t","","",N,N],[6,"Uint32","","",N,N],[17,"FPS_UPPER_LIMIT","","",N,N],[17,"FPS_LOWER_LIMIT","","",N,N],[17,"FPS_DEFAULT","","",N,N],[0,"imagefilter","sdl2_sys::gfx","",N,N],[5,"SDL_imageFilterMMXdetect","sdl2_sys::gfx::imagefilter","",N,N],[5,"SDL_imageFilterMMXoff","","",N,N],[5,"SDL_imageFilterMMXon","","",N,N],[5,"SDL_imageFilterAdd","","",N,N],[5,"SDL_imageFilterMean","","",N,N],[5,"SDL_imageFilterSub","","",N,N],[5,"SDL_imageFilterAbsDiff","","",N,N],[5,"SDL_imageFilterMult","","",N,N],[5,"SDL_imageFilterMultNor","","",N,N],[5,"SDL_imageFilterMultDivby2","","",N,N],[5,"SDL_imageFilterMultDivby4","","",N,N],[5,"SDL_imageFilterBitAnd","","",N,N],[5,"SDL_imageFilterBitOr","","",N,N],[5,"SDL_imageFilterDiv","","",N,N],[5,"SDL_imageFilterBitNegation","","",N,N],[5,"SDL_imageFilterAddByte","","",N,N],[5,"SDL_imageFilterAddUint","","",N,N],[5,"SDL_imageFilterAddByteToHalf","","",N,N],[5,"SDL_imageFilterSubByte","","",N,N],[5,"SDL_imageFilterSubUint","","",N,N],[5,"SDL_imageFilterShiftRight","","",N,N],[5,"SDL_imageFilterShiftRightUint","","",N,N],[5,"SDL_imageFilterMultByByte","","",N,N],[5,"SDL_imageFilterShiftRightAndMultByByte","","",N,N],[5,"SDL_imageFilterShiftLeftByte","","",N,N],[5,"SDL_imageFilterShiftLeftUint","","",N,N],[5,"SDL_imageFilterShiftLeft","","",N,N],[5,"SDL_imageFilterBinarizeUsingThreshold","","",N,N],[5,"SDL_imageFilterClipToRange","","",N,N],[5,"SDL_imageFilterNormalizeLinear","","",N,N],[0,"rotozoom","sdl2_sys::gfx","",N,N],[5,"rotozoomSurface","sdl2_sys::gfx::rotozoom","",N,N],[5,"rotozoomSurfaceXY","","",N,N],[5,"rotozoomSurfaceSize","","",N,N],[5,"rotozoomSurfaceSizeXY","","",N,N],[5,"zoomSurface","","",N,N],[5,"zoomSurfaceSize","","",N,N],[5,"shrinkSurface","","",N,N],[5,"rotateSurface90Degrees","","",N,N],[6,"__uint8_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"Uint8","","",N,N],[6,"Uint32","","",N,N],[6,"wchar_t","sdl2_sys","",N,N],[6,"va_list","","",N,N],[6,"__gnuc_va_list","","",N,N],[6,"__u_char","","",N,N],[6,"__u_short","","",N,N],[6,"__u_int","","",N,N],[6,"__u_long","","",N,N],[6,"__int8_t","","",N,N],[6,"__uint8_t","","",N,N],[6,"__int16_t","","",N,N],[6,"__uint16_t","","",N,N],[6,"__int32_t","","",N,N],[6,"__uint32_t","","",N,N],[6,"__int64_t","","",N,N],[6,"__uint64_t","","",N,N],[6,"__int_least8_t","","",N,N],[6,"__uint_least8_t","","",N,N],[6,"__int_least16_t","","",N,N],[6,"__uint_least16_t","","",N,N],[6,"__int_least32_t","","",N,N],[6,"__uint_least32_t","","",N,N],[6,"__int_least64_t","","",N,N],[6,"__uint_least64_t","","",N,N],[6,"__quad_t","","",N,N],[6,"__u_quad_t","","",N,N],[6,"__intmax_t","","",N,N],[6,"__uintmax_t","","",N,N],[6,"__dev_t","","",N,N],[6,"__uid_t","","",N,N],[6,"__gid_t","","",N,N],[6,"__ino_t","","",N,N],[6,"__ino64_t","","",N,N],[6,"__mode_t","","",N,N],[6,"__nlink_t","","",N,N],[6,"__off_t","","",N,N],[6,"__off64_t","","",N,N],[6,"__pid_t","","",N,N],[6,"__clock_t","","",N,N],[6,"__rlim_t","","",N,N],[6,"__rlim64_t","","",N,N],[6,"__id_t","","",N,N],[6,"__time_t","","",N,N],[6,"__useconds_t","","",N,N],[6,"__suseconds_t","","",N,N],[6,"__daddr_t","","",N,N],[6,"__key_t","","",N,N],[6,"__clockid_t","","",N,N],[6,"__timer_t","","",N,N],[6,"__blksize_t","","",N,N],[6,"__blkcnt_t","","",N,N],[6,"__blkcnt64_t","","",N,N],[6,"__fsblkcnt_t","","",N,N],[6,"__fsblkcnt64_t","","",N,N],[6,"__fsfilcnt_t","","",N,N],[6,"__fsfilcnt64_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"__ssize_t","","",N,N],[6,"__syscall_slong_t","","",N,N],[6,"__syscall_ulong_t","","",N,N],[6,"__loff_t","","",N,N],[6,"__caddr_t","","",N,N],[6,"__intptr_t","","",N,N],[6,"__socklen_t","","",N,N],[6,"__sig_atomic_t","","",N,N],[6,"int_least8_t","","",N,N],[6,"int_least16_t","","",N,N],[6,"int_least32_t","","",N,N],[6,"int_least64_t","","",N,N],[6,"uint_least8_t","","",N,N],[6,"uint_least16_t","","",N,N],[6,"uint_least32_t","","",N,N],[6,"uint_least64_t","","",N,N],[6,"int_fast8_t","","",N,N],[6,"int_fast16_t","","",N,N],[6,"int_fast32_t","","",N,N],[6,"int_fast64_t","","",N,N],[6,"uint_fast8_t","","",N,N],[6,"uint_fast16_t","","",N,N],[6,"uint_fast32_t","","",N,N],[6,"uint_fast64_t","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"Sint8","","",N,N],[6,"Uint8","","",N,N],[6,"Sint16","","",N,N],[6,"Uint16","","",N,N],[6,"Sint32","","",N,N],[6,"Uint32","","",N,N],[6,"Sint64","","",N,N],[6,"Uint64","","",N,N],[6,"SDL_compile_time_assert_uint8","","",N,N],[6,"SDL_compile_time_assert_sint8","","",N,N],[6,"SDL_compile_time_assert_uint16","","",N,N],[6,"SDL_compile_time_assert_sint16","","",N,N],[6,"SDL_compile_time_assert_uint32","","",N,N],[6,"SDL_compile_time_assert_sint32","","",N,N],[6,"SDL_compile_time_assert_uint64","","",N,N],[6,"SDL_compile_time_assert_sint64","","",N,N],[6,"SDL_compile_time_assert_enum","","",N,N],[6,"SDL_malloc_func","","",N,N],[6,"SDL_calloc_func","","",N,N],[6,"SDL_realloc_func","","",N,N],[6,"SDL_free_func","","",N,N],[6,"SDL_iconv_t","","",N,N],[6,"SDL_AssertionHandler","","",N,N],[6,"SDL_SpinLock","","",N,N],[6,"SDL_sem","","",N,N],[6,"SDL_threadID","","",N,N],[6,"SDL_TLSID","","",N,N],[6,"SDL_ThreadFunction","","The function passed to SDL_CreateThread(). It is passed a void* user context parameter and returns an int.",N,N],[6,"SDL_AudioFormat","","\\brief Audio format flags.",N,N],[6,"SDL_AudioCallback","","This function is called when the audio device needs more data.",N,N],[6,"SDL_AudioFilter","","",N,N],[6,"SDL_AudioDeviceID","","SDL Audio Device IDs.",N,N],[6,"SDL_AudioStream","","",N,N],[6,"__m64","","",N,N],[6,"__v1di","","",N,N],[6,"__v2si","","",N,N],[6,"__v4hi","","",N,N],[6,"__v8qi","","",N,N],[6,"__v4si","","",N,N],[6,"__v4sf","","",N,N],[6,"__m128","","",N,N],[6,"__v4su","","",N,N],[6,"_Float32","","",N,N],[6,"_Float64","","",N,N],[6,"_Float32x","","",N,N],[6,"_Float64x","","",N,N],[6,"u_char","","",N,N],[6,"u_short","","",N,N],[6,"u_int","","",N,N],[6,"u_long","","",N,N],[6,"quad_t","","",N,N],[6,"u_quad_t","","",N,N],[6,"fsid_t","","",N,N],[6,"loff_t","","",N,N],[6,"ino_t","","",N,N],[6,"dev_t","","",N,N],[6,"gid_t","","",N,N],[6,"mode_t","","",N,N],[6,"nlink_t","","",N,N],[6,"uid_t","","",N,N],[6,"off_t","","",N,N],[6,"pid_t","","",N,N],[6,"id_t","","",N,N],[6,"daddr_t","","",N,N],[6,"caddr_t","","",N,N],[6,"key_t","","",N,N],[6,"clock_t","","",N,N],[6,"clockid_t","","",N,N],[6,"time_t","","",N,N],[6,"timer_t","","",N,N],[6,"ulong","","",N,N],[6,"ushort","","",N,N],[6,"uint","","",N,N],[6,"u_int8_t","","",N,N],[6,"u_int16_t","","",N,N],[6,"u_int32_t","","",N,N],[6,"u_int64_t","","",N,N],[6,"register_t","","",N,N],[6,"sigset_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__fd_mask","","",N,N],[6,"fd_mask","","",N,N],[6,"blksize_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"__pthread_list_t","","",N,N],[6,"pthread_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"pthread_once_t","","",N,N],[6,"pthread_spinlock_t","","",N,N],[6,"__compar_fn_t","","",N,N],[6,"__m128d","","",N,N],[6,"__m128i","","",N,N],[6,"__v2df","","",N,N],[6,"__v2di","","",N,N],[6,"__v8hi","","",N,N],[6,"__v16qi","","",N,N],[6,"__v2du","","",N,N],[6,"__v8hu","","",N,N],[6,"__v16qu","","",N,N],[6,"__v16qs","","",N,N],[6,"SDL_blit","","\\brief The type of function used for surface blitting functions.",N,N],[6,"SDL_GLContext","","\\brief An opaque handle to an OpenGL context.",N,N],[6,"SDL_HitTest","","\\brief Callback used for hit-testing.",N,N],[6,"SDL_Keycode","","\\brief The SDL virtual key representation.",N,N],[6,"SDL_Joystick","","",N,N],[6,"SDL_JoystickID","","This is a unique ID for a joystick for the time it is connected to the system, and is never reused for the lifetime of the application. If the joystick is disconnected and reconnected, it will get a new ID.",N,N],[6,"SDL_GameController","","",N,N],[6,"SDL_TouchID","","",N,N],[6,"SDL_FingerID","","",N,N],[6,"SDL_GestureID","","",N,N],[6,"SDL_EventFilter","","",N,N],[6,"SDL_Haptic","","",N,N],[6,"SDL_HintCallback","","\\brief type definition of the hint callback function.",N,N],[6,"SDL_LogOutputFunction","","\\brief The prototype for the log output function",N,N],[6,"SDL_Sensor","","",N,N],[6,"SDL_SensorID","","This is a unique ID for a sensor for the time it is connected to the system, and is never reused for the lifetime of the application.",N,N],[6,"SDL_TimerCallback","","Function prototype for the timer callback function.",N,N],[6,"SDL_TimerID","","Definition of the timer ID type.",N,N],[6,"XID","","",N,N],[6,"Mask","","",N,N],[6,"Atom","","",N,N],[6,"VisualID","","",N,N],[6,"Time","","",N,N],[6,"Window","","",N,N],[6,"Drawable","","",N,N],[6,"Font","","",N,N],[6,"Pixmap","","",N,N],[6,"Cursor","","",N,N],[6,"Colormap","","",N,N],[6,"GContext","","",N,N],[6,"KeySym","","",N,N],[6,"KeyCode","","",N,N],[6,"XPointer","","",N,N],[6,"XExtData","","",N,N],[6,"GC","","",N,N],[6,"XImage","","",N,N],[6,"Display","","",N,N],[6,"_XPrivDisplay","","",N,N],[6,"XKeyPressedEvent","","",N,N],[6,"XKeyReleasedEvent","","",N,N],[6,"XButtonPressedEvent","","",N,N],[6,"XButtonReleasedEvent","","",N,N],[6,"XPointerMovedEvent","","",N,N],[6,"XEnterWindowEvent","","",N,N],[6,"XLeaveWindowEvent","","",N,N],[6,"XFocusInEvent","","",N,N],[6,"XFocusOutEvent","","",N,N],[6,"XEvent","","",N,N],[6,"XOM","","",N,N],[6,"XOC","","",N,N],[6,"XFontSet","","",N,N],[6,"XIM","","",N,N],[6,"XIC","","",N,N],[6,"XIMProc","","",N,N],[6,"XICProc","","",N,N],[6,"XIDProc","","",N,N],[6,"XIMStyle","","",N,N],[6,"XVaNestedList","","",N,N],[6,"XIMFeedback","","",N,N],[6,"XIMText","","",N,N],[6,"XIMPreeditState","","",N,N],[6,"XIMPreeditStateNotifyCallbackStruct","","",N,N],[6,"XIMResetState","","",N,N],[6,"XIMStringConversionFeedback","","",N,N],[6,"XIMStringConversionText","","",N,N],[6,"XIMStringConversionPosition","","",N,N],[6,"XIMStringConversionType","","",N,N],[6,"XIMStringConversionOperation","","",N,N],[6,"XIMStringConversionCallbackStruct","","",N,N],[6,"XIMPreeditDrawCallbackStruct","","",N,N],[6,"XIMPreeditCaretCallbackStruct","","",N,N],[6,"XIMStatusDrawCallbackStruct","","",N,N],[6,"XIMHotKeyTrigger","","",N,N],[6,"XIMHotKeyTriggers","","",N,N],[6,"XIMHotKeyState","","",N,N],[6,"XErrorHandler","","",N,N],[6,"XIOErrorHandler","","",N,N],[6,"XConnectionWatchProc","","",N,N],[6,"SDL_vulkanInstance","","",N,N],[6,"SDL_vulkanSurface","","",N,N],[6,"VkInstance","","",N,N],[6,"VkSurfaceKHR","","",N,N],[6,"__builtin_va_list","","",N,N],[17,"__LINUX__","","",N,N],[17,"HAVE_STDARG_H","","",N,N],[17,"HAVE_STDDEF_H","","",N,N],[17,"HAVE_STDINT_H","","",N,N],[17,"HAVE_GCC_SYNC_LOCK_TEST_AND_SET","","",N,N],[17,"SDL_AUDIO_DRIVER_DUMMY","","",N,N],[17,"SDL_JOYSTICK_DISABLED","","",N,N],[17,"SDL_HAPTIC_DISABLED","","",N,N],[17,"SDL_SENSOR_DISABLED","","",N,N],[17,"SDL_LOADSO_DISABLED","","",N,N],[17,"SDL_THREADS_DISABLED","","",N,N],[17,"SDL_TIMERS_DISABLED","","",N,N],[17,"SDL_VIDEO_DRIVER_DUMMY","","",N,N],[17,"SDL_FILESYSTEM_DUMMY","","",N,N],[17,"__GNUC_VA_LIST","","",N,N],[17,"_STDINT_H","","",N,N],[17,"_FEATURES_H","","",N,N],[17,"_DEFAULT_SOURCE","","",N,N],[17,"__USE_ISOC11","","",N,N],[17,"__USE_ISOC99","","",N,N],[17,"__USE_ISOC95","","",N,N],[17,"__USE_POSIX_IMPLICITLY","","",N,N],[17,"_POSIX_SOURCE","","",N,N],[17,"_POSIX_C_SOURCE","","",N,N],[17,"__USE_POSIX","","",N,N],[17,"__USE_POSIX2","","",N,N],[17,"__USE_POSIX199309","","",N,N],[17,"__USE_POSIX199506","","",N,N],[17,"__USE_XOPEN2K","","",N,N],[17,"__USE_XOPEN2K8","","",N,N],[17,"_ATFILE_SOURCE","","",N,N],[17,"__USE_MISC","","",N,N],[17,"__USE_ATFILE","","",N,N],[17,"__USE_FORTIFY_LEVEL","","",N,N],[17,"__GLIBC_USE_DEPRECATED_GETS","","",N,N],[17,"_STDC_PREDEF_H","","",N,N],[17,"__STDC_IEC_559__","","",N,N],[17,"__STDC_IEC_559_COMPLEX__","","",N,N],[17,"__STDC_ISO_10646__","","",N,N],[17,"__GNU_LIBRARY__","","",N,N],[17,"__GLIBC__","","",N,N],[17,"__GLIBC_MINOR__","","",N,N],[17,"_SYS_CDEFS_H","","",N,N],[17,"__glibc_c99_flexarr_available","","",N,N],[17,"__WORDSIZE","","",N,N],[17,"__WORDSIZE_TIME64_COMPAT32","","",N,N],[17,"__SYSCALL_WORDSIZE","","",N,N],[17,"__HAVE_GENERIC_SELECTION","","",N,N],[17,"__GLIBC_USE_LIB_EXT2","","",N,N],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",N,N],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",N,N],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",N,N],[17,"_BITS_TYPES_H","","",N,N],[17,"_BITS_TYPESIZES_H","","",N,N],[17,"__OFF_T_MATCHES_OFF64_T","","",N,N],[17,"__INO_T_MATCHES_INO64_T","","",N,N],[17,"__RLIM_T_MATCHES_RLIM64_T","","",N,N],[17,"__FD_SETSIZE","","",N,N],[17,"_BITS_WCHAR_H","","",N,N],[17,"_BITS_STDINT_INTN_H","","",N,N],[17,"_BITS_STDINT_UINTN_H","","",N,N],[17,"INT8_MIN","","",N,N],[17,"INT16_MIN","","",N,N],[17,"INT32_MIN","","",N,N],[17,"INT8_MAX","","",N,N],[17,"INT16_MAX","","",N,N],[17,"INT32_MAX","","",N,N],[17,"UINT8_MAX","","",N,N],[17,"UINT16_MAX","","",N,N],[17,"UINT32_MAX","","",N,N],[17,"INT_LEAST8_MIN","","",N,N],[17,"INT_LEAST16_MIN","","",N,N],[17,"INT_LEAST32_MIN","","",N,N],[17,"INT_LEAST8_MAX","","",N,N],[17,"INT_LEAST16_MAX","","",N,N],[17,"INT_LEAST32_MAX","","",N,N],[17,"UINT_LEAST8_MAX","","",N,N],[17,"UINT_LEAST16_MAX","","",N,N],[17,"UINT_LEAST32_MAX","","",N,N],[17,"INT_FAST8_MIN","","",N,N],[17,"INT_FAST16_MIN","","",N,N],[17,"INT_FAST32_MIN","","",N,N],[17,"INT_FAST8_MAX","","",N,N],[17,"INT_FAST16_MAX","","",N,N],[17,"INT_FAST32_MAX","","",N,N],[17,"UINT_FAST8_MAX","","",N,N],[17,"UINT_FAST16_MAX","","",N,N],[17,"UINT_FAST32_MAX","","",N,N],[17,"INTPTR_MIN","","",N,N],[17,"INTPTR_MAX","","",N,N],[17,"UINTPTR_MAX","","",N,N],[17,"PTRDIFF_MIN","","",N,N],[17,"PTRDIFF_MAX","","",N,N],[17,"SIG_ATOMIC_MIN","","",N,N],[17,"SIG_ATOMIC_MAX","","",N,N],[17,"SIZE_MAX","","",N,N],[17,"WINT_MIN","","",N,N],[17,"WINT_MAX","","",N,N],[17,"SDL_PRIs64","","",N,N],[17,"SDL_PRIu64","","",N,N],[17,"SDL_PRIx64","","",N,N],[17,"SDL_PRIX64","","",N,N],[17,"M_PI","","",N,N],[17,"SDL_ASSERT_LEVEL","","",N,N],[17,"SDL_NULL_WHILE_LOOP_CONDITION","","",N,N],[17,"SDL_LIL_ENDIAN","","",N,N],[17,"SDL_BIG_ENDIAN","","",N,N],[17,"_ENDIAN_H","","",N,N],[17,"__LITTLE_ENDIAN","","",N,N],[17,"__BIG_ENDIAN","","",N,N],[17,"__PDP_ENDIAN","","",N,N],[17,"__BYTE_ORDER","","",N,N],[17,"__FLOAT_WORD_ORDER","","",N,N],[17,"LITTLE_ENDIAN","","",N,N],[17,"BIG_ENDIAN","","",N,N],[17,"PDP_ENDIAN","","",N,N],[17,"BYTE_ORDER","","",N,N],[17,"_BITS_BYTESWAP_H","","",N,N],[17,"_BITS_UINTN_IDENTITY_H","","",N,N],[17,"SDL_BYTEORDER","","",N,N],[17,"SDL_MUTEX_TIMEDOUT","","",N,N],[17,"SDL_RWOPS_UNKNOWN","","",N,N],[17,"SDL_RWOPS_WINFILE","","",N,N],[17,"SDL_RWOPS_STDFILE","","",N,N],[17,"SDL_RWOPS_JNIFILE","","",N,N],[17,"SDL_RWOPS_MEMORY","","",N,N],[17,"SDL_RWOPS_MEMORY_RO","","",N,N],[17,"RW_SEEK_SET","","",N,N],[17,"RW_SEEK_CUR","","",N,N],[17,"RW_SEEK_END","","",N,N],[17,"SDL_AUDIO_MASK_BITSIZE","","",N,N],[17,"SDL_AUDIO_MASK_DATATYPE","","",N,N],[17,"SDL_AUDIO_MASK_ENDIAN","","",N,N],[17,"SDL_AUDIO_MASK_SIGNED","","",N,N],[17,"AUDIO_U8","","",N,N],[17,"AUDIO_S8","","",N,N],[17,"AUDIO_U16LSB","","",N,N],[17,"AUDIO_S16LSB","","",N,N],[17,"AUDIO_U16MSB","","",N,N],[17,"AUDIO_S16MSB","","",N,N],[17,"AUDIO_U16","","",N,N],[17,"AUDIO_S16","","",N,N],[17,"AUDIO_S32LSB","","",N,N],[17,"AUDIO_S32MSB","","",N,N],[17,"AUDIO_S32","","",N,N],[17,"AUDIO_F32LSB","","",N,N],[17,"AUDIO_F32MSB","","",N,N],[17,"AUDIO_F32","","",N,N],[17,"AUDIO_U16SYS","","",N,N],[17,"AUDIO_S16SYS","","",N,N],[17,"AUDIO_S32SYS","","",N,N],[17,"AUDIO_F32SYS","","",N,N],[17,"SDL_AUDIO_ALLOW_FREQUENCY_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_FORMAT_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_CHANNELS_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_SAMPLES_CHANGE","","",N,N],[17,"SDL_AUDIO_ALLOW_ANY_CHANGE","","",N,N],[17,"SDL_AUDIOCVT_MAX_FILTERS","","",N,N],[17,"SDL_MIX_MAXVOLUME","","",N,N],[17,"_STDLIB_H","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"__W_CONTINUED","","",N,N],[17,"__WCOREFLAG","","",N,N],[17,"__HAVE_FLOAT128","","",N,N],[17,"__HAVE_DISTINCT_FLOAT128","","",N,N],[17,"__HAVE_FLOAT64X","","",N,N],[17,"__HAVE_FLOAT64X_LONG_DOUBLE","","",N,N],[17,"__HAVE_FLOAT16","","",N,N],[17,"__HAVE_FLOAT32","","",N,N],[17,"__HAVE_FLOAT64","","",N,N],[17,"__HAVE_FLOAT32X","","",N,N],[17,"__HAVE_FLOAT128X","","",N,N],[17,"__HAVE_DISTINCT_FLOAT16","","",N,N],[17,"__HAVE_DISTINCT_FLOAT32","","",N,N],[17,"__HAVE_DISTINCT_FLOAT64","","",N,N],[17,"__HAVE_DISTINCT_FLOAT32X","","",N,N],[17,"__HAVE_DISTINCT_FLOAT64X","","",N,N],[17,"__HAVE_DISTINCT_FLOAT128X","","",N,N],[17,"__HAVE_FLOATN_NOT_TYPEDEF","","",N,N],[17,"__ldiv_t_defined","","",N,N],[17,"__lldiv_t_defined","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"_SYS_TYPES_H","","",N,N],[17,"__clock_t_defined","","",N,N],[17,"__clockid_t_defined","","",N,N],[17,"__time_t_defined","","",N,N],[17,"__timer_t_defined","","",N,N],[17,"__BIT_TYPES_DEFINED__","","",N,N],[17,"_SYS_SELECT_H","","",N,N],[17,"__FD_ZERO_STOS","","",N,N],[17,"__sigset_t_defined","","",N,N],[17,"__timeval_defined","","",N,N],[17,"_STRUCT_TIMESPEC","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"_BITS_PTHREADTYPES_COMMON_H","","",N,N],[17,"_THREAD_SHARED_TYPES_H","","",N,N],[17,"_BITS_PTHREADTYPES_ARCH_H","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_ATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"__SIZEOF_PTHREAD_BARRIER_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T","","",N,N],[17,"__PTHREAD_MUTEX_LOCK_ELISION","","",N,N],[17,"__PTHREAD_MUTEX_NUSERS_AFTER_KIND","","",N,N],[17,"__PTHREAD_MUTEX_USE_UNION","","",N,N],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED","","",N,N],[17,"__PTHREAD_MUTEX_HAVE_PREV","","",N,N],[17,"__have_pthread_attr_t","","",N,N],[17,"_ALLOCA_H","","",N,N],[17,"_MM_HINT_ET0","","",N,N],[17,"_MM_HINT_ET1","","",N,N],[17,"_MM_HINT_T0","","",N,N],[17,"_MM_HINT_T1","","",N,N],[17,"_MM_HINT_T2","","",N,N],[17,"_MM_HINT_NTA","","",N,N],[17,"_MM_EXCEPT_INVALID","","",N,N],[17,"_MM_EXCEPT_DENORM","","",N,N],[17,"_MM_EXCEPT_DIV_ZERO","","",N,N],[17,"_MM_EXCEPT_OVERFLOW","","",N,N],[17,"_MM_EXCEPT_UNDERFLOW","","",N,N],[17,"_MM_EXCEPT_INEXACT","","",N,N],[17,"_MM_EXCEPT_MASK","","",N,N],[17,"_MM_MASK_INVALID","","",N,N],[17,"_MM_MASK_DENORM","","",N,N],[17,"_MM_MASK_DIV_ZERO","","",N,N],[17,"_MM_MASK_OVERFLOW","","",N,N],[17,"_MM_MASK_UNDERFLOW","","",N,N],[17,"_MM_MASK_INEXACT","","",N,N],[17,"_MM_MASK_MASK","","",N,N],[17,"_MM_ROUND_NEAREST","","",N,N],[17,"_MM_ROUND_DOWN","","",N,N],[17,"_MM_ROUND_UP","","",N,N],[17,"_MM_ROUND_TOWARD_ZERO","","",N,N],[17,"_MM_ROUND_MASK","","",N,N],[17,"_MM_FLUSH_ZERO_MASK","","",N,N],[17,"_MM_FLUSH_ZERO_ON","","",N,N],[17,"_MM_FLUSH_ZERO_OFF","","",N,N],[17,"_MM_DENORMALS_ZERO_ON","","",N,N],[17,"_MM_DENORMALS_ZERO_OFF","","",N,N],[17,"_MM_DENORMALS_ZERO_MASK","","",N,N],[17,"SDL_CACHELINE_SIZE","","",N,N],[17,"SDL_ALPHA_OPAQUE","","",N,N],[17,"SDL_ALPHA_TRANSPARENT","","",N,N],[17,"SDL_SWSURFACE","","",N,N],[17,"SDL_PREALLOC","","",N,N],[17,"SDL_RLEACCEL","","",N,N],[17,"SDL_DONTFREE","","",N,N],[17,"SDL_WINDOWPOS_UNDEFINED_MASK","","",N,N],[17,"SDL_WINDOWPOS_CENTERED_MASK","","",N,N],[17,"SDLK_SCANCODE_MASK","","",N,N],[17,"SDL_BUTTON_LEFT","","",N,N],[17,"SDL_BUTTON_MIDDLE","","",N,N],[17,"SDL_BUTTON_RIGHT","","",N,N],[17,"SDL_BUTTON_X1","","",N,N],[17,"SDL_BUTTON_X2","","",N,N],[17,"SDL_JOYSTICK_AXIS_MAX","","",N,N],[17,"SDL_JOYSTICK_AXIS_MIN","","",N,N],[17,"SDL_HAT_CENTERED","","",N,N],[17,"SDL_HAT_UP","","",N,N],[17,"SDL_HAT_RIGHT","","",N,N],[17,"SDL_HAT_DOWN","","",N,N],[17,"SDL_HAT_LEFT","","",N,N],[17,"SDL_HAT_RIGHTUP","","",N,N],[17,"SDL_HAT_RIGHTDOWN","","",N,N],[17,"SDL_HAT_LEFTUP","","",N,N],[17,"SDL_HAT_LEFTDOWN","","",N,N],[17,"SDL_RELEASED","","",N,N],[17,"SDL_PRESSED","","",N,N],[17,"SDL_TEXTEDITINGEVENT_TEXT_SIZE","","",N,N],[17,"SDL_TEXTINPUTEVENT_TEXT_SIZE","","",N,N],[17,"SDL_QUERY","","",N,N],[17,"SDL_IGNORE","","",N,N],[17,"SDL_DISABLE","","",N,N],[17,"SDL_ENABLE","","",N,N],[17,"SDL_HAPTIC_CONSTANT","","",N,N],[17,"SDL_HAPTIC_SINE","","",N,N],[17,"SDL_HAPTIC_LEFTRIGHT","","",N,N],[17,"SDL_HAPTIC_TRIANGLE","","",N,N],[17,"SDL_HAPTIC_SAWTOOTHUP","","",N,N],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",N,N],[17,"SDL_HAPTIC_RAMP","","",N,N],[17,"SDL_HAPTIC_SPRING","","",N,N],[17,"SDL_HAPTIC_DAMPER","","",N,N],[17,"SDL_HAPTIC_INERTIA","","",N,N],[17,"SDL_HAPTIC_FRICTION","","",N,N],[17,"SDL_HAPTIC_CUSTOM","","",N,N],[17,"SDL_HAPTIC_GAIN","","",N,N],[17,"SDL_HAPTIC_AUTOCENTER","","",N,N],[17,"SDL_HAPTIC_STATUS","","",N,N],[17,"SDL_HAPTIC_PAUSE","","",N,N],[17,"SDL_HAPTIC_POLAR","","",N,N],[17,"SDL_HAPTIC_CARTESIAN","","",N,N],[17,"SDL_HAPTIC_SPHERICAL","","",N,N],[17,"SDL_HAPTIC_INFINITY","","",N,N],[17,"SDL_HINT_FRAMEBUFFER_ACCELERATION","","",N,N],[17,"SDL_HINT_RENDER_DRIVER","","",N,N],[17,"SDL_HINT_RENDER_OPENGL_SHADERS","","",N,N],[17,"SDL_HINT_RENDER_DIRECT3D_THREADSAFE","","",N,N],[17,"SDL_HINT_RENDER_DIRECT3D11_DEBUG","","",N,N],[17,"SDL_HINT_RENDER_LOGICAL_SIZE_MODE","","",N,N],[17,"SDL_HINT_RENDER_SCALE_QUALITY","","",N,N],[17,"SDL_HINT_RENDER_VSYNC","","",N,N],[17,"SDL_HINT_VIDEO_ALLOW_SCREENSAVER","","",N,N],[17,"SDL_HINT_VIDEO_X11_XVIDMODE","","",N,N],[17,"SDL_HINT_VIDEO_X11_XINERAMA","","",N,N],[17,"SDL_HINT_VIDEO_X11_XRANDR","","",N,N],[17,"SDL_HINT_VIDEO_X11_NET_WM_PING","","",N,N],[17,"SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR","","",N,N],[17,"SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN","","",N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON","","",N,N],[17,"SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL","","",N,N],[17,"SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP","","",N,N],[17,"SDL_HINT_GRAB_KEYBOARD","","",N,N],[17,"SDL_HINT_MOUSE_DOUBLE_CLICK_TIME","","",N,N],[17,"SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS","","",N,N],[17,"SDL_HINT_MOUSE_NORMAL_SPEED_SCALE","","",N,N],[17,"SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE","","",N,N],[17,"SDL_HINT_MOUSE_RELATIVE_MODE_WARP","","",N,N],[17,"SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH","","",N,N],[17,"SDL_HINT_TOUCH_MOUSE_EVENTS","","",N,N],[17,"SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS","","",N,N],[17,"SDL_HINT_IDLE_TIMER_DISABLED","","",N,N],[17,"SDL_HINT_ORIENTATIONS","","",N,N],[17,"SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS","","",N,N],[17,"SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION","","",N,N],[17,"SDL_HINT_IOS_HIDE_HOME_INDICATOR","","",N,N],[17,"SDL_HINT_ACCELEROMETER_AS_JOYSTICK","","",N,N],[17,"SDL_HINT_TV_REMOTE_AS_JOYSTICK","","",N,N],[17,"SDL_HINT_XINPUT_ENABLED","","",N,N],[17,"SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING","","",N,N],[17,"SDL_HINT_GAMECONTROLLERCONFIG","","",N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES","","",N,N],[17,"SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT","","",N,N],[17,"SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_PS4","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_STEAM","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_SWITCH","","",N,N],[17,"SDL_HINT_JOYSTICK_HIDAPI_XBOX","","",N,N],[17,"SDL_HINT_ENABLE_STEAM_CONTROLLERS","","",N,N],[17,"SDL_HINT_ALLOW_TOPMOST","","",N,N],[17,"SDL_HINT_TIMER_RESOLUTION","","",N,N],[17,"SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION","","",N,N],[17,"SDL_HINT_QTWAYLAND_WINDOW_FLAGS","","",N,N],[17,"SDL_HINT_THREAD_STACK_SIZE","","",N,N],[17,"SDL_HINT_VIDEO_HIGHDPI_DISABLED","","",N,N],[17,"SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK","","",N,N],[17,"SDL_HINT_VIDEO_WIN_D3DCOMPILER","","",N,N],[17,"SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT","","",N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_URL","","",N,N],[17,"SDL_HINT_WINRT_PRIVACY_POLICY_LABEL","","",N,N],[17,"SDL_HINT_WINRT_HANDLE_BACK_BUTTON","","",N,N],[17,"SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES","","",N,N],[17,"SDL_HINT_MAC_BACKGROUND_APP","","",N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION","","",N,N],[17,"SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION","","",N,N],[17,"SDL_HINT_IME_INTERNAL_EDITING","","",N,N],[17,"SDL_HINT_ANDROID_SEPARATE_MOUSE_AND_TOUCH","","",N,N],[17,"SDL_HINT_ANDROID_TRAP_BACK_BUTTON","","",N,N],[17,"SDL_HINT_RETURN_KEY_HIDES_IME","","",N,N],[17,"SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT","","",N,N],[17,"SDL_HINT_NO_SIGNAL_HANDLERS","","",N,N],[17,"SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4","","",N,N],[17,"SDL_HINT_BMP_SAVE_LEGACY_FORMAT","","",N,N],[17,"SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING","","",N,N],[17,"SDL_HINT_RPI_VIDEO_LAYER","","",N,N],[17,"SDL_HINT_VIDEO_DOUBLE_BUFFER","","",N,N],[17,"SDL_HINT_OPENGL_ES_DRIVER","","",N,N],[17,"SDL_HINT_AUDIO_RESAMPLING_MODE","","",N,N],[17,"SDL_HINT_AUDIO_CATEGORY","","",N,N],[17,"SDL_MAX_LOG_MESSAGE","","",N,N],[17,"SDL_STANDARD_GRAVITY","","",N,N],[17,"SDL_NONSHAPEABLE_WINDOW","","",N,N],[17,"SDL_INVALID_SHAPE_ARGUMENT","","",N,N],[17,"SDL_WINDOW_LACKS_SHAPE","","",N,N],[17,"SDL_MAJOR_VERSION","","",N,N],[17,"SDL_MINOR_VERSION","","",N,N],[17,"SDL_PATCHLEVEL","","",N,N],[17,"SDL_INIT_TIMER","","",N,N],[17,"SDL_INIT_AUDIO","","",N,N],[17,"SDL_INIT_VIDEO","","",N,N],[17,"SDL_INIT_JOYSTICK","","",N,N],[17,"SDL_INIT_HAPTIC","","",N,N],[17,"SDL_INIT_GAMECONTROLLER","","",N,N],[17,"SDL_INIT_EVENTS","","",N,N],[17,"SDL_INIT_SENSOR","","",N,N],[17,"SDL_INIT_NOPARACHUTE","","",N,N],[17,"SDL_INIT_EVERYTHING","","",N,N],[17,"XlibSpecificationRelease","","",N,N],[17,"X_PROTOCOL","","",N,N],[17,"X_PROTOCOL_REVISION","","",N,N],[17,"None","","",N,N],[17,"ParentRelative","","",N,N],[17,"CopyFromParent","","",N,N],[17,"PointerWindow","","",N,N],[17,"InputFocus","","",N,N],[17,"PointerRoot","","",N,N],[17,"AnyPropertyType","","",N,N],[17,"AnyKey","","",N,N],[17,"AnyButton","","",N,N],[17,"AllTemporary","","",N,N],[17,"CurrentTime","","",N,N],[17,"NoSymbol","","",N,N],[17,"NoEventMask","","",N,N],[17,"KeyPressMask","","",N,N],[17,"KeyReleaseMask","","",N,N],[17,"ButtonPressMask","","",N,N],[17,"ButtonReleaseMask","","",N,N],[17,"EnterWindowMask","","",N,N],[17,"LeaveWindowMask","","",N,N],[17,"PointerMotionMask","","",N,N],[17,"PointerMotionHintMask","","",N,N],[17,"Button1MotionMask","","",N,N],[17,"Button2MotionMask","","",N,N],[17,"Button3MotionMask","","",N,N],[17,"Button4MotionMask","","",N,N],[17,"Button5MotionMask","","",N,N],[17,"ButtonMotionMask","","",N,N],[17,"KeymapStateMask","","",N,N],[17,"ExposureMask","","",N,N],[17,"VisibilityChangeMask","","",N,N],[17,"StructureNotifyMask","","",N,N],[17,"ResizeRedirectMask","","",N,N],[17,"SubstructureNotifyMask","","",N,N],[17,"SubstructureRedirectMask","","",N,N],[17,"FocusChangeMask","","",N,N],[17,"PropertyChangeMask","","",N,N],[17,"ColormapChangeMask","","",N,N],[17,"OwnerGrabButtonMask","","",N,N],[17,"KeyPress","","",N,N],[17,"KeyRelease","","",N,N],[17,"ButtonPress","","",N,N],[17,"ButtonRelease","","",N,N],[17,"MotionNotify","","",N,N],[17,"EnterNotify","","",N,N],[17,"LeaveNotify","","",N,N],[17,"FocusIn","","",N,N],[17,"FocusOut","","",N,N],[17,"KeymapNotify","","",N,N],[17,"Expose","","",N,N],[17,"GraphicsExpose","","",N,N],[17,"NoExpose","","",N,N],[17,"VisibilityNotify","","",N,N],[17,"CreateNotify","","",N,N],[17,"DestroyNotify","","",N,N],[17,"UnmapNotify","","",N,N],[17,"MapNotify","","",N,N],[17,"MapRequest","","",N,N],[17,"ReparentNotify","","",N,N],[17,"ConfigureNotify","","",N,N],[17,"ConfigureRequest","","",N,N],[17,"GravityNotify","","",N,N],[17,"ResizeRequest","","",N,N],[17,"CirculateNotify","","",N,N],[17,"CirculateRequest","","",N,N],[17,"PropertyNotify","","",N,N],[17,"SelectionClear","","",N,N],[17,"SelectionRequest","","",N,N],[17,"SelectionNotify","","",N,N],[17,"ColormapNotify","","",N,N],[17,"ClientMessage","","",N,N],[17,"MappingNotify","","",N,N],[17,"GenericEvent","","",N,N],[17,"LASTEvent","","",N,N],[17,"ShiftMask","","",N,N],[17,"LockMask","","",N,N],[17,"ControlMask","","",N,N],[17,"Mod1Mask","","",N,N],[17,"Mod2Mask","","",N,N],[17,"Mod3Mask","","",N,N],[17,"Mod4Mask","","",N,N],[17,"Mod5Mask","","",N,N],[17,"ShiftMapIndex","","",N,N],[17,"LockMapIndex","","",N,N],[17,"ControlMapIndex","","",N,N],[17,"Mod1MapIndex","","",N,N],[17,"Mod2MapIndex","","",N,N],[17,"Mod3MapIndex","","",N,N],[17,"Mod4MapIndex","","",N,N],[17,"Mod5MapIndex","","",N,N],[17,"Button1Mask","","",N,N],[17,"Button2Mask","","",N,N],[17,"Button3Mask","","",N,N],[17,"Button4Mask","","",N,N],[17,"Button5Mask","","",N,N],[17,"AnyModifier","","",N,N],[17,"Button1","","",N,N],[17,"Button2","","",N,N],[17,"Button3","","",N,N],[17,"Button4","","",N,N],[17,"Button5","","",N,N],[17,"NotifyNormal","","",N,N],[17,"NotifyGrab","","",N,N],[17,"NotifyUngrab","","",N,N],[17,"NotifyWhileGrabbed","","",N,N],[17,"NotifyHint","","",N,N],[17,"NotifyAncestor","","",N,N],[17,"NotifyVirtual","","",N,N],[17,"NotifyInferior","","",N,N],[17,"NotifyNonlinear","","",N,N],[17,"NotifyNonlinearVirtual","","",N,N],[17,"NotifyPointer","","",N,N],[17,"NotifyPointerRoot","","",N,N],[17,"NotifyDetailNone","","",N,N],[17,"VisibilityUnobscured","","",N,N],[17,"VisibilityPartiallyObscured","","",N,N],[17,"VisibilityFullyObscured","","",N,N],[17,"PlaceOnTop","","",N,N],[17,"PlaceOnBottom","","",N,N],[17,"FamilyInternet","","",N,N],[17,"FamilyDECnet","","",N,N],[17,"FamilyChaos","","",N,N],[17,"FamilyInternet6","","",N,N],[17,"FamilyServerInterpreted","","",N,N],[17,"PropertyNewValue","","",N,N],[17,"PropertyDelete","","",N,N],[17,"ColormapUninstalled","","",N,N],[17,"ColormapInstalled","","",N,N],[17,"GrabModeSync","","",N,N],[17,"GrabModeAsync","","",N,N],[17,"GrabSuccess","","",N,N],[17,"AlreadyGrabbed","","",N,N],[17,"GrabInvalidTime","","",N,N],[17,"GrabNotViewable","","",N,N],[17,"GrabFrozen","","",N,N],[17,"AsyncPointer","","",N,N],[17,"SyncPointer","","",N,N],[17,"ReplayPointer","","",N,N],[17,"AsyncKeyboard","","",N,N],[17,"SyncKeyboard","","",N,N],[17,"ReplayKeyboard","","",N,N],[17,"AsyncBoth","","",N,N],[17,"SyncBoth","","",N,N],[17,"RevertToParent","","",N,N],[17,"Success","","",N,N],[17,"BadRequest","","",N,N],[17,"BadValue","","",N,N],[17,"BadWindow","","",N,N],[17,"BadPixmap","","",N,N],[17,"BadAtom","","",N,N],[17,"BadCursor","","",N,N],[17,"BadFont","","",N,N],[17,"BadMatch","","",N,N],[17,"BadDrawable","","",N,N],[17,"BadAccess","","",N,N],[17,"BadAlloc","","",N,N],[17,"BadColor","","",N,N],[17,"BadGC","","",N,N],[17,"BadIDChoice","","",N,N],[17,"BadName","","",N,N],[17,"BadLength","","",N,N],[17,"BadImplementation","","",N,N],[17,"FirstExtensionError","","",N,N],[17,"LastExtensionError","","",N,N],[17,"InputOutput","","",N,N],[17,"InputOnly","","",N,N],[17,"CWBackPixmap","","",N,N],[17,"CWBackPixel","","",N,N],[17,"CWBorderPixmap","","",N,N],[17,"CWBorderPixel","","",N,N],[17,"CWBitGravity","","",N,N],[17,"CWWinGravity","","",N,N],[17,"CWBackingStore","","",N,N],[17,"CWBackingPlanes","","",N,N],[17,"CWBackingPixel","","",N,N],[17,"CWOverrideRedirect","","",N,N],[17,"CWSaveUnder","","",N,N],[17,"CWEventMask","","",N,N],[17,"CWDontPropagate","","",N,N],[17,"CWColormap","","",N,N],[17,"CWCursor","","",N,N],[17,"CWX","","",N,N],[17,"CWY","","",N,N],[17,"CWWidth","","",N,N],[17,"CWHeight","","",N,N],[17,"CWBorderWidth","","",N,N],[17,"CWSibling","","",N,N],[17,"CWStackMode","","",N,N],[17,"ForgetGravity","","",N,N],[17,"NorthWestGravity","","",N,N],[17,"NorthGravity","","",N,N],[17,"NorthEastGravity","","",N,N],[17,"WestGravity","","",N,N],[17,"CenterGravity","","",N,N],[17,"EastGravity","","",N,N],[17,"SouthWestGravity","","",N,N],[17,"SouthGravity","","",N,N],[17,"SouthEastGravity","","",N,N],[17,"StaticGravity","","",N,N],[17,"UnmapGravity","","",N,N],[17,"NotUseful","","",N,N],[17,"WhenMapped","","",N,N],[17,"Always","","",N,N],[17,"IsUnmapped","","",N,N],[17,"IsUnviewable","","",N,N],[17,"IsViewable","","",N,N],[17,"SetModeInsert","","",N,N],[17,"SetModeDelete","","",N,N],[17,"DestroyAll","","",N,N],[17,"RetainPermanent","","",N,N],[17,"RetainTemporary","","",N,N],[17,"Above","","",N,N],[17,"Below","","",N,N],[17,"TopIf","","",N,N],[17,"BottomIf","","",N,N],[17,"Opposite","","",N,N],[17,"RaiseLowest","","",N,N],[17,"LowerHighest","","",N,N],[17,"PropModeReplace","","",N,N],[17,"PropModePrepend","","",N,N],[17,"PropModeAppend","","",N,N],[17,"GXclear","","",N,N],[17,"GXand","","",N,N],[17,"GXandReverse","","",N,N],[17,"GXcopy","","",N,N],[17,"GXandInverted","","",N,N],[17,"GXnoop","","",N,N],[17,"GXxor","","",N,N],[17,"GXor","","",N,N],[17,"GXnor","","",N,N],[17,"GXequiv","","",N,N],[17,"GXinvert","","",N,N],[17,"GXorReverse","","",N,N],[17,"GXcopyInverted","","",N,N],[17,"GXorInverted","","",N,N],[17,"GXnand","","",N,N],[17,"GXset","","",N,N],[17,"LineSolid","","",N,N],[17,"LineOnOffDash","","",N,N],[17,"LineDoubleDash","","",N,N],[17,"CapNotLast","","",N,N],[17,"CapButt","","",N,N],[17,"CapRound","","",N,N],[17,"CapProjecting","","",N,N],[17,"JoinMiter","","",N,N],[17,"JoinRound","","",N,N],[17,"JoinBevel","","",N,N],[17,"FillSolid","","",N,N],[17,"FillTiled","","",N,N],[17,"FillStippled","","",N,N],[17,"FillOpaqueStippled","","",N,N],[17,"EvenOddRule","","",N,N],[17,"WindingRule","","",N,N],[17,"ClipByChildren","","",N,N],[17,"IncludeInferiors","","",N,N],[17,"Unsorted","","",N,N],[17,"YSorted","","",N,N],[17,"YXSorted","","",N,N],[17,"YXBanded","","",N,N],[17,"CoordModeOrigin","","",N,N],[17,"CoordModePrevious","","",N,N],[17,"Complex","","",N,N],[17,"Nonconvex","","",N,N],[17,"Convex","","",N,N],[17,"ArcChord","","",N,N],[17,"ArcPieSlice","","",N,N],[17,"GCFunction","","",N,N],[17,"GCPlaneMask","","",N,N],[17,"GCForeground","","",N,N],[17,"GCBackground","","",N,N],[17,"GCLineWidth","","",N,N],[17,"GCLineStyle","","",N,N],[17,"GCCapStyle","","",N,N],[17,"GCJoinStyle","","",N,N],[17,"GCFillStyle","","",N,N],[17,"GCFillRule","","",N,N],[17,"GCTile","","",N,N],[17,"GCStipple","","",N,N],[17,"GCTileStipXOrigin","","",N,N],[17,"GCTileStipYOrigin","","",N,N],[17,"GCFont","","",N,N],[17,"GCSubwindowMode","","",N,N],[17,"GCGraphicsExposures","","",N,N],[17,"GCClipXOrigin","","",N,N],[17,"GCClipYOrigin","","",N,N],[17,"GCClipMask","","",N,N],[17,"GCDashOffset","","",N,N],[17,"GCDashList","","",N,N],[17,"GCArcMode","","",N,N],[17,"GCLastBit","","",N,N],[17,"FontLeftToRight","","",N,N],[17,"FontRightToLeft","","",N,N],[17,"FontChange","","",N,N],[17,"XYBitmap","","",N,N],[17,"XYPixmap","","",N,N],[17,"ZPixmap","","",N,N],[17,"AllocNone","","",N,N],[17,"AllocAll","","",N,N],[17,"DoRed","","",N,N],[17,"DoGreen","","",N,N],[17,"DoBlue","","",N,N],[17,"CursorShape","","",N,N],[17,"TileShape","","",N,N],[17,"StippleShape","","",N,N],[17,"AutoRepeatModeOff","","",N,N],[17,"AutoRepeatModeOn","","",N,N],[17,"AutoRepeatModeDefault","","",N,N],[17,"LedModeOff","","",N,N],[17,"LedModeOn","","",N,N],[17,"KBKeyClickPercent","","",N,N],[17,"KBBellPercent","","",N,N],[17,"KBBellPitch","","",N,N],[17,"KBBellDuration","","",N,N],[17,"KBLed","","",N,N],[17,"KBLedMode","","",N,N],[17,"KBKey","","",N,N],[17,"KBAutoRepeatMode","","",N,N],[17,"MappingSuccess","","",N,N],[17,"MappingBusy","","",N,N],[17,"MappingFailed","","",N,N],[17,"MappingModifier","","",N,N],[17,"MappingKeyboard","","",N,N],[17,"MappingPointer","","",N,N],[17,"DontPreferBlanking","","",N,N],[17,"PreferBlanking","","",N,N],[17,"DefaultBlanking","","",N,N],[17,"DisableScreenSaver","","",N,N],[17,"DisableScreenInterval","","",N,N],[17,"DontAllowExposures","","",N,N],[17,"AllowExposures","","",N,N],[17,"DefaultExposures","","",N,N],[17,"ScreenSaverReset","","",N,N],[17,"ScreenSaverActive","","",N,N],[17,"HostInsert","","",N,N],[17,"HostDelete","","",N,N],[17,"EnableAccess","","",N,N],[17,"DisableAccess","","",N,N],[17,"StaticGray","","",N,N],[17,"GrayScale","","",N,N],[17,"StaticColor","","",N,N],[17,"PseudoColor","","",N,N],[17,"TrueColor","","",N,N],[17,"DirectColor","","",N,N],[17,"LSBFirst","","",N,N],[17,"MSBFirst","","",N,N],[17,"NeedFunctionPrototypes","","",N,N],[17,"NeedVarargsPrototypes","","",N,N],[17,"NeedNestedPrototypes","","",N,N],[17,"FUNCPROTO","","",N,N],[17,"NeedWidePrototypes","","",N,N],[17,"X_HAVE_UTF8_STRING","","",N,N],[17,"True","","",N,N],[17,"False","","",N,N],[17,"QueuedAlready","","",N,N],[17,"QueuedAfterReading","","",N,N],[17,"QueuedAfterFlush","","",N,N],[17,"XNRequiredCharSet","","",N,N],[17,"XNQueryOrientation","","",N,N],[17,"XNBaseFontName","","",N,N],[17,"XNOMAutomatic","","",N,N],[17,"XNMissingCharSet","","",N,N],[17,"XNDefaultString","","",N,N],[17,"XNOrientation","","",N,N],[17,"XNDirectionalDependentDrawing","","",N,N],[17,"XNContextualDrawing","","",N,N],[17,"XNFontInfo","","",N,N],[17,"XIMPreeditArea","","",N,N],[17,"XIMPreeditCallbacks","","",N,N],[17,"XIMPreeditPosition","","",N,N],[17,"XIMPreeditNothing","","",N,N],[17,"XIMPreeditNone","","",N,N],[17,"XIMStatusArea","","",N,N],[17,"XIMStatusCallbacks","","",N,N],[17,"XIMStatusNothing","","",N,N],[17,"XIMStatusNone","","",N,N],[17,"XNVaNestedList","","",N,N],[17,"XNQueryInputStyle","","",N,N],[17,"XNClientWindow","","",N,N],[17,"XNInputStyle","","",N,N],[17,"XNFocusWindow","","",N,N],[17,"XNResourceName","","",N,N],[17,"XNResourceClass","","",N,N],[17,"XNGeometryCallback","","",N,N],[17,"XNDestroyCallback","","",N,N],[17,"XNFilterEvents","","",N,N],[17,"XNPreeditStartCallback","","",N,N],[17,"XNPreeditDoneCallback","","",N,N],[17,"XNPreeditDrawCallback","","",N,N],[17,"XNPreeditCaretCallback","","",N,N],[17,"XNPreeditStateNotifyCallback","","",N,N],[17,"XNPreeditAttributes","","",N,N],[17,"XNStatusStartCallback","","",N,N],[17,"XNStatusDoneCallback","","",N,N],[17,"XNStatusDrawCallback","","",N,N],[17,"XNStatusAttributes","","",N,N],[17,"XNArea","","",N,N],[17,"XNAreaNeeded","","",N,N],[17,"XNSpotLocation","","",N,N],[17,"XNColormap","","",N,N],[17,"XNStdColormap","","",N,N],[17,"XNForeground","","",N,N],[17,"XNBackground","","",N,N],[17,"XNBackgroundPixmap","","",N,N],[17,"XNFontSet","","",N,N],[17,"XNLineSpace","","",N,N],[17,"XNCursor","","",N,N],[17,"XNQueryIMValuesList","","",N,N],[17,"XNQueryICValuesList","","",N,N],[17,"XNVisiblePosition","","",N,N],[17,"XNR6PreeditCallback","","",N,N],[17,"XNStringConversionCallback","","",N,N],[17,"XNStringConversion","","",N,N],[17,"XNResetState","","",N,N],[17,"XNHotKey","","",N,N],[17,"XNHotKeyState","","",N,N],[17,"XNPreeditState","","",N,N],[17,"XNSeparatorofNestedList","","",N,N],[17,"XBufferOverflow","","",N,N],[17,"XLookupNone","","",N,N],[17,"XLookupChars","","",N,N],[17,"XLookupKeySym","","",N,N],[17,"XLookupBoth","","",N,N],[17,"XIMReverse","","",N,N],[17,"XIMUnderline","","",N,N],[17,"XIMHighlight","","",N,N],[17,"XIMPrimary","","",N,N],[17,"XIMSecondary","","",N,N],[17,"XIMTertiary","","",N,N],[17,"XIMVisibleToForward","","",N,N],[17,"XIMVisibleToBackword","","",N,N],[17,"XIMVisibleToCenter","","",N,N],[17,"XIMPreeditUnKnown","","",N,N],[17,"XIMPreeditEnable","","",N,N],[17,"XIMPreeditDisable","","",N,N],[17,"XIMInitialState","","",N,N],[17,"XIMPreserveState","","",N,N],[17,"XIMStringConversionLeftEdge","","",N,N],[17,"XIMStringConversionRightEdge","","",N,N],[17,"XIMStringConversionTopEdge","","",N,N],[17,"XIMStringConversionBottomEdge","","",N,N],[17,"XIMStringConversionConcealed","","",N,N],[17,"XIMStringConversionWrapped","","",N,N],[17,"XIMStringConversionBuffer","","",N,N],[17,"XIMStringConversionLine","","",N,N],[17,"XIMStringConversionWord","","",N,N],[17,"XIMStringConversionChar","","",N,N],[17,"XIMStringConversionSubstitution","","",N,N],[17,"XIMStringConversionRetrieval","","",N,N],[17,"XIMHotKeyStateON","","",N,N],[17,"XIMHotKeyStateOFF","","",N,N],[17,"XATOM_H","","",N,N],[17,"SDL_PIXELTYPE_UNKNOWN","","",N,N],[17,"SDL_PIXELTYPE_INDEX1","","",N,N],[17,"SDL_PIXELTYPE_INDEX4","","",N,N],[17,"SDL_PIXELTYPE_INDEX8","","",N,N],[17,"SDL_PIXELTYPE_PACKED8","","",N,N],[17,"SDL_PIXELTYPE_PACKED16","","",N,N],[17,"SDL_PIXELTYPE_PACKED32","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU8","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU16","","",N,N],[17,"SDL_PIXELTYPE_ARRAYU32","","",N,N],[17,"SDL_PIXELTYPE_ARRAYF16","","",N,N],[17,"SDL_PIXELTYPE_ARRAYF32","","",N,N],[17,"SDL_BITMAPORDER_NONE","","",N,N],[17,"SDL_BITMAPORDER_4321","","",N,N],[17,"SDL_BITMAPORDER_1234","","",N,N],[17,"SDL_PACKEDORDER_NONE","","",N,N],[17,"SDL_PACKEDORDER_XRGB","","",N,N],[17,"SDL_PACKEDORDER_RGBX","","",N,N],[17,"SDL_PACKEDORDER_ARGB","","",N,N],[17,"SDL_PACKEDORDER_RGBA","","",N,N],[17,"SDL_PACKEDORDER_XBGR","","",N,N],[17,"SDL_PACKEDORDER_BGRX","","",N,N],[17,"SDL_PACKEDORDER_ABGR","","",N,N],[17,"SDL_PACKEDORDER_BGRA","","",N,N],[17,"SDL_ARRAYORDER_NONE","","",N,N],[17,"SDL_ARRAYORDER_RGB","","",N,N],[17,"SDL_ARRAYORDER_RGBA","","",N,N],[17,"SDL_ARRAYORDER_ARGB","","",N,N],[17,"SDL_ARRAYORDER_BGR","","",N,N],[17,"SDL_ARRAYORDER_BGRA","","",N,N],[17,"SDL_ARRAYORDER_ABGR","","",N,N],[17,"SDL_PACKEDLAYOUT_NONE","","",N,N],[17,"SDL_PACKEDLAYOUT_332","","",N,N],[17,"SDL_PACKEDLAYOUT_4444","","",N,N],[17,"SDL_PACKEDLAYOUT_1555","","",N,N],[17,"SDL_PACKEDLAYOUT_5551","","",N,N],[17,"SDL_PACKEDLAYOUT_565","","",N,N],[17,"SDL_PACKEDLAYOUT_8888","","",N,N],[17,"SDL_PACKEDLAYOUT_2101010","","",N,N],[17,"SDL_PACKEDLAYOUT_1010102","","",N,N],[17,"SDL_PIXELFORMAT_UNKNOWN","","",N,N],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",N,N],[17,"SDL_PIXELFORMAT_INDEX8","","",N,N],[17,"SDL_PIXELFORMAT_RGB332","","",N,N],[17,"SDL_PIXELFORMAT_RGB444","","",N,N],[17,"SDL_PIXELFORMAT_RGB555","","",N,N],[17,"SDL_PIXELFORMAT_BGR555","","",N,N],[17,"SDL_PIXELFORMAT_ARGB4444","","",N,N],[17,"SDL_PIXELFORMAT_RGBA4444","","",N,N],[17,"SDL_PIXELFORMAT_ABGR4444","","",N,N],[17,"SDL_PIXELFORMAT_BGRA4444","","",N,N],[17,"SDL_PIXELFORMAT_ARGB1555","","",N,N],[17,"SDL_PIXELFORMAT_RGBA5551","","",N,N],[17,"SDL_PIXELFORMAT_ABGR1555","","",N,N],[17,"SDL_PIXELFORMAT_BGRA5551","","",N,N],[17,"SDL_PIXELFORMAT_RGB565","","",N,N],[17,"SDL_PIXELFORMAT_BGR565","","",N,N],[17,"SDL_PIXELFORMAT_RGB24","","",N,N],[17,"SDL_PIXELFORMAT_BGR24","","",N,N],[17,"SDL_PIXELFORMAT_RGB888","","",N,N],[17,"SDL_PIXELFORMAT_RGBX8888","","",N,N],[17,"SDL_PIXELFORMAT_BGR888","","",N,N],[17,"SDL_PIXELFORMAT_BGRX8888","","",N,N],[17,"SDL_PIXELFORMAT_ARGB8888","","",N,N],[17,"SDL_PIXELFORMAT_RGBA8888","","",N,N],[17,"SDL_PIXELFORMAT_ABGR8888","","",N,N],[17,"SDL_PIXELFORMAT_BGRA8888","","",N,N],[17,"SDL_PIXELFORMAT_ARGB2101010","","",N,N],[17,"SDL_PIXELFORMAT_RGBA32","","",N,N],[17,"SDL_PIXELFORMAT_ARGB32","","",N,N],[17,"SDL_PIXELFORMAT_BGRA32","","",N,N],[17,"SDL_PIXELFORMAT_ABGR32","","",N,N],[17,"SDL_PIXELFORMAT_YV12","","",N,N],[17,"SDL_PIXELFORMAT_IYUV","","",N,N],[17,"SDL_PIXELFORMAT_YUY2","","",N,N],[17,"SDL_PIXELFORMAT_UYVY","","",N,N],[17,"SDL_PIXELFORMAT_YVYU","","",N,N],[17,"SDL_PIXELFORMAT_NV12","","",N,N],[17,"SDL_PIXELFORMAT_NV21","","",N,N],[17,"SDL_PIXELFORMAT_EXTERNAL_OES","","",N,N],[17,"SDLK_UNKNOWN","","",N,N],[17,"SDLK_RETURN","","",N,N],[17,"SDLK_ESCAPE","","",N,N],[17,"SDLK_BACKSPACE","","",N,N],[17,"SDLK_TAB","","",N,N],[17,"SDLK_SPACE","","",N,N],[17,"SDLK_EXCLAIM","","",N,N],[17,"SDLK_QUOTEDBL","","",N,N],[17,"SDLK_HASH","","",N,N],[17,"SDLK_PERCENT","","",N,N],[17,"SDLK_DOLLAR","","",N,N],[17,"SDLK_AMPERSAND","","",N,N],[17,"SDLK_QUOTE","","",N,N],[17,"SDLK_LEFTPAREN","","",N,N],[17,"SDLK_RIGHTPAREN","","",N,N],[17,"SDLK_ASTERISK","","",N,N],[17,"SDLK_PLUS","","",N,N],[17,"SDLK_COMMA","","",N,N],[17,"SDLK_MINUS","","",N,N],[17,"SDLK_PERIOD","","",N,N],[17,"SDLK_SLASH","","",N,N],[17,"SDLK_0","","",N,N],[17,"SDLK_1","","",N,N],[17,"SDLK_2","","",N,N],[17,"SDLK_3","","",N,N],[17,"SDLK_4","","",N,N],[17,"SDLK_5","","",N,N],[17,"SDLK_6","","",N,N],[17,"SDLK_7","","",N,N],[17,"SDLK_8","","",N,N],[17,"SDLK_9","","",N,N],[17,"SDLK_COLON","","",N,N],[17,"SDLK_SEMICOLON","","",N,N],[17,"SDLK_LESS","","",N,N],[17,"SDLK_EQUALS","","",N,N],[17,"SDLK_GREATER","","",N,N],[17,"SDLK_QUESTION","","",N,N],[17,"SDLK_AT","","",N,N],[17,"SDLK_LEFTBRACKET","","",N,N],[17,"SDLK_BACKSLASH","","",N,N],[17,"SDLK_RIGHTBRACKET","","",N,N],[17,"SDLK_CARET","","",N,N],[17,"SDLK_UNDERSCORE","","",N,N],[17,"SDLK_BACKQUOTE","","",N,N],[17,"SDLK_a","","",N,N],[17,"SDLK_b","","",N,N],[17,"SDLK_c","","",N,N],[17,"SDLK_d","","",N,N],[17,"SDLK_e","","",N,N],[17,"SDLK_f","","",N,N],[17,"SDLK_g","","",N,N],[17,"SDLK_h","","",N,N],[17,"SDLK_i","","",N,N],[17,"SDLK_j","","",N,N],[17,"SDLK_k","","",N,N],[17,"SDLK_l","","",N,N],[17,"SDLK_m","","",N,N],[17,"SDLK_n","","",N,N],[17,"SDLK_o","","",N,N],[17,"SDLK_p","","",N,N],[17,"SDLK_q","","",N,N],[17,"SDLK_r","","",N,N],[17,"SDLK_s","","",N,N],[17,"SDLK_t","","",N,N],[17,"SDLK_u","","",N,N],[17,"SDLK_v","","",N,N],[17,"SDLK_w","","",N,N],[17,"SDLK_x","","",N,N],[17,"SDLK_y","","",N,N],[17,"SDLK_z","","",N,N],[17,"SDLK_CAPSLOCK","","",N,N],[17,"SDLK_F1","","",N,N],[17,"SDLK_F2","","",N,N],[17,"SDLK_F3","","",N,N],[17,"SDLK_F4","","",N,N],[17,"SDLK_F5","","",N,N],[17,"SDLK_F6","","",N,N],[17,"SDLK_F7","","",N,N],[17,"SDLK_F8","","",N,N],[17,"SDLK_F9","","",N,N],[17,"SDLK_F10","","",N,N],[17,"SDLK_F11","","",N,N],[17,"SDLK_F12","","",N,N],[17,"SDLK_PRINTSCREEN","","",N,N],[17,"SDLK_SCROLLLOCK","","",N,N],[17,"SDLK_PAUSE","","",N,N],[17,"SDLK_INSERT","","",N,N],[17,"SDLK_HOME","","",N,N],[17,"SDLK_PAGEUP","","",N,N],[17,"SDLK_DELETE","","",N,N],[17,"SDLK_END","","",N,N],[17,"SDLK_PAGEDOWN","","",N,N],[17,"SDLK_RIGHT","","",N,N],[17,"SDLK_LEFT","","",N,N],[17,"SDLK_DOWN","","",N,N],[17,"SDLK_UP","","",N,N],[17,"SDLK_NUMLOCKCLEAR","","",N,N],[17,"SDLK_KP_DIVIDE","","",N,N],[17,"SDLK_KP_MULTIPLY","","",N,N],[17,"SDLK_KP_MINUS","","",N,N],[17,"SDLK_KP_PLUS","","",N,N],[17,"SDLK_KP_ENTER","","",N,N],[17,"SDLK_KP_1","","",N,N],[17,"SDLK_KP_2","","",N,N],[17,"SDLK_KP_3","","",N,N],[17,"SDLK_KP_4","","",N,N],[17,"SDLK_KP_5","","",N,N],[17,"SDLK_KP_6","","",N,N],[17,"SDLK_KP_7","","",N,N],[17,"SDLK_KP_8","","",N,N],[17,"SDLK_KP_9","","",N,N],[17,"SDLK_KP_0","","",N,N],[17,"SDLK_KP_PERIOD","","",N,N],[17,"SDLK_APPLICATION","","",N,N],[17,"SDLK_POWER","","",N,N],[17,"SDLK_KP_EQUALS","","",N,N],[17,"SDLK_F13","","",N,N],[17,"SDLK_F14","","",N,N],[17,"SDLK_F15","","",N,N],[17,"SDLK_F16","","",N,N],[17,"SDLK_F17","","",N,N],[17,"SDLK_F18","","",N,N],[17,"SDLK_F19","","",N,N],[17,"SDLK_F20","","",N,N],[17,"SDLK_F21","","",N,N],[17,"SDLK_F22","","",N,N],[17,"SDLK_F23","","",N,N],[17,"SDLK_F24","","",N,N],[17,"SDLK_EXECUTE","","",N,N],[17,"SDLK_HELP","","",N,N],[17,"SDLK_MENU","","",N,N],[17,"SDLK_SELECT","","",N,N],[17,"SDLK_STOP","","",N,N],[17,"SDLK_AGAIN","","",N,N],[17,"SDLK_UNDO","","",N,N],[17,"SDLK_CUT","","",N,N],[17,"SDLK_COPY","","",N,N],[17,"SDLK_PASTE","","",N,N],[17,"SDLK_FIND","","",N,N],[17,"SDLK_MUTE","","",N,N],[17,"SDLK_VOLUMEUP","","",N,N],[17,"SDLK_VOLUMEDOWN","","",N,N],[17,"SDLK_KP_COMMA","","",N,N],[17,"SDLK_KP_EQUALSAS400","","",N,N],[17,"SDLK_ALTERASE","","",N,N],[17,"SDLK_SYSREQ","","",N,N],[17,"SDLK_CANCEL","","",N,N],[17,"SDLK_CLEAR","","",N,N],[17,"SDLK_PRIOR","","",N,N],[17,"SDLK_RETURN2","","",N,N],[17,"SDLK_SEPARATOR","","",N,N],[17,"SDLK_OUT","","",N,N],[17,"SDLK_OPER","","",N,N],[17,"SDLK_CLEARAGAIN","","",N,N],[17,"SDLK_CRSEL","","",N,N],[17,"SDLK_EXSEL","","",N,N],[17,"SDLK_KP_00","","",N,N],[17,"SDLK_KP_000","","",N,N],[17,"SDLK_THOUSANDSSEPARATOR","","",N,N],[17,"SDLK_DECIMALSEPARATOR","","",N,N],[17,"SDLK_CURRENCYUNIT","","",N,N],[17,"SDLK_CURRENCYSUBUNIT","","",N,N],[17,"SDLK_KP_LEFTPAREN","","",N,N],[17,"SDLK_KP_RIGHTPAREN","","",N,N],[17,"SDLK_KP_LEFTBRACE","","",N,N],[17,"SDLK_KP_RIGHTBRACE","","",N,N],[17,"SDLK_KP_TAB","","",N,N],[17,"SDLK_KP_BACKSPACE","","",N,N],[17,"SDLK_KP_A","","",N,N],[17,"SDLK_KP_B","","",N,N],[17,"SDLK_KP_C","","",N,N],[17,"SDLK_KP_D","","",N,N],[17,"SDLK_KP_E","","",N,N],[17,"SDLK_KP_F","","",N,N],[17,"SDLK_KP_XOR","","",N,N],[17,"SDLK_KP_POWER","","",N,N],[17,"SDLK_KP_PERCENT","","",N,N],[17,"SDLK_KP_LESS","","",N,N],[17,"SDLK_KP_GREATER","","",N,N],[17,"SDLK_KP_AMPERSAND","","",N,N],[17,"SDLK_KP_DBLAMPERSAND","","",N,N],[17,"SDLK_KP_VERTICALBAR","","",N,N],[17,"SDLK_KP_DBLVERTICALBAR","","",N,N],[17,"SDLK_KP_COLON","","",N,N],[17,"SDLK_KP_HASH","","",N,N],[17,"SDLK_KP_SPACE","","",N,N],[17,"SDLK_KP_AT","","",N,N],[17,"SDLK_KP_EXCLAM","","",N,N],[17,"SDLK_KP_MEMSTORE","","",N,N],[17,"SDLK_KP_MEMRECALL","","",N,N],[17,"SDLK_KP_MEMCLEAR","","",N,N],[17,"SDLK_KP_MEMADD","","",N,N],[17,"SDLK_KP_MEMSUBTRACT","","",N,N],[17,"SDLK_KP_MEMMULTIPLY","","",N,N],[17,"SDLK_KP_MEMDIVIDE","","",N,N],[17,"SDLK_KP_PLUSMINUS","","",N,N],[17,"SDLK_KP_CLEAR","","",N,N],[17,"SDLK_KP_CLEARENTRY","","",N,N],[17,"SDLK_KP_BINARY","","",N,N],[17,"SDLK_KP_OCTAL","","",N,N],[17,"SDLK_KP_DECIMAL","","",N,N],[17,"SDLK_KP_HEXADECIMAL","","",N,N],[17,"SDLK_LCTRL","","",N,N],[17,"SDLK_LSHIFT","","",N,N],[17,"SDLK_LALT","","",N,N],[17,"SDLK_LGUI","","",N,N],[17,"SDLK_RCTRL","","",N,N],[17,"SDLK_RSHIFT","","",N,N],[17,"SDLK_RALT","","",N,N],[17,"SDLK_RGUI","","",N,N],[17,"SDLK_MODE","","",N,N],[17,"SDLK_AUDIONEXT","","",N,N],[17,"SDLK_AUDIOPREV","","",N,N],[17,"SDLK_AUDIOSTOP","","",N,N],[17,"SDLK_AUDIOPLAY","","",N,N],[17,"SDLK_AUDIOMUTE","","",N,N],[17,"SDLK_MEDIASELECT","","",N,N],[17,"SDLK_WWW","","",N,N],[17,"SDLK_MAIL","","",N,N],[17,"SDLK_CALCULATOR","","",N,N],[17,"SDLK_COMPUTER","","",N,N],[17,"SDLK_AC_SEARCH","","",N,N],[17,"SDLK_AC_HOME","","",N,N],[17,"SDLK_AC_BACK","","",N,N],[17,"SDLK_AC_FORWARD","","",N,N],[17,"SDLK_AC_STOP","","",N,N],[17,"SDLK_AC_REFRESH","","",N,N],[17,"SDLK_AC_BOOKMARKS","","",N,N],[17,"SDLK_BRIGHTNESSDOWN","","",N,N],[17,"SDLK_BRIGHTNESSUP","","",N,N],[17,"SDLK_DISPLAYSWITCH","","",N,N],[17,"SDLK_KBDILLUMTOGGLE","","",N,N],[17,"SDLK_KBDILLUMDOWN","","",N,N],[17,"SDLK_KBDILLUMUP","","",N,N],[17,"SDLK_EJECT","","",N,N],[17,"SDLK_SLEEP","","",N,N],[17,"SDLK_APP1","","",N,N],[17,"SDLK_APP2","","",N,N],[17,"SDLK_AUDIOREWIND","","",N,N],[17,"SDLK_AUDIOFASTFORWARD","","",N,N],[17,"SDL_LOG_CATEGORY_APPLICATION","","",N,N],[17,"SDL_LOG_CATEGORY_ERROR","","",N,N],[17,"SDL_LOG_CATEGORY_ASSERT","","",N,N],[17,"SDL_LOG_CATEGORY_SYSTEM","","",N,N],[17,"SDL_LOG_CATEGORY_AUDIO","","",N,N],[17,"SDL_LOG_CATEGORY_VIDEO","","",N,N],[17,"SDL_LOG_CATEGORY_RENDER","","",N,N],[17,"SDL_LOG_CATEGORY_INPUT","","",N,N],[17,"SDL_LOG_CATEGORY_TEST","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED1","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED2","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED3","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED4","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED5","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED6","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED7","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED8","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED9","","",N,N],[17,"SDL_LOG_CATEGORY_RESERVED10","","",N,N],[17,"SDL_LOG_CATEGORY_CUSTOM","","",N,N],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,N],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,N],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,N],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,N],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[["self"]],["u"]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"try_into","","",255,[[["self"]],["result"]]],[11,"get_type_id","","",255,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,N],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,N],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[["self"]],["u"]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"try_into","","",257,[[["self"]],["result"]]],[11,"get_type_id","","",257,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,N],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,N],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,N],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[["self"]],["u"]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"try_into","","",260,[[["self"]],["result"]]],[11,"get_type_id","","",260,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,N],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,N],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,N],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[["self"]],["u"]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"try_into","","",263,[[["self"]],["result"]]],[11,"get_type_id","","",263,[[["self"]],["typeid"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,N],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,N],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,N],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,N],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,N],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,N],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,N],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,N],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,N],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,N],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,N],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,N],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,N],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,N],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,N],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,N],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[["self"]],["u"]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"try_into","","",271,[[["self"]],["result"]]],[11,"get_type_id","","",271,[[["self"]],["typeid"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,N],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,N],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,N],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,N],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,N],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,N],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,N],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,N],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,N],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,N],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,N],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,N],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[["self"]],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"try_into","","",161,[[["self"]],["result"]]],[11,"get_type_id","","",161,[[["self"]],["typeid"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,N],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,N],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,N],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[["self"]],["u"]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"try_into","","",273,[[["self"]],["result"]]],[11,"get_type_id","","",273,[[["self"]],["typeid"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,N],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,N],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[["self"]],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"try_into","","",164,[[["self"]],["result"]]],[11,"get_type_id","","",164,[[["self"]],["typeid"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,N],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,N],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,N],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[["self"]],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"try_into","","",171,[[["self"]],["result"]]],[11,"get_type_id","","",171,[[["self"]],["typeid"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,N],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,N],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,N],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[["self"]],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"try_into","","",174,[[["self"]],["result"]]],[11,"get_type_id","","",174,[[["self"]],["typeid"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,N],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,N],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,N],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[["self"]],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"try_into","","",178,[[["self"]],["result"]]],[11,"get_type_id","","",178,[[["self"]],["typeid"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,N],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,N],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,N],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[["self"]],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"try_into","","",182,[[["self"]],["result"]]],[11,"get_type_id","","",182,[[["self"]],["typeid"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,N],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,N],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,N],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[["self"]],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"try_into","","",185,[[["self"]],["result"]]],[11,"get_type_id","","",185,[[["self"]],["typeid"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,N],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,N],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,N],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[["self"]],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"try_into","","",189,[[["self"]],["result"]]],[11,"get_type_id","","",189,[[["self"]],["typeid"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,N],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,N],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,N],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,N],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,N],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,N],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,N],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,N],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,N],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,N],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,N],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,N],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,N],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,N],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,N],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,N],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,N],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,N],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[["self"]],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"try_into","","",218,[[["self"]],["result"]]],[11,"get_type_id","","",218,[[["self"]],["typeid"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,N],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,N],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[["self"]],["u"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"try_into","","",220,[[["self"]],["result"]]],[11,"get_type_id","","",220,[[["self"]],["typeid"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,N],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,N],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,N],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,N],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,N],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,N],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[["self"]],["u"]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"try_into","","",232,[[["self"]],["result"]]],[11,"get_type_id","","",232,[[["self"]],["typeid"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,N],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,N],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[["self"]],["u"]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"try_into","","",234,[[["self"]],["result"]]],[11,"get_type_id","","",234,[[["self"]],["typeid"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,N],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,N],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,N],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,N],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,N],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[["self"]],["u"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"try_into","","",243,[[["self"]],["result"]]],[11,"get_type_id","","",243,[[["self"]],["typeid"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,N],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,N],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,N],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[["self"]],["u"]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"try_into","","",248,[[["self"]],["result"]]],[11,"get_type_id","","",248,[[["self"]],["typeid"]]],[11,"to_owned","sdl2_sys::mixer","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,N],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,N],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"to_owned","sdl2_sys::ttf","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,N],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[["self"]],["u"]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"try_into","","",276,[[["self"]],["result"]]],[11,"get_type_id","","",276,[[["self"]],["typeid"]]],[11,"to_owned","sdl2_sys::gfx::framerate","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"eq","sdl2_sys","",193,[[["self"],["sdl_bool"]],["bool"]]],[11,"eq","","",194,[[["self"],["sdl_dummy_enum"]],["bool"]]],[11,"eq","","",195,[[["self"],["sdl_assertstate"]],["bool"]]],[11,"eq","","",196,[[["self"],["sdl_errorcode"]],["bool"]]],[11,"eq","","",197,[[["self"],["sdl_threadpriority"]],["bool"]]],[11,"eq","","",198,[[["self"],["sdl_audiostatus"]],["bool"]]],[11,"eq","","",199,[[["self"],["_bindgen_ty_1"]],["bool"]]],[11,"eq","","",200,[[["self"],["_bindgen_ty_2"]],["bool"]]],[11,"eq","","",201,[[["self"],["_bindgen_ty_3"]],["bool"]]],[11,"eq","","",202,[[["self"],["_bindgen_ty_4"]],["bool"]]],[11,"eq","","",203,[[["self"],["_bindgen_ty_5"]],["bool"]]],[11,"eq","","",204,[[["self"],["_bindgen_ty_6"]],["bool"]]],[11,"eq","","",205,[[["self"],["sdl_blendmode"]],["bool"]]],[11,"eq","","",206,[[["self"],["sdl_blendoperation"]],["bool"]]],[11,"eq","","",207,[[["self"],["sdl_blendfactor"]],["bool"]]],[11,"eq","","",208,[[["self"],["sdl_yuv_conversion_mode"]],["bool"]]],[11,"eq","","",209,[[["self"],["sdl_windowflags"]],["bool"]]],[11,"eq","","",210,[[["self"],["sdl_windoweventid"]],["bool"]]],[11,"eq","","",211,[[["self"],["sdl_displayeventid"]],["bool"]]],[11,"eq","","",212,[[["self"],["sdl_displayorientation"]],["bool"]]],[11,"eq","","",213,[[["self"],["sdl_glattr"]],["bool"]]],[11,"eq","","",214,[[["self"],["sdl_glprofile"]],["bool"]]],[11,"eq","","",215,[[["self"],["sdl_glcontextflag"]],["bool"]]],[11,"eq","","",216,[[["self"],["sdl_glcontextreleaseflag"]],["bool"]]],[11,"eq","","",217,[[["self"],["sdl_glcontextresetnotification"]],["bool"]]],[11,"eq","","",218,[[["self"],["sdl_hittestresult"]],["bool"]]],[11,"eq","","",219,[[["self"],["sdl_scancode"]],["bool"]]],[11,"eq","","",220,[[["self"],["_bindgen_ty_7"]],["bool"]]],[11,"eq","","",221,[[["self"],["sdl_keymod"]],["bool"]]],[11,"eq","","",222,[[["self"],["sdl_systemcursor"]],["bool"]]],[11,"eq","","",223,[[["self"],["sdl_mousewheeldirection"]],["bool"]]],[11,"eq","","",224,[[["self"],["sdl_joysticktype"]],["bool"]]],[11,"eq","","",225,[[["self"],["sdl_joystickpowerlevel"]],["bool"]]],[11,"eq","","",226,[[["self"],["sdl_gamecontrollerbindtype"]],["bool"]]],[11,"eq","","",227,[[["self"],["sdl_gamecontrolleraxis"]],["bool"]]],[11,"eq","","",228,[[["self"],["sdl_gamecontrollerbutton"]],["bool"]]],[11,"eq","","",229,[[["self"],["sdl_eventtype"]],["bool"]]],[11,"eq","","",230,[[["self"],["sdl_eventaction"]],["bool"]]],[11,"eq","","",231,[[["self"],["sdl_hintpriority"]],["bool"]]],[11,"eq","","",232,[[["self"],["_bindgen_ty_8"]],["bool"]]],[11,"eq","","",233,[[["self"],["sdl_logpriority"]],["bool"]]],[11,"eq","","",234,[[["self"],["sdl_messageboxflags"]],["bool"]]],[11,"eq","","",235,[[["self"],["sdl_messageboxbuttonflags"]],["bool"]]],[11,"eq","","",236,[[["self"],["sdl_messageboxcolortype"]],["bool"]]],[11,"eq","","",237,[[["self"],["sdl_powerstate"]],["bool"]]],[11,"eq","","",238,[[["self"],["sdl_rendererflags"]],["bool"]]],[11,"eq","","",239,[[["self"],["sdl_textureaccess"]],["bool"]]],[11,"eq","","",240,[[["self"],["sdl_texturemodulate"]],["bool"]]],[11,"eq","","",241,[[["self"],["sdl_rendererflip"]],["bool"]]],[11,"eq","","",242,[[["self"],["sdl_sensortype"]],["bool"]]],[11,"eq","","",243,[[["self"],["windowshapemode"]],["bool"]]],[11,"eq","","",244,[[["self"],["xorientation"]],["bool"]]],[11,"eq","","",245,[[["self"],["ximcaretdirection"]],["bool"]]],[11,"eq","","",246,[[["self"],["ximcaretstyle"]],["bool"]]],[11,"eq","","",247,[[["self"],["ximstatusdatatype"]],["bool"]]],[11,"eq","","",248,[[["self"],["sdl_syswm_type"]],["bool"]]],[11,"clone","","",0,[[["self"]],["__fsid_t"]]],[11,"clone","","",193,[[["self"]],["sdl_bool"]]],[11,"clone","","",194,[[["self"]],["sdl_dummy_enum"]]],[11,"clone","","",251,[[["self"]],["_sdl_iconv_t"]]],[11,"clone","","",195,[[["self"]],["sdl_assertstate"]]],[11,"clone","","",1,[[["self"]],["sdl_assertdata"]]],[11,"clone","","",2,[[["self"]],["sdl_atomic_t"]]],[11,"clone","","",196,[[["self"]],["sdl_errorcode"]]],[11,"clone","","",252,[[["self"]],["sdl_mutex"]]],[11,"clone","","",253,[[["self"]],["sdl_semaphore"]]],[11,"clone","","",254,[[["self"]],["sdl_cond"]]],[11,"clone","","",255,[[["self"]],["sdl_thread"]]],[11,"clone","","",197,[[["self"]],["sdl_threadpriority"]]],[11,"clone","","",3,[[["self"]],["sdl_rwops"]]],[11,"clone","","",169,[[["self"]],["sdl_rwops__bindgen_ty_1"]]],[11,"clone","","",4,[[["self"]],["sdl_rwops__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",5,[[["self"]],["sdl_rwops__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",6,[[["self"]],["sdl_audiospec"]]],[11,"clone","","",7,[[["self"]],["sdl_audiocvt"]]],[11,"clone","","",198,[[["self"]],["sdl_audiostatus"]]],[11,"clone","","",256,[[["self"]],["_sdl_audiostream"]]],[11,"clone","","",8,[[["self"]],["div_t"]]],[11,"clone","","",9,[[["self"]],["ldiv_t"]]],[11,"clone","","",10,[[["self"]],["lldiv_t"]]],[11,"clone","","",11,[[["self"]],["__sigset_t"]]],[11,"clone","","",12,[[["self"]],["timeval"]]],[11,"clone","","",13,[[["self"]],["timespec"]]],[11,"clone","","",14,[[["self"]],["fd_set"]]],[11,"clone","","",15,[[["self"]],["__pthread_rwlock_arch_t"]]],[11,"clone","","",16,[[["self"]],["__pthread_internal_list"]]],[11,"clone","","",17,[[["self"]],["__pthread_mutex_s"]]],[11,"clone","","",18,[[["self"]],["__pthread_cond_s"]]],[11,"clone","","",170,[[["self"]],["__pthread_cond_s__bindgen_ty_1"]]],[11,"clone","","",19,[[["self"]],["__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",171,[[["self"]],["__pthread_cond_s__bindgen_ty_2"]]],[11,"clone","","",20,[[["self"]],["__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"]]],[11,"clone","","",172,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",173,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",174,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",175,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",176,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",177,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",178,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",179,[[["self"]],["pthread_barrier_t"]]],[11,"clone","","",180,[[["self"]],["pthread_barrierattr_t"]]],[11,"clone","","",21,[[["self"]],["random_data"]]],[11,"clone","","",22,[[["self"]],["drand48_data"]]],[11,"clone","","",199,[[["self"]],["_bindgen_ty_1"]]],[11,"clone","","",200,[[["self"]],["_bindgen_ty_2"]]],[11,"clone","","",201,[[["self"]],["_bindgen_ty_3"]]],[11,"clone","","",202,[[["self"]],["_bindgen_ty_4"]]],[11,"clone","","",203,[[["self"]],["_bindgen_ty_5"]]],[11,"clone","","",204,[[["self"]],["_bindgen_ty_6"]]],[11,"clone","","",23,[[["self"]],["sdl_color"]]],[11,"clone","","",24,[[["self"]],["sdl_palette"]]],[11,"clone","","",25,[[["self"]],["sdl_pixelformat"]]],[11,"clone","","",26,[[["self"]],["sdl_point"]]],[11,"clone","","",27,[[["self"]],["sdl_rect"]]],[11,"clone","","",205,[[["self"]],["sdl_blendmode"]]],[11,"clone","","",206,[[["self"]],["sdl_blendoperation"]]],[11,"clone","","",207,[[["self"]],["sdl_blendfactor"]]],[11,"clone","","",28,[[["self"]],["sdl_surface"]]],[11,"clone","","",208,[[["self"]],["sdl_yuv_conversion_mode"]]],[11,"clone","","",29,[[["self"]],["sdl_displaymode"]]],[11,"clone","","",257,[[["self"]],["sdl_window"]]],[11,"clone","","",209,[[["self"]],["sdl_windowflags"]]],[11,"clone","","",210,[[["self"]],["sdl_windoweventid"]]],[11,"clone","","",211,[[["self"]],["sdl_displayeventid"]]],[11,"clone","","",212,[[["self"]],["sdl_displayorientation"]]],[11,"clone","","",213,[[["self"]],["sdl_glattr"]]],[11,"clone","","",214,[[["self"]],["sdl_glprofile"]]],[11,"clone","","",215,[[["self"]],["sdl_glcontextflag"]]],[11,"clone","","",216,[[["self"]],["sdl_glcontextreleaseflag"]]],[11,"clone","","",217,[[["self"]],["sdl_glcontextresetnotification"]]],[11,"clone","","",218,[[["self"]],["sdl_hittestresult"]]],[11,"clone","","",219,[[["self"]],["sdl_scancode"]]],[11,"clone","","",220,[[["self"]],["_bindgen_ty_7"]]],[11,"clone","","",221,[[["self"]],["sdl_keymod"]]],[11,"clone","","",30,[[["self"]],["sdl_keysym"]]],[11,"clone","","",258,[[["self"]],["sdl_cursor"]]],[11,"clone","","",222,[[["self"]],["sdl_systemcursor"]]],[11,"clone","","",223,[[["self"]],["sdl_mousewheeldirection"]]],[11,"clone","","",259,[[["self"]],["_sdl_joystick"]]],[11,"clone","","",31,[[["self"]],["sdl_joystickguid"]]],[11,"clone","","",224,[[["self"]],["sdl_joysticktype"]]],[11,"clone","","",225,[[["self"]],["sdl_joystickpowerlevel"]]],[11,"clone","","",260,[[["self"]],["_sdl_gamecontroller"]]],[11,"clone","","",226,[[["self"]],["sdl_gamecontrollerbindtype"]]],[11,"clone","","",32,[[["self"]],["sdl_gamecontrollerbuttonbind"]]],[11,"clone","","",181,[[["self"]],["sdl_gamecontrollerbuttonbind__bindgen_ty_1"]]],[11,"clone","","",33,[[["self"]],["sdl_gamecontrollerbuttonbind__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",227,[[["self"]],["sdl_gamecontrolleraxis"]]],[11,"clone","","",228,[[["self"]],["sdl_gamecontrollerbutton"]]],[11,"clone","","",34,[[["self"]],["sdl_finger"]]],[11,"clone","","",229,[[["self"]],["sdl_eventtype"]]],[11,"clone","","",35,[[["self"]],["sdl_commonevent"]]],[11,"clone","","",36,[[["self"]],["sdl_displayevent"]]],[11,"clone","","",37,[[["self"]],["sdl_windowevent"]]],[11,"clone","","",38,[[["self"]],["sdl_keyboardevent"]]],[11,"clone","","",39,[[["self"]],["sdl_texteditingevent"]]],[11,"clone","","",40,[[["self"]],["sdl_textinputevent"]]],[11,"clone","","",41,[[["self"]],["sdl_mousemotionevent"]]],[11,"clone","","",42,[[["self"]],["sdl_mousebuttonevent"]]],[11,"clone","","",43,[[["self"]],["sdl_mousewheelevent"]]],[11,"clone","","",44,[[["self"]],["sdl_joyaxisevent"]]],[11,"clone","","",45,[[["self"]],["sdl_joyballevent"]]],[11,"clone","","",46,[[["self"]],["sdl_joyhatevent"]]],[11,"clone","","",47,[[["self"]],["sdl_joybuttonevent"]]],[11,"clone","","",48,[[["self"]],["sdl_joydeviceevent"]]],[11,"clone","","",49,[[["self"]],["sdl_controlleraxisevent"]]],[11,"clone","","",50,[[["self"]],["sdl_controllerbuttonevent"]]],[11,"clone","","",51,[[["self"]],["sdl_controllerdeviceevent"]]],[11,"clone","","",52,[[["self"]],["sdl_audiodeviceevent"]]],[11,"clone","","",53,[[["self"]],["sdl_touchfingerevent"]]],[11,"clone","","",54,[[["self"]],["sdl_multigestureevent"]]],[11,"clone","","",55,[[["self"]],["sdl_dollargestureevent"]]],[11,"clone","","",56,[[["self"]],["sdl_dropevent"]]],[11,"clone","","",57,[[["self"]],["sdl_sensorevent"]]],[11,"clone","","",58,[[["self"]],["sdl_quitevent"]]],[11,"clone","","",59,[[["self"]],["sdl_osevent"]]],[11,"clone","","",60,[[["self"]],["sdl_userevent"]]],[11,"clone","","",61,[[["self"]],["sdl_syswmevent"]]],[11,"clone","","",182,[[["self"]],["sdl_event"]]],[11,"clone","","",230,[[["self"]],["sdl_eventaction"]]],[11,"clone","","",261,[[["self"]],["_sdl_haptic"]]],[11,"clone","","",62,[[["self"]],["sdl_hapticdirection"]]],[11,"clone","","",63,[[["self"]],["sdl_hapticconstant"]]],[11,"clone","","",64,[[["self"]],["sdl_hapticperiodic"]]],[11,"clone","","",65,[[["self"]],["sdl_hapticcondition"]]],[11,"clone","","",66,[[["self"]],["sdl_hapticramp"]]],[11,"clone","","",67,[[["self"]],["sdl_hapticleftright"]]],[11,"clone","","",68,[[["self"]],["sdl_hapticcustom"]]],[11,"clone","","",183,[[["self"]],["sdl_hapticeffect"]]],[11,"clone","","",231,[[["self"]],["sdl_hintpriority"]]],[11,"clone","","",232,[[["self"]],["_bindgen_ty_8"]]],[11,"clone","","",233,[[["self"]],["sdl_logpriority"]]],[11,"clone","","",234,[[["self"]],["sdl_messageboxflags"]]],[11,"clone","","",235,[[["self"]],["sdl_messageboxbuttonflags"]]],[11,"clone","","",69,[[["self"]],["sdl_messageboxbuttondata"]]],[11,"clone","","",70,[[["self"]],["sdl_messageboxcolor"]]],[11,"clone","","",236,[[["self"]],["sdl_messageboxcolortype"]]],[11,"clone","","",71,[[["self"]],["sdl_messageboxcolorscheme"]]],[11,"clone","","",72,[[["self"]],["sdl_messageboxdata"]]],[11,"clone","","",237,[[["self"]],["sdl_powerstate"]]],[11,"clone","","",238,[[["self"]],["sdl_rendererflags"]]],[11,"clone","","",73,[[["self"]],["sdl_rendererinfo"]]],[11,"clone","","",239,[[["self"]],["sdl_textureaccess"]]],[11,"clone","","",240,[[["self"]],["sdl_texturemodulate"]]],[11,"clone","","",241,[[["self"]],["sdl_rendererflip"]]],[11,"clone","","",262,[[["self"]],["sdl_renderer"]]],[11,"clone","","",263,[[["self"]],["sdl_texture"]]],[11,"clone","","",264,[[["self"]],["_sdl_sensor"]]],[11,"clone","","",242,[[["self"]],["sdl_sensortype"]]],[11,"clone","","",243,[[["self"]],["windowshapemode"]]],[11,"clone","","",184,[[["self"]],["sdl_windowshapeparams"]]],[11,"clone","","",74,[[["self"]],["sdl_windowshapemode"]]],[11,"clone","","",75,[[["self"]],["sdl_version"]]],[11,"clone","","",76,[[["self"]],["_xextdata"]]],[11,"clone","","",77,[[["self"]],["xextcodes"]]],[11,"clone","","",78,[[["self"]],["xpixmapformatvalues"]]],[11,"clone","","",79,[[["self"]],["xgcvalues"]]],[11,"clone","","",265,[[["self"]],["_xgc"]]],[11,"clone","","",80,[[["self"]],["visual"]]],[11,"clone","","",81,[[["self"]],["depth"]]],[11,"clone","","",266,[[["self"]],["_xdisplay"]]],[11,"clone","","",82,[[["self"]],["screen"]]],[11,"clone","","",83,[[["self"]],["screenformat"]]],[11,"clone","","",84,[[["self"]],["xsetwindowattributes"]]],[11,"clone","","",85,[[["self"]],["xwindowattributes"]]],[11,"clone","","",86,[[["self"]],["xhostaddress"]]],[11,"clone","","",87,[[["self"]],["xserverinterpretedaddress"]]],[11,"clone","","",88,[[["self"]],["_ximage"]]],[11,"clone","","",89,[[["self"]],["_ximage_funcs"]]],[11,"clone","","",90,[[["self"]],["xwindowchanges"]]],[11,"clone","","",91,[[["self"]],["xcolor"]]],[11,"clone","","",92,[[["self"]],["xsegment"]]],[11,"clone","","",93,[[["self"]],["xpoint"]]],[11,"clone","","",94,[[["self"]],["xrectangle"]]],[11,"clone","","",95,[[["self"]],["xarc"]]],[11,"clone","","",96,[[["self"]],["xkeyboardcontrol"]]],[11,"clone","","",97,[[["self"]],["xkeyboardstate"]]],[11,"clone","","",98,[[["self"]],["xtimecoord"]]],[11,"clone","","",99,[[["self"]],["xmodifierkeymap"]]],[11,"clone","","",267,[[["self"]],["_xprivate"]]],[11,"clone","","",268,[[["self"]],["_xrmhashbucketrec"]]],[11,"clone","","",100,[[["self"]],["_bindgen_ty_9"]]],[11,"clone","","",101,[[["self"]],["xkeyevent"]]],[11,"clone","","",102,[[["self"]],["xbuttonevent"]]],[11,"clone","","",103,[[["self"]],["xmotionevent"]]],[11,"clone","","",104,[[["self"]],["xcrossingevent"]]],[11,"clone","","",105,[[["self"]],["xfocuschangeevent"]]],[11,"clone","","",106,[[["self"]],["xkeymapevent"]]],[11,"clone","","",107,[[["self"]],["xexposeevent"]]],[11,"clone","","",108,[[["self"]],["xgraphicsexposeevent"]]],[11,"clone","","",109,[[["self"]],["xnoexposeevent"]]],[11,"clone","","",110,[[["self"]],["xvisibilityevent"]]],[11,"clone","","",111,[[["self"]],["xcreatewindowevent"]]],[11,"clone","","",112,[[["self"]],["xdestroywindowevent"]]],[11,"clone","","",113,[[["self"]],["xunmapevent"]]],[11,"clone","","",114,[[["self"]],["xmapevent"]]],[11,"clone","","",115,[[["self"]],["xmaprequestevent"]]],[11,"clone","","",116,[[["self"]],["xreparentevent"]]],[11,"clone","","",117,[[["self"]],["xconfigureevent"]]],[11,"clone","","",118,[[["self"]],["xgravityevent"]]],[11,"clone","","",119,[[["self"]],["xresizerequestevent"]]],[11,"clone","","",120,[[["self"]],["xconfigurerequestevent"]]],[11,"clone","","",121,[[["self"]],["xcirculateevent"]]],[11,"clone","","",122,[[["self"]],["xcirculaterequestevent"]]],[11,"clone","","",123,[[["self"]],["xpropertyevent"]]],[11,"clone","","",124,[[["self"]],["xselectionclearevent"]]],[11,"clone","","",125,[[["self"]],["xselectionrequestevent"]]],[11,"clone","","",126,[[["self"]],["xselectionevent"]]],[11,"clone","","",127,[[["self"]],["xcolormapevent"]]],[11,"clone","","",128,[[["self"]],["xclientmessageevent"]]],[11,"clone","","",185,[[["self"]],["xclientmessageevent__bindgen_ty_1"]]],[11,"clone","","",129,[[["self"]],["xmappingevent"]]],[11,"clone","","",130,[[["self"]],["xerrorevent"]]],[11,"clone","","",131,[[["self"]],["xanyevent"]]],[11,"clone","","",132,[[["self"]],["xgenericevent"]]],[11,"clone","","",133,[[["self"]],["xgenericeventcookie"]]],[11,"clone","","",186,[[["self"]],["_xevent"]]],[11,"clone","","",134,[[["self"]],["xcharstruct"]]],[11,"clone","","",135,[[["self"]],["xfontprop"]]],[11,"clone","","",136,[[["self"]],["xfontstruct"]]],[11,"clone","","",137,[[["self"]],["xtextitem"]]],[11,"clone","","",138,[[["self"]],["xchar2b"]]],[11,"clone","","",139,[[["self"]],["xtextitem16"]]],[11,"clone","","",187,[[["self"]],["xedataobject"]]],[11,"clone","","",140,[[["self"]],["xfontsetextents"]]],[11,"clone","","",269,[[["self"]],["_xom"]]],[11,"clone","","",270,[[["self"]],["_xoc"]]],[11,"clone","","",141,[[["self"]],["xmbtextitem"]]],[11,"clone","","",142,[[["self"]],["xwctextitem"]]],[11,"clone","","",143,[[["self"]],["xomcharsetlist"]]],[11,"clone","","",244,[[["self"]],["xorientation"]]],[11,"clone","","",144,[[["self"]],["xomorientation"]]],[11,"clone","","",145,[[["self"]],["xomfontinfo"]]],[11,"clone","","",271,[[["self"]],["_xim"]]],[11,"clone","","",272,[[["self"]],["_xic"]]],[11,"clone","","",146,[[["self"]],["ximstyles"]]],[11,"clone","","",147,[[["self"]],["ximcallback"]]],[11,"clone","","",148,[[["self"]],["xiccallback"]]],[11,"clone","","",149,[[["self"]],["_ximtext"]]],[11,"clone","","",188,[[["self"]],["_ximtext__bindgen_ty_1"]]],[11,"clone","","",150,[[["self"]],["_ximpreeditstatenotifycallbackstruct"]]],[11,"clone","","",151,[[["self"]],["_ximstringconversiontext"]]],[11,"clone","","",189,[[["self"]],["_ximstringconversiontext__bindgen_ty_1"]]],[11,"clone","","",245,[[["self"]],["ximcaretdirection"]]],[11,"clone","","",152,[[["self"]],["_ximstringconversioncallbackstruct"]]],[11,"clone","","",153,[[["self"]],["_ximpreeditdrawcallbackstruct"]]],[11,"clone","","",246,[[["self"]],["ximcaretstyle"]]],[11,"clone","","",154,[[["self"]],["_ximpreeditcaretcallbackstruct"]]],[11,"clone","","",247,[[["self"]],["ximstatusdatatype"]]],[11,"clone","","",155,[[["self"]],["_ximstatusdrawcallbackstruct"]]],[11,"clone","","",190,[[["self"]],["_ximstatusdrawcallbackstruct__bindgen_ty_1"]]],[11,"clone","","",156,[[["self"]],["_ximhotkeytrigger"]]],[11,"clone","","",157,[[["self"]],["_ximhotkeytriggers"]]],[11,"clone","","",158,[[["self"]],["ximvalueslist"]]],[11,"clone","","",248,[[["self"]],["sdl_syswm_type"]]],[11,"clone","","",159,[[["self"]],["sdl_syswmmsg"]]],[11,"clone","","",191,[[["self"]],["sdl_syswmmsg__bindgen_ty_1"]]],[11,"clone","","",160,[[["self"]],["sdl_syswmmsg__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",161,[[["self"]],["sdl_syswminfo"]]],[11,"clone","","",192,[[["self"]],["sdl_syswminfo__bindgen_ty_1"]]],[11,"clone","","",162,[[["self"]],["sdl_syswminfo__bindgen_ty_1__bindgen_ty_1"]]],[11,"clone","","",163,[[["self"]],["sdl_syswminfo__bindgen_ty_1__bindgen_ty_2"]]],[11,"clone","","",273,[[["self"]],["vkinstance_t"]]],[11,"clone","","",274,[[["self"]],["vksurfacekhr_t"]]],[11,"clone","","",164,[[["self"]],["__va_list_tag"]]],[11,"clone","","",165,[[["self"]],["sdl_blitmap"]]],[11,"clone","","",166,[[["self"]],["wl_display"]]],[11,"clone","","",167,[[["self"]],["wl_surface"]]],[11,"clone","","",168,[[["self"]],["wl_shell_surface"]]],[11,"clone","sdl2_sys::mixer","",249,[[["self"]],["mix_chunk"]]],[11,"clone","","",275,[[["self"]],["_mix_music"]]],[11,"clone","sdl2_sys::ttf","",276,[[["self"]],["_ttf_font"]]],[11,"clone","sdl2_sys::gfx::framerate","",250,[[["self"]],["fpsmanager"]]],[11,"fmt","sdl2_sys","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",251,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",252,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",253,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",254,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",255,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",256,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",257,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",211,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",258,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",259,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",260,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",237,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",239,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",262,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",263,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",264,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",242,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",243,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",266,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",268,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",269,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",270,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",248,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",274,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2_sys::mixer","",249,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",275,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2_sys::ttf","",276,[[["self"],["formatter"]],["result"]]],[11,"fmt","sdl2_sys::gfx::framerate","",250,[[["self"],["formatter"]],["result"]]],[11,"hash","sdl2_sys","",193,N],[11,"hash","","",194,N],[11,"hash","","",195,N],[11,"hash","","",196,N],[11,"hash","","",197,N],[11,"hash","","",198,N],[11,"hash","","",199,N],[11,"hash","","",200,N],[11,"hash","","",201,N],[11,"hash","","",202,N],[11,"hash","","",203,N],[11,"hash","","",204,N],[11,"hash","","",205,N],[11,"hash","","",206,N],[11,"hash","","",207,N],[11,"hash","","",208,N],[11,"hash","","",209,N],[11,"hash","","",210,N],[11,"hash","","",211,N],[11,"hash","","",212,N],[11,"hash","","",213,N],[11,"hash","","",214,N],[11,"hash","","",215,N],[11,"hash","","",216,N],[11,"hash","","",217,N],[11,"hash","","",218,N],[11,"hash","","",219,N],[11,"hash","","",220,N],[11,"hash","","",221,N],[11,"hash","","",222,N],[11,"hash","","",223,N],[11,"hash","","",224,N],[11,"hash","","",225,N],[11,"hash","","",226,N],[11,"hash","","",227,N],[11,"hash","","",228,N],[11,"hash","","",229,N],[11,"hash","","",230,N],[11,"hash","","",231,N],[11,"hash","","",232,N],[11,"hash","","",233,N],[11,"hash","","",234,N],[11,"hash","","",235,N],[11,"hash","","",236,N],[11,"hash","","",237,N],[11,"hash","","",238,N],[11,"hash","","",239,N],[11,"hash","","",240,N],[11,"hash","","",241,N],[11,"hash","","",242,N],[11,"hash","","",243,N],[11,"hash","","",244,N],[11,"hash","","",245,N],[11,"hash","","",246,N],[11,"hash","","",247,N],[11,"hash","","",248,N]],"paths":[[3,"__fsid_t"],[3,"SDL_AssertData"],[3,"SDL_atomic_t"],[3,"SDL_RWops"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2"],[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_internal_list"],[3,"__pthread_mutex_s"],[3,"__pthread_cond_s"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"random_data"],[3,"drand48_data"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_Point"],[3,"SDL_Rect"],[3,"SDL_Surface"],[3,"SDL_DisplayMode"],[3,"SDL_Keysym"],[3,"SDL_JoystickGUID"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_Finger"],[3,"SDL_CommonEvent"],[3,"SDL_DisplayEvent"],[3,"SDL_WindowEvent"],[3,"SDL_KeyboardEvent"],[3,"SDL_TextEditingEvent"],[3,"SDL_TextInputEvent"],[3,"SDL_MouseMotionEvent"],[3,"SDL_MouseButtonEvent"],[3,"SDL_MouseWheelEvent"],[3,"SDL_JoyAxisEvent"],[3,"SDL_JoyBallEvent"],[3,"SDL_JoyHatEvent"],[3,"SDL_JoyButtonEvent"],[3,"SDL_JoyDeviceEvent"],[3,"SDL_ControllerAxisEvent"],[3,"SDL_ControllerButtonEvent"],[3,"SDL_ControllerDeviceEvent"],[3,"SDL_AudioDeviceEvent"],[3,"SDL_TouchFingerEvent"],[3,"SDL_MultiGestureEvent"],[3,"SDL_DollarGestureEvent"],[3,"SDL_DropEvent"],[3,"SDL_SensorEvent"],[3,"SDL_QuitEvent"],[3,"SDL_OSEvent"],[3,"SDL_UserEvent"],[3,"SDL_SysWMEvent"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[3,"SDL_RendererInfo"],[3,"SDL_WindowShapeMode"],[3,"SDL_version"],[3,"_XExtData"],[3,"XExtCodes"],[3,"XPixmapFormatValues"],[3,"XGCValues"],[3,"Visual"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"XSetWindowAttributes"],[3,"XWindowAttributes"],[3,"XHostAddress"],[3,"XServerInterpretedAddress"],[3,"_XImage"],[3,"_XImage_funcs"],[3,"XWindowChanges"],[3,"XColor"],[3,"XSegment"],[3,"XPoint"],[3,"XRectangle"],[3,"XArc"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XTimeCoord"],[3,"XModifierKeymap"],[3,"_bindgen_ty_9"],[3,"XKeyEvent"],[3,"XButtonEvent"],[3,"XMotionEvent"],[3,"XCrossingEvent"],[3,"XFocusChangeEvent"],[3,"XKeymapEvent"],[3,"XExposeEvent"],[3,"XGraphicsExposeEvent"],[3,"XNoExposeEvent"],[3,"XVisibilityEvent"],[3,"XCreateWindowEvent"],[3,"XDestroyWindowEvent"],[3,"XUnmapEvent"],[3,"XMapEvent"],[3,"XMapRequestEvent"],[3,"XReparentEvent"],[3,"XConfigureEvent"],[3,"XGravityEvent"],[3,"XResizeRequestEvent"],[3,"XConfigureRequestEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XPropertyEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionRequestEvent"],[3,"XSelectionEvent"],[3,"XColormapEvent"],[3,"XClientMessageEvent"],[3,"XMappingEvent"],[3,"XErrorEvent"],[3,"XAnyEvent"],[3,"XGenericEvent"],[3,"XGenericEventCookie"],[3,"XCharStruct"],[3,"XFontProp"],[3,"XFontStruct"],[3,"XTextItem"],[3,"XChar2b"],[3,"XTextItem16"],[3,"XFontSetExtents"],[3,"XmbTextItem"],[3,"XwcTextItem"],[3,"XOMCharSetList"],[3,"XOMOrientation"],[3,"XOMFontInfo"],[3,"XIMStyles"],[3,"XIMCallback"],[3,"XICCallback"],[3,"_XIMText"],[3,"_XIMPreeditStateNotifyCallbackStruct"],[3,"_XIMStringConversionText"],[3,"_XIMStringConversionCallbackStruct"],[3,"_XIMPreeditDrawCallbackStruct"],[3,"_XIMPreeditCaretCallbackStruct"],[3,"_XIMStatusDrawCallbackStruct"],[3,"_XIMHotKeyTrigger"],[3,"_XIMHotKeyTriggers"],[3,"XIMValuesList"],[3,"SDL_SysWMmsg"],[3,"SDL_SysWMmsg__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_SysWMinfo"],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_2"],[3,"__va_list_tag"],[3,"SDL_BlitMap"],[3,"wl_display"],[3,"wl_surface"],[3,"wl_shell_surface"],[19,"SDL_RWops__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[19,"SDL_GameControllerButtonBind__bindgen_ty_1"],[19,"SDL_Event"],[19,"SDL_HapticEffect"],[19,"SDL_WindowShapeParams"],[19,"XClientMessageEvent__bindgen_ty_1"],[19,"_XEvent"],[19,"XEDataObject"],[19,"_XIMText__bindgen_ty_1"],[19,"_XIMStringConversionText__bindgen_ty_1"],[19,"_XIMStatusDrawCallbackStruct__bindgen_ty_1"],[19,"SDL_SysWMmsg__bindgen_ty_1"],[19,"SDL_SysWMinfo__bindgen_ty_1"],[4,"SDL_bool"],[4,"SDL_DUMMY_ENUM"],[4,"SDL_AssertState"],[4,"SDL_errorcode"],[4,"SDL_ThreadPriority"],[4,"SDL_AudioStatus"],[4,"_bindgen_ty_1"],[4,"_bindgen_ty_2"],[4,"_bindgen_ty_3"],[4,"_bindgen_ty_4"],[4,"_bindgen_ty_5"],[4,"_bindgen_ty_6"],[4,"SDL_BlendMode"],[4,"SDL_BlendOperation"],[4,"SDL_BlendFactor"],[4,"SDL_YUV_CONVERSION_MODE"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_DisplayEventID"],[4,"SDL_DisplayOrientation"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_GLcontextFlag"],[4,"SDL_GLcontextReleaseFlag"],[4,"SDL_GLContextResetNotification"],[4,"SDL_HitTestResult"],[4,"SDL_Scancode"],[4,"_bindgen_ty_7"],[4,"SDL_Keymod"],[4,"SDL_SystemCursor"],[4,"SDL_MouseWheelDirection"],[4,"SDL_JoystickType"],[4,"SDL_JoystickPowerLevel"],[4,"SDL_GameControllerBindType"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[4,"SDL_EventType"],[4,"SDL_eventaction"],[4,"SDL_HintPriority"],[4,"_bindgen_ty_8"],[4,"SDL_LogPriority"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[4,"SDL_MessageBoxColorType"],[4,"SDL_PowerState"],[4,"SDL_RendererFlags"],[4,"SDL_TextureAccess"],[4,"SDL_TextureModulate"],[4,"SDL_RendererFlip"],[4,"SDL_SensorType"],[4,"WindowShapeMode"],[4,"XOrientation"],[4,"XIMCaretDirection"],[4,"XIMCaretStyle"],[4,"XIMStatusDataType"],[4,"SDL_SYSWM_TYPE"],[3,"Mix_Chunk"],[3,"FPSmanager"],[3,"_SDL_iconv_t"],[3,"SDL_mutex"],[3,"SDL_semaphore"],[3,"SDL_cond"],[3,"SDL_Thread"],[3,"_SDL_AudioStream"],[3,"SDL_Window"],[3,"SDL_Cursor"],[3,"_SDL_Joystick"],[3,"_SDL_GameController"],[3,"_SDL_Haptic"],[3,"SDL_Renderer"],[3,"SDL_Texture"],[3,"_SDL_Sensor"],[3,"_XGC"],[3,"_XDisplay"],[3,"_XPrivate"],[3,"_XrmHashBucketRec"],[3,"_XOM"],[3,"_XOC"],[3,"_XIM"],[3,"_XIC"],[3,"VkInstance_T"],[3,"VkSurfaceKHR_T"],[3,"_Mix_Music"],[3,"_TTF_Font"]]};
initSearch(searchIndex);
